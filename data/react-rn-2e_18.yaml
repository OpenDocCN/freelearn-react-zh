- en: Geolocation and Maps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 地理位置和地图
- en: In this chapter, you'll learn about the geolocation and mapping capabilities
    of React Native. You'll start learning how to use the geolocation API; then you'll
    move on to using the `MapView` component to plot points of interest and regions.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习React Native的地理位置和地图功能。您将开始学习如何使用地理位置API；然后您将继续使用`MapView`组件来标记兴趣点和区域。
- en: You'll use the `react-native-maps` package to implement maps. The goal of this
    chapter is to go over what's available in React Native for geolocation and React
    Native Maps for maps.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 您将使用`react-native-maps`包来实现地图。本章的目标是介绍React Native中用于地理位置和React Native Maps中地图的功能。
- en: Where am I?
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我在哪里？
- en: The geolocation API that web applications use to figure out where the user is
    located can also be used by React Native applications because the same API has
    been polyfilled. Outside of maps, this API is useful for getting precise coordinates
    from the GPS on mobile devices. You can then use this information to display meaningful
    location data to the user.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Web应用程序用于确定用户位置的地理位置API也可以被React Native应用程序使用，因为相同的API已经进行了polyfill。除了地图之外，此API对于从移动设备的GPS获取精确坐标非常有用。然后，您可以使用这些信息向用户显示有意义的位置数据。
- en: Unfortunately, the data that's returned by the geolocation API is of little
    use on its own; your code has to do the legwork to transform it into something
    useful. For example, latitude and longitude don't mean anything to the user, but
    you can use this data to look up something that is of use to the user. This might
    be as simple as displaying where the user is currently located.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，地理位置API返回的数据本身用处不大；您的代码必须进行一些工作，将其转换为有用的东西。例如，纬度和经度对用户来说毫无意义，但您可以使用这些数据查找对用户有用的信息。这可能只是简单地显示用户当前所在位置。
- en: 'Let''s implement an example that uses the geolocation API of React Native to
    look up coordinates and then use those coordinates to look up human-readable location
    information from the Google Maps API:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们实现一个示例，使用React Native的地理位置API查找坐标，然后使用这些坐标从Google Maps API查找可读的位置信息：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The goal of this component is to render the properties returned by the geolocation
    API on the screen, as well as look up the user's specific location, and display
    it. If you take a look at the `componentDidMount()` method, you'll see that this
    is where most of the interesting code is. The `setPosition()` function is used
    as a callback in a couple of places. Its job is to set the state of your component.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 此组件的目标是在屏幕上呈现地理位置API返回的属性，并查找用户的特定位置并显示它。如果您查看`componentDidMount()`方法，您会发现这里有大部分有趣的代码。`setPosition()`函数在几个地方用作回调。它的工作是设置组件的状态。
- en: First, it sets the `coords` properties. Normally, you wouldn't display this
    data directly, but this is an example that's showing the data that's available
    as part of the geolocation API. Second, it uses the `latitude` and `longitude`
    values to look up the name of where the user is currently, using the Google Maps
    API.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，它设置了`coords`属性。通常，您不会直接显示这些数据，但这是一个示例，展示了地理位置API的可用数据。其次，它使用`latitude`和`longitude`值来查找用户当前所在位置的名称，使用Google
    Maps API。
- en: The `setPosition()` callback is used with `getCurrentPosition()`, which is only
    called once when the component is mounted. You're also using `setPosition()` with
    `watchPosition()`, which calls the callback any time the user's position changes.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`setPosition()`回调函数与`getCurrentPosition()`一起使用，当组件挂载时只调用一次。您还在`watchPosition()`中使用`setPosition()`，它会在用户位置发生变化时调用回调函数。'
- en: The iOS emulator and Android Studio let you change locations via menu options.
    You don't have to install your app on a physical device every time you want to
    test changing locations.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: iOS模拟器和Android Studio允许您通过菜单选项更改位置。您不必每次想要测试更改位置时都在物理设备上安装您的应用程序。
- en: 'Let''s see what this screen looks like once the location data has loaded:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一旦位置数据加载后，这个屏幕是什么样子的：
- en: '![](Images/4c40c4e8-4e0b-4f0f-b5e5-ff18f58dbd79.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/4c40c4e8-4e0b-4f0f-b5e5-ff18f58dbd79.png)'
- en: The address information that was fetched is probably more useful in an application
    than latitude and longitude data. Even better than physical address text is visualizing
    the user's physical location on a map; you'll learn how to do this in the next
    section.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 获取的地址信息在应用程序中可能比纬度和经度数据更有用。比物理地址文本更好的是在地图上可视化用户的物理位置；您将在下一节中学习如何做到这一点。
- en: What's around me?
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 周围有什么？
- en: The `MapView` component from `react-native-maps` is the main tool you'll use
    to render maps in your React Native applications.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`react-native-maps`中的`MapView`组件是您在React Native应用程序中渲染地图时将使用的主要工具。'
- en: 'Let''s implement a basic `MapView` component to see what you get out of the
    box:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们实现一个基本的`MapView`组件，看看您可以从中得到什么。
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The two Boolean properties that you''ve passed to `MapView` do a lot of work
    for you. The `showsUserLocation` property will activate the marker on the map,
    which denotes the physical location of the device running this application. The
    `followUserLocation` property tells the map to update the location marker as the
    device moves around. Let''s see the resulting map:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 您传递给`MapView`的两个布尔属性为您做了很多工作。`showsUserLocation`属性将激活地图上的标记，表示运行此应用程序的设备的物理位置。`followUserLocation`属性告诉地图在设备移动时更新位置标记。让我们看看结果地图：
- en: '![](Images/904b6956-4e7c-4939-96ea-ac5d62ab3341.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/904b6956-4e7c-4939-96ea-ac5d62ab3341.png)'
- en: The current location of the device is clearly marked on the map. By default,
    points of interest are also rendered on the map. These are things in close proximity
    to the user so that they can see what's around them.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 设备的当前位置在地图上清晰标记。默认情况下，地图上也会显示兴趣点。这些是用户附近的事物，让他们可以看到周围的环境。
- en: It's generally a good idea to use the `followUserLocation` property whenever
    using `showsUserLocation`. This makes the map zoom to the region where the user
    is located.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，当使用`showsUserLocation`时最好使用`followUserLocation`属性。这样地图就会缩放到用户所在的区域。
- en: Annotating points of interest
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注释兴趣点
- en: So far, you've seen how the `MapView` component can render the user's current
    location and points of interest around the user. The challenge here is that you
    probably want to show points of interest that are relevant to your application,
    instead of the points of interest that are rendered by default.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经看到`MapView`组件如何渲染用户当前位置和用户周围的兴趣点。这里的挑战是，您可能希望显示与您的应用程序相关的兴趣点，而不是默认渲染的兴趣点。
- en: In this section, you'll learn how to render markers for specific locations on
    the map, as well as render regions on the map.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，您将学习如何在地图上为特定位置渲染标记，以及渲染地图上的区域。
- en: Plotting points
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绘制点
- en: 'Let''s plot some local breweries! Here''s how you pass annotations to the `MapView`
    component:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们标记一些当地的啤酒厂！以下是如何将注释传递给`MapView`组件：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Annotations are exactly what they sound like; additional information rendered
    on top of the basic map geography. In fact, you get annotations by default when
    you render `MapView` components because they will show points of interest. In
    this example, you''ve opted out of this capability by setting the `showsPointsOfInterest`
    property to `false`. Let''s see where these breweries are located:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 注释就像它们听起来的那样；在基本地图地理信息的顶部呈现的额外信息。实际上，当您呈现`MapView`组件时，默认情况下会显示注释，因为它们会显示感兴趣的点。在这个例子中，您通过将`showsPointsOfInterest`属性设置为`false`来选择退出此功能。让我们看看这些啤酒厂的位置：
- en: '![](Images/27add99a-756f-4983-aab4-2d4e4832397e.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/27add99a-756f-4983-aab4-2d4e4832397e.png)'
- en: The callout is displayed when you press the marker that shows the location of
    the brewery on the map. The `title` and the `description` property values that
    you give to `<MapView.Marker>` are used to render this text.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当您按下显示地图上啤酒厂位置的标记时，会显示标注。您给`<MapView.Marker>`的`title`和`description`属性值用于呈现此文本。
- en: Plotting overlays
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绘制叠加层
- en: 'In this last section of this chapter, you''ll learn how to render region overlays.
    A point is a single latitude/longitude coordinate. Think of a region as a connect-the-dots
    drawing of several coordinates. Regions can serve many purposes, such as showing
    where we''re more likely to find IPA drinkers versus stout drinkers. Here''s what
    the code looks like:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的最后一节中，您将学习如何渲染区域叠加层。一个点是一个单一的纬度/经度坐标。将区域视为几个坐标的连线图。区域可以有很多用途，比如显示我们更可能找到IPA饮酒者与stout饮酒者的地方。代码如下所示：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The region data consists of several latitude/longitude coordinates that define
    the shape and location of the region. The rest of this code is mostly about handling
    state when the two text links are pressed. By default, the IPA region is rendered:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 区域数据由几个纬度/经度坐标组成，定义了区域的形状和位置。其余的代码大部分是关于在按下两个文本链接时处理状态。默认情况下，IPA区域被渲染：
- en: '![](Images/020d02e4-fbe2-4f3c-9ae6-9c3874f959f3.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/020d02e4-fbe2-4f3c-9ae6-9c3874f959f3.png)'
- en: 'When the `stout` text is pressed, the IPA overlay is removed from the map and
    the stout region is added:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当按下`stout`文本时，地图上将删除IPA叠加层，并添加stout区域：
- en: '![](Images/f0a99b8a-63de-4988-8042-cc3913a41ecb.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/f0a99b8a-63de-4988-8042-cc3913a41ecb.png)'
- en: Summary
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned about geolocation and mapping in React Native.
    The geolocation API works the same as its web counterpart. The only reliable way
    to use maps in React Native applications is to install the third-party `react-native-maps`
    package.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您了解了React Native中的地理位置和地图。地理位置API的工作方式与其Web对应物相同。在React Native应用程序中使用地图的唯一可靠方式是安装第三方`react-native-maps`包。
- en: You saw the basic configuration `MapView` components, and how it can track the
    user's location, and show relevant points of interest. Then, you saw how to plot
    your own points of interest and regions of interest.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您看到了基本配置`MapView`组件，以及它如何跟踪用户的位置，并显示相关的兴趣点。然后，您看到了如何绘制自己的兴趣点和兴趣区域。
- en: In the next chapter, you'll learn how to collect user input using React Native
    components that resemble HTML form controls.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将学习如何使用类似HTML表单控件的React Native组件收集用户输入。
- en: Test your knowledge
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试你的知识
- en: The geolocation API found in React Native works the same way as the geolocation
    API found in web browsers.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在React Native中找到的地理位置API与Web浏览器中找到的地理位置API的工作方式相同。
- en: Yes, it's the same API.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，它是相同的API。
- en: No, the React Native API has its own distinct features.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，React Native API具有其自己独特的特性。
- en: What is the main purpose of the geolocation API in React Native applications?
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: React Native应用程序中地理位置API的主要目的是什么？
- en: To compute distances from one location to another.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算从一个位置到另一个位置的距离。
- en: To find the latitude and longitude coordinates of the devices and use those
    values with other APIs to look up useful information such as addresses.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找设备的纬度和经度坐标，并将这些值与其他API一起使用，以查找有用信息，如地址。
- en: To look up addresses and other information about those addresses.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找地址和有关这些地址的其他信息。
- en: Can the `MapView` component show points of interest near the user?
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`MapView`组件能够显示用户附近的兴趣点吗？'
- en: Yes, this is enabled by default.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，默认情况下启用了这个功能。
- en: No, you have to manually plot and label everything.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，您必须手动绘制和标记所有内容。
- en: Yes, but you have to use the `showsPointsOfInterest` property.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，但您必须使用`showsPointsOfInterest`属性。
- en: How do you plot points on maps?
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何在地图上标记点？
- en: By passing latitude/longitude array data to the `MapView` component as a property.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将纬度/经度数组数据作为属性传递给`MapView`组件。
- en: By passing coordinates to the `MapView.Marker` component.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将坐标传递给`MapView.Marker`组件。
- en: Further reading
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Take look at the following URLs to get more information:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看以下网址以获取更多信息：
- en: '[https://facebook.github.io/react-native/docs/geolocation](https://facebook.github.io/react-native/docs/geolocation)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://facebook.github.io/react-native/docs/geolocation](https://facebook.github.io/react-native/docs/geolocation)'
- en: '[https://github.com/react-community/react-native-maps](https://github.com/react-community/react-native-maps)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/react-community/react-native-maps](https://github.com/react-community/react-native-maps)'
