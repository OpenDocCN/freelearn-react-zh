- en: Preface
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 前言
- en: '**React** is an open source, adaptable JavaScript library for building complex
    user interfaces from small, detached bits called **components**. This book will
    help you to use React effectively to make your applications more flexible, easier
    to maintain, and improve their performance while giving your workflow a huge boost
    by improving speed without affecting quality.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: React是一个开源的、适应性强的JavaScript库，用于从称为组件的小型、独立的部分构建复杂的用户界面。本书将帮助您有效地使用React，使您的应用程序更加灵活、易于维护，并提高其性能，同时通过提高速度而不影响质量来提高工作流程的效率。
- en: You'll start by understanding the internals of React, before gradually moving
    on to writing maintainable and clean code. The chapters that follow will show
    you how to build components that are reusable across the application, how to structure
    applications, and how to create forms that actually work. Later, you will build
    on your knowledge by exploring how to style React components and optimize them
    to make applications faster and more responsive. Finally, you'll learn how to
    write tests effectively and learn how to contribute to React and its ecosystem.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 您将首先了解React的内部工作原理，然后逐渐转向编写可维护和清晰的代码。接下来的章节将向您展示如何构建可在整个应用程序中重复使用的组件，如何组织应用程序以及如何创建真正有效的表单。之后，您将通过探索如何为React组件添加样式并优化它们，使应用程序更快、更具响应性。最后，您将学习如何有效地编写测试，并学习如何为React及其生态系统做出贡献。
- en: By the end of this book, you'll be able to avoid the process of trial and error
    and developmental headaches, and instead have the skills you need to efficiently
    build and deploy real-world React web applications.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读本书结束时，您将能够避免试错和开发头疼的过程，而是拥有有效构建和部署真实React web应用程序所需的技能。
- en: Who this book is for
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合对象
- en: This book is for web developers who want to increase their understanding of
    React and apply it to real-life app development. Intermediate-level experience
    with React and JavaScript is assumed.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适用于希望增进对React的理解并将其应用于实际应用程序开发的Web开发人员。假定具有中级水平的React和JavaScript经验。
- en: What this book covers
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容包括
- en: '*Chapter 1*, *Taking Your First Steps with React*, covers some basic concepts
    that are important for following the rest of the book, and that are crucial to
    working with React daily. We will learn how to write declarative code and will
    gain a clear understanding of the difference between the components we create
    and the elements React uses to display instances on the screen. We''ll then learn
    the reasons behind the choice of co-locating logic and templates together, and
    why that unpopular decision has been a big win for React. We will go through the
    reasons why it is common to feel fatigued in the JavaScript ecosystem, but we''ll
    also see how to avoid those problems by following an iterative approach. Finally,
    we will see what the new `create-react-app` CLI is, and with that, we''ll be ready
    to start writing some real code.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*第1章*，*开始使用React*，涵盖了一些对于后续内容至关重要且对于日常使用React至关重要的基本概念。我们将学习如何编写声明性代码，并清楚地了解我们创建的组件与React用于在屏幕上显示实例的元素之间的区别。然后，我们将了解将逻辑和模板放在一起的选择背后的原因，以及为什么这个不受欢迎的决定对React来说是一个巨大的胜利。我们将了解在JavaScript生态系统中感到疲劳是常见的原因，但我们也将看到如何通过迭代方法来避免这些问题。最后，我们将了解新的`create-react-app`
    CLI是什么，有了它，我们就准备好开始编写一些真正的代码了。'
- en: '*Chapter 2*, *Cleaning Up Your Code*, teaches you a great deal about how JSX
    works and how to use it in the right way in our components. We start from the
    basics of the syntax to create a solid knowledge base that will enable us to master
    JSX and its features. We will look at how ESLint and its plugins can help us find
    problems faster and enforce a consistent style guide across our code base. Finally,
    we will go through the basics of functional programming to understand the important
    concepts to use when writing a React application. Now that our code is clean,
    we are ready to start digging deeper into React and learn how to write truly reusable
    components.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章《清理您的代码》教会您大量关于JSX的工作原理以及如何在我们的组件中正确使用它。我们从语法的基础开始，建立坚实的知识基础，使我们能够掌握JSX及其特性。我们将看看ESLint及其插件如何帮助我们更快地发现问题，并强制执行代码库中的一致风格指南。最后，我们将学习函数式编程的基础知识，以理解在编写React应用程序时使用的重要概念。现在我们的代码已经整洁，我们准备深入研究React，并学习如何编写真正可重用的组件。
- en: '*Chapter 3*, *React Hooks*, teaches you how to use the new React Hooks and
    how to build your own Hooks.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章《React Hooks》教会您如何使用新的React Hooks以及如何构建自己的Hooks。
- en: '*Chapter 4*, *Exploring Popular Composition Patterns*, explains how to compose
    our reusable components and make them communicate effectively. Then, we will go
    through some of the most interesting composition patterns in React. We will also
    see how React tried to solve the problem of sharing functionalities between components
    with mixins. We''ll then learn how to deal with context without needing to couple
    our components to it, thanks to HOCs. Finally, we''ll see how we can compose components
    dynamically by following the *FunctionAsChild* pattern.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章《探索流行的组合模式》解释了如何组合我们的可重用组件并使它们有效地进行通信。然后，我们将介绍React中一些最有趣的组合模式。我们还将看到React如何尝试通过混合解决组件之间共享功能的问题。然后，我们将学习如何处理上下文，而无需将我们的组件与其耦合在一起，这要归功于HOCs。最后，我们将看到如何通过遵循“FunctionAsChild”模式来动态组合组件。
- en: '*Chapter 5*, *Understanding GraphQL with a Real Project,* explains how to use
    GraphQL queries and mutations with a real project, where you will learn how to
    build an authentication system with GraphQL, JWT tokens, and Node.js.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章《使用真实项目理解GraphQL》解释了如何在一个真实项目中使用GraphQL查询和变异，您将学习如何使用GraphQL、JWT令牌和Node.js构建身份验证系统。
- en: '*Chapter 6*, *Managing Data*, goes through some of the most common patterns
    to make a child and parent communicate using callbacks. We''ll then learn how
    we can use a common parent to share data across components that are not directly
    connected. We will start with a simple component, which will be able to load data
    from GitHub, and we''ll make it reusable with HOCs, and then go on to learn how
    we can use `react-refetch` to apply data fetching patterns to our components and
    avoid reinventing the wheel. Finally, we''ll learn how to use the new Context
    API.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章《数据管理》介绍了一些常见的模式，以使子组件和父组件使用回调进行通信。然后，我们将学习如何使用一个共同的父组件来在不直接连接的组件之间共享数据。我们将从一个简单的组件开始，它将能够从GitHub加载数据，然后我们将使用HOCs使其可重用，然后继续学习如何使用`react-refetch`将数据获取模式应用到我们的组件中，避免重复造轮子。最后，我们将学习如何使用新的Context
    API。
- en: '*Chapter 7*, *Writing Code for the Browser*, looks at different things we can
    do when we target the browser with React, from form creation to events; from animations
    to SVGs. React gives us a declarative way to manage all the aspects we need to
    deal with when we create a web application. React gives us access to the actual
    DOM nodes in a way that we can perform imperative operations with them, which
    is useful if we need to integrate React with an existing imperative library.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，“为浏览器编写代码”，探讨了当我们使用React针对浏览器时可以做的不同事情，从表单创建到事件；从动画到SVG。React为我们提供了一种声明性的方式来管理我们在创建Web应用程序时需要处理的所有方面。React以一种我们可以执行命令式操作的方式让我们访问实际的DOM节点，这在我们需要将React与现有的命令式库集成时非常有用。
- en: '*Chapter 8*, *Making Your Components Look Beautiful*, studies the reasons why
    regular CSS may not be the best approach for styling components, along with the
    various alternative solutions. Moving through the chapter, we''ll learn to use
    inline styles in React, along with the downsides of this, which can be fixed by
    using the Radium library. At the end, a new library, `styled-components`, will
    be introduced, along with an outline of the modern approach that it offers.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，“让您的组件看起来漂亮”，研究了为什么常规CSS可能不是样式化组件的最佳方法，以及各种替代解决方案。在本章中，我们将学习在React中使用内联样式，以及这种方法的缺点，可以通过使用Radium库来解决。最后，将介绍一个新的库“styled-components”，以及它提供的现代方法的概要。
- en: '*Chapter 9*, *Server-Side Rendering for Fun and Profit*, invites you to follow
    certain steps to set up a server-side rendered application. By the end of this
    chapter, we will be able to build a universal application and be aware of its
    pros and cons.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，“为了乐趣和利润进行服务器端渲染”，邀请您按照一定的步骤设置服务器端渲染的应用程序。到本章末，我们将能够构建一个通用应用程序，并了解其利弊。
- en: '*Chapter 10*, *Improving the Performance of Your Applications*, takes a quick
    look at the basic components of the performance of React, and how we can use some
    APIs to help the library find the optimal path to update the DOM without degrading
    the user experience. We will also learn how to monitor performance and find bottlenecks
    using some tools that we can import into our code base. At the end, we''ll see
    how immutability and *PureComponent* are the perfect tools to build fast React
    applications.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章，“改善您的应用程序的性能”，快速查看了React性能的基本组件，以及我们如何使用一些API来帮助库找到更新DOM的最佳路径，而不会降低用户体验。我们还将学习如何使用一些工具来监视性能并找到瓶颈，这些工具可以导入到我们的代码库中。最后，我们将看到不可变性和*PureComponent*是构建快速React应用程序的完美工具。
- en: '*Chapter 11*, *Testing and Debugging*, explains why it is important to test
    our applications, along with an outline of the most popular tools that we could
    use to create tests with React. We will also learn to set up a Jest environment
    to test components using Enzyme, along with a discussion of what Enzyme is and
    why it is a must for testing React applications. By covering all these topics,
    at the end of the chapter, we will be able to create a test environment from scratch
    and write tests for our application''s components.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章，“测试和调试”，解释了为什么测试我们的应用程序很重要，以及我们可以使用哪些最流行的工具来使用React创建测试的概要。我们还将学习建立一个Jest环境，使用Enzyme测试组件，以及讨论Enzyme是什么以及为什么它对于测试React应用程序是必不可少的。通过涵盖所有这些主题，到本章末，我们将能够从头开始创建一个测试环境，并为我们应用程序的组件编写测试。
- en: '*Chapter 12*, *React Router*, looks at certain steps that will help us to implement
    React Router in our application. Moving ahead, as we complete each section, we
    will add dynamic routes and understand how exactly React Router works. We will
    learn how to install and configure React Router, along with adding a component,
    exact prop, and parameters to routes.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*第12章*，*React Router*，讨论了一些步骤，将帮助我们在应用程序中实现React Router。随着我们完成每个部分，我们将添加动态路由，并了解React
    Router的工作原理。我们将学习如何安装和配置React Router，以及向路由添加组件、exact属性和参数。'
- en: '*Chapter 13*, *Anti-Patterns to be Avoided*, is all about the common anti-patterns
    we should avoid when using React. We will study why mutating the state is harmful
    to performance. Choosing the right keys and helping the reconciler will also be
    covered in this chapter, along with the reason why spreading props on DOM elements
    is bad and how we can avoid doing that.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*第13章*，*应避免的反模式*，讨论了在使用React时应避免的常见反模式。我们将研究为什么改变状态对性能有害。选择正确的键和帮助调和器也将在本章中讨论，以及为什么在DOM元素上扩展props是不好的，以及我们如何避免这样做。'
- en: '*Chapter 14*, *Deploying to Production*, covers how to deploy our React application
    using Node.js and nginx on an Ubuntu server from Google Cloud, along with configuring
    nginx, PM2, and a domain. Implementing CircleCI for continuous integration will
    also be covered.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*第14章*，*部署到生产环境*，涵盖了如何在Google Cloud上的Ubuntu服务器上使用Node.js和nginx部署我们的React应用程序，以及配置nginx、PM2和域。还将介绍如何实施CircleCI进行持续集成。'
- en: '*Chapter 15*, *Next Steps*, demonstrates how we can contribute to the React
    library by opening issues and pull requests, and explains why it is important
    to give back to the community and share our code. At the end, we will cover the
    most important aspects to keep in mind when pushing open source code, along with
    how we can publish an `npm` package and how to use semantic versioning.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '*第15章*，*下一步*，演示了我们如何通过提出问题和拉取请求来为React库做出贡献，并解释了为什么重要的是回馈社区并分享我们的代码。最后，我们将介绍在推送开源代码时需要牢记的最重要的方面，以及如何发布一个`npm`包以及如何使用语义版本控制。'
- en: To get the most out of this book
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: 'To master React, you need to have a fundamental knowledge of JavaScript and
    Node.js. This book is mostly targeted at web developers, and, at the time of writing,
    the following assumptions were made of the reader:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要精通React，您需要对JavaScript和Node.js有基本的了解。本书主要针对Web开发人员，在撰写时，对读者做出了以下假设：
- en: The reader knows how to install the latest version of Node.js.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读者知道如何安装最新版本的Node.js。
- en: The reader is an intermediate developer who can understand JavaScript ES6 syntax.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读者是一名中级开发人员，能够理解JavaScript ES6语法。
- en: The reader has some experience of CLI tools and Node.js syntax.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读者对CLI工具和Node.js语法有一定的经验。
- en: Download the example code files
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/React-17-Design-Patterns-and-Best-Practices-Third-Edition](https://github.com/PacktPublishing/React-17-Design-Patterns-and-Best-Practices-Third-Edition).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub上的[https://github.com/PacktPublishing/React-17-Design-Patterns-and-Best-Practices-Third-Edition](https://github.com/PacktPublishing/React-17-Design-Patterns-and-Best-Practices-Third-Edition)下载本书的示例代码文件。如果代码有更新，将在现有的GitHub存储库上进行更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at  **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有来自丰富书籍和视频目录的其他代码捆绑包可在**[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**上找到。去看看吧！
- en: Download the color images
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载彩色图片
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781800560444_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781800560444_ColorImages.pdf).'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一个PDF文件，其中包含本书中使用的屏幕截图/图表的彩色图像。您可以在这里下载：[https://static.packt-cdn.com/downloads/9781800560444_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781800560444_ColorImages.pdf)。
- en: Conventions used
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了许多文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Mount the downloaded `WebStorm-10*.dmg` disk image file as
    another disk in your system."'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter用户名。以下是一个例子：“将下载的`WebStorm-10*.dmg`磁盘映像文件挂载为系统中的另一个磁盘。”'
- en: 'A block of code is set as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式编写：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select System info from the Administration panel."'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或屏幕上看到的单词。例如，菜单或对话框中的单词会以这种方式出现在文本中。以下是一个例子：“从管理面板中选择系统信息。”'
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会以这种方式出现。提示和技巧会以这种方式出现。
