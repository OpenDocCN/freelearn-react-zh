- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: 'Reactive programming has captured the imagination of programmers for decades.
    Once the gang of four standardized the **observer** design pattern, the term has
    become part of the standard vocabulary of every programmer:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，响应式编程一直吸引着程序员的想象力。自从四人组标准化了观察者设计模式以来，这个术语已经成为每个程序员标准词汇的一部分：
- en: '**Observer** : Define a one-to-many dependency between objects so that when
    one object changes state, all its dependents are notified and updated automatically.–
    Design Patterns, Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides, 1995'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 观察者：定义对象之间的一对多依赖关系，以便当一个对象改变状态时，所有依赖者都会被通知并自动更新。-《设计模式》，Erich Gamma，Richard
    Helm，Ralph Johnson，John Vlissides，1995
- en: Nonetheless, there is a wide variety of technologies, libraries, and frameworks
    implementing theobserver pattern. Yet, MobX is unique in the way it applies this
    pattern to state-management. It has a very friendly syntax, a small core API that
    makes it easy to learn as a beginner, and it can be applied in any JavaScript
    project. Moreover, the library has proven scalable, not just at Mendix where the
    project was first applied, but also in famous projects, such as Microsoft Outlook,
    Battlefield 1 by DICE, Jenkins, Coinbase, and many, many more.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，有各种各样的技术、库和框架实现了观察者模式。然而，MobX在应用这种模式到状态管理方面是独一无二的。它有一个非常友好的语法，一个小的核心API，使初学者很容易学习，并且可以应用在任何JavaScript项目中。此外，该库已被证明是可扩展的，不仅在Mendix首次应用该项目时，而且在著名项目中，如Microsoft
    Outlook，DICE的战地1，Jenkins，Coinbase等等。
- en: 'This book will not just guide you through the basics; it will also immerse
    you in the philosophy of MobX: *Anything that can be derived from the application
    state, should be derived. Automatically.*'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书不仅会指导您了解基础知识；它还会让您沉浸在MobX的哲学中：*任何可以从应用程序状态中派生出来的东西，都应该自动派生出来。*
- en: MobX is not the first of its kind, but it is standing on the shoulders of giants
    and has pushed the boundaries of what is possible with the transparent reactive
    programming paradigm. For example, it is, as far as the authors know, the first
    major library that combines reactivity with synchronous transactions and the first
    to explicitly distinguish the concept of derived-values and automatic side effects
    (reactions).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: MobX并不是第一个这样的库，但它站在巨人的肩膀上，推动了透明响应式编程范例的可能性边界。例如，据作者所知，它是第一个将反应性与同步事务结合起来的主要库，也是第一个明确区分派生值和自动副作用（反应）概念的库。
- en: Unlike many learning materials, this book guides you through the inner workings
    of MobX and its many extension points. This book will hopefully leave a lasting
    impression that an essentially simple (and very readable!) paradigm can be used
    to accomplish tasks that are very challenging, not just in terms of **domain complexity**,
    but also in terms of performance.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 与许多学习材料不同，本书将指导您了解MobX及其许多扩展点的内部工作原理。这本书希望留下一个持久的印象，即一个基本简单（而且非常可读！）的范例可以用来完成非常具有挑战性的任务，不仅在领域复杂性方面，而且在性能方面也是如此。
- en: Who this book is for
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书适合谁
- en: State management plays a crucial role in any application where state is relevant
    across different places in the code base. This is either because there are multiple
    consumers or multiple producers of data. In practice, this means that MobX is
    useful in any application that has a non-trivial amount of data entry or data
    visualization.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 状态管理在任何状态在代码库的不同位置相关的应用程序中起着至关重要的作用。这要么是因为有多个数据的使用者或多个数据的生产者。在实践中，这意味着MobX在任何具有大量数据输入或数据可视化的应用程序中都是有用的。
- en: MobX has official bindings for React.js, Preact, and Angular. However, many
    have used the library in combination with libraries and frameworks such as jQuery,
    konva.js, Next.js, Vue.js, and even Backbone. When working through the book, you
    will discover that the concepts required to use a tool like MobX are universally
    applicable in any environment.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: MobX官方支持React.js、Preact和Angular。然而，许多人将该库与jQuery、konva.js、Next.js、Vue.js甚至Backbone等库和框架结合使用。在阅读本书时，您将发现使用类似MobX这样的工具所需的概念在任何环境中都是通用的。
- en: What this book covers
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[Chapter 1](part0023.html#LTSU0-58c2559ca4304cecab9bc46f496bc070), *Introduction
    to State Management*, starts with a conceptual treatment of *state-management*
    and its many nuances. It introduces the side-effect model and prepares you with
    the philosophy needed to understand MobX. Finally, it gives a speed tour of MobX
    and some of its core building blocks.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章，“状态管理简介”，从概念上介绍了*状态管理*及其许多细微之处。它介绍了副作用模型，并为您准备了理解MobX所需的哲学。最后，它快速介绍了MobX及其一些核心构建模块。
- en: '[Chapter 2](part0035.html#11C3M0-58c2559ca4304cecab9bc46f496bc070), *Observables,
    Actions, and Reactions*, takes a deeper look at the core building blocks of MobX.
    It shows you the various ways of creating observables, using actions to cause
    mutations on the observables, and, finally, the use of reactions to react to any
    changes happening on the observables. These three form the core triad of MobX.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章，“可观察对象、操作和反应”，深入探讨了MobX的核心构建模块。它向您展示了创建可观察对象的各种方法，使用操作对可观察对象进行变化，并最终使用反应来对可观察对象上发生的任何变化做出反应。这三者构成了MobX的核心三部曲。
- en: '[Chapter 3](part0055.html#1KEEU0-58c2559ca4304cecab9bc46f496bc070), *A React
    App with MobX*, combines the knowledge gained so far to power a React App with
    MobX. It tackles the use case of searching books in an online store. The app is
    built by first identifying the core observable state, using actions to mutate
    the state, and using reactions via the `observer()` utility from mobx-react. The
    React components are the observers that react to changes in the observable state
    and automatically render the new state. This chapter will give you an early taste
    of how simple MobX can be for state management in React apps.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章，“使用MobX构建React应用”，结合到目前为止所获得的知识，为React应用提供动力。它解决了在线商店搜索图书的使用案例。该应用首先通过识别核心可观察状态来构建，使用操作来改变状态，并使用mobx-react中的`observer()`实用程序来通过反应。React组件是观察者，它们对可观察状态的变化做出反应，并自动呈现新状态。本章将让您提前体验MobX在React应用中进行状态管理的简单性。
- en: '[Chapter 4](part0065.html#1TVKI0-58c2559ca4304cecab9bc46f496bc070), *Crafting
    the Observable Tree*, puts laser focus on designing the observable state with
    the various options in MobX. We will tackle how to limit the observability in
    MobX and learn how to create a tight observable state that only observes the necessary
    and nothing more. In addition to limiting observability, we will also see how
    to expand the observability with `extendObservable()`. Finally, we will look into
    computed properties and look at the use of ES2015 classes to model the observable
    state.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章，“设计可观察状态树”，着重设计可观察状态，并介绍了MobX中的各种选项。我们将解决如何限制MobX中的可观察性，并学习如何创建一个仅观察必要内容的紧密可观察状态。除了限制可观察性，我们还将看到如何使用`extendObservable()`扩展可观察性。最后，我们将研究计算属性，并研究使用ES2015类来建模可观察状态。
- en: '[Chapter 5](part0083.html#2F4UM0-58c2559ca4304cecab9bc46f496bc070), *Derivations,
    Actions, and Reactions*, goes further into the core building blocks of MobX and
    explores the API in greater detail. It also touches upon the philosophies governing
    these building blocks. By the end of this chapter, you will cement your understanding
    and core intuitions around MobX.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章《派生、操作和反应》进一步探讨了MobX的核心构建块，并更详细地探索了API。它还涉及了统治这些构建块的哲学。通过本章结束时，您将巩固对MobX的理解和核心直觉。
- en: '[Chapter 6](part0101.html#30A8Q0-58c2559ca4304cecab9bc46f496bc070), *Handling
    Real-World Use Cases*, is where we apply MobX to two important real-world use
    cases: form handling and page routing. Both are very visual in nature, but we
    will argue that they can be dealt with much more easily when represented as observable
    state, actions, and reactions in MobX. This representation makes the React components
    (the *observers*) a natural visual extension of the state. We will also develop
    our core intuitions around state modelling with MobX.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章《处理真实世界的用例》是我们将MobX应用于两个重要的真实世界用例的地方：表单处理和页面路由。这两者在本质上都是非常直观的，但我们会认为，当以可观察的状态、操作和反应的形式表示时，它们可以更容易地处理。这种表示使得React组件（*观察者*）成为状态的自然视觉扩展。我们还将发展我们对使用MobX进行状态建模的核心直觉。
- en: '[Chapter 7](part0124.html#3M85O0-58c2559ca4304cecab9bc46f496bc070), *Special
    API for Special Cases*, is a survey of APIs that are low level and capable but
    hide in the shadows of the top-level APIs. such as `observable()`, `action()`,
    `computed()`, and `reaction()`. We will explore these low-level APIs and then
    take a brief tour of the debug utilities available for MobX developers. It is
    comforting to know that MobX has your back from all angles, even in those rare,
    odd cases.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章《特殊情况的特殊API》是对低级别且功能强大但隐藏在顶级API阴影中的API的调查，例如`observable()`、`action()`、`computed()`和`reaction()`。我们将探索这些低级别的API，然后简要介绍MobX开发人员可用的调试工具。令人欣慰的是，即使在那些罕见的奇怪情况下，MobX也会全方位地支持您。
- en: '[Chapter 8](part0143.html#48C0E0-58c2559ca4304cecab9bc46f496bc070), *Exploring
    mobx-utils and mobx-state-tree*, gives you a taste of some useful packages that
    can simplify the everyday use cases encountered in MobX-driven development. As
    the name suggests, mobx-utils is a utility tool belt containing an assortment
    of functions. On the other hand is the powerful mobx-state-tree, commonly referred
    to as MST, that prescribes an approach for scalable MobX applications, baking
    in patterns that you get for free, once you adopt the MST style of thinking. It
    is a worthy upgrade to MobX and a must-have for serious users.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章《探索mobx-utils和mobx-state-tree》为您提供了一些有用的包的味道，这些包可以简化MobX驱动开发中遇到的日常用例。顾名思义，mobx-utils是一个实用工具包，其中包含各种函数。另一方面是强大的mobx-state-tree，通常简称为MST，它规定了一种可扩展的MobX应用程序方法，内置了一些模式，一旦您采用了MST思维方式，这些模式就会免费提供给您。这是对MobX的一个值得的升级，对于严肃的用户来说是必不可少的。
- en: '[Chapter 9](part0165.html#4TBCQ0-58c2559ca4304cecab9bc46f496bc070), *MobX Internals*,
    is where we culminate by peeling off the layers and peeking into the inner workings
    of MobX. The core abstractions are surprisingly simple and well defined, and they
    neatly separate the responsibilities. If the term t*ransparent functional reactive
    programming* sounds like a black art, this is the chapter that will unravel the
    magic and reveal how MobX embraces it. This chapter is also an initiation into
    the MobX code base and a worthy read for anyone aspiring to be a core contributor
    to the MobX project.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](part0165.html#4TBCQ0-58c2559ca4304cecab9bc46f496bc070)，*MobX内部*，在这里我们通过剥离层并窥探MobX的内部工作方式来达到高潮。核心抽象非常简单和明确定义，它们清晰地分离了责任。如果术语*透明函数式响应式编程*听起来像是一门黑魔法，这一章将揭开魔法，揭示MobX如何拥抱它。这一章也是对MobX代码库的入门，对于希望成为MobX项目核心贡献者的任何人来说都是值得一读的。'
- en: To get the most out of this book
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 充分利用本书
- en: MobX is typically used in programming environments where long-living, in-memory
    state plays an important role, most notably web, mobile, and desktop applications.
    The book requires basic understanding of the JavaScript programming language,
    and will use modern `ES2015` syntax in its examples. Frontend examples are based
    on the ReactJS framework, so some familiarity with it will be useful, but it's
    not necessary.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: MobX通常用于长期存储在内存中起重要作用的编程环境，尤其是Web、移动和桌面应用程序。本书需要对JavaScript编程语言有基本的了解，并且在示例中将使用现代的`ES2015`语法。前端示例基于ReactJS框架，因此对它的一些了解将会有所帮助，但并非必需。
- en: Download the example code files
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.packtpub.com](http://www.packtpub.com)的帐户中下载本书的示例代码文件。如果您在其他地方购买了这本书，您可以访问[www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便文件直接通过电子邮件发送给您。
- en: 'You can download the code files by following these steps:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按照以下步骤下载代码文件：
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[www.packtpub.com](http://www.packtpub.com/support)登录或注册。
- en: Select the SUPPORT tab.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“支持”选项卡。
- en: Click on Code Downloads & Errata.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“代码下载和勘误”。
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入书名，然后按照屏幕上的说明操作。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 文件下载完成后，请确保使用最新版本的解压缩软件解压缩文件夹：
- en: WinRAR/7-Zip for Windows
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinRAR/7-Zip适用于Windows
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zipeg/iZip/UnRarX适用于Mac
- en: 7-Zip/PeaZip for Linux
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7-Zip/PeaZip适用于Linux
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/MobX-Quick-Start-Guide](https://github.com/PacktPublishing/MobX-Quick-Start-Guide). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 该书的代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/MobX-Quick-Start-Guide](https://github.com/PacktPublishing/MobX-Quick-Start-Guide)。如果代码有更新，将在现有的GitHub存储库上进行更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有来自丰富书籍和视频目录的其他代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)上找到。去看看吧！
- en: Download the color images
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图片
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [http://www.packtpub.com/sites/default/files/downloads/MobXQuickStartGuide_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/MobXQuickStartGuide_ColorImages.pdf).'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一个PDF文件，其中包含本书中使用的屏幕截图/图表的彩色图像。 您可以在这里下载：[http://www.packtpub.com/sites/default/files/downloads/MobXQuickStartGuide_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/MobXQuickStartGuide_ColorImages.pdf)。
- en: Code in Action
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码演示
- en: 'Visit the following link to check out videos of the code being run:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 访问以下链接查看代码运行的视频：
- en: '[http://bit.ly/2NEww85](http://bit.ly/2NEww85)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://bit.ly/2NEww85](http://bit.ly/2NEww85)'
- en: Conventions used
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了许多文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Mount the downloaded `WebStorm-10*.dmg` disk image file as
    another disk in your system."'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码词，数据库表名，文件夹名，文件名，文件扩展名，路径名，虚拟URL，用户输入和Twitter句柄。 例如："将下载的`WebStorm-10*.dmg`磁盘映像文件挂载为系统中的另一个磁盘。"'
- en: 'A block of code is set as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下形式编写：
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select System info from the Administration panel."'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语，重要单词或屏幕上看到的单词。 例如，菜单中的单词或对话框中的单词会以这种形式出现在文本中。 例如："从管理面板中选择系统信息。"'
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会出现在这样的形式中。提示和技巧会出现在这样的形式中。
