- en: TypeScript Basics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: TypeScript基础知识
- en: Facebook has become an incredibly popular app. As its popularity grew, so did
    the demand for new features. React was Facebook's answer to help more people work
    on the codebase and deliver features quicker. React worked so well for Facebook
    that they eventually open sourced it. Today, React is a mature library for building
    component-based frontends that is extremely popular and has a massive community
    and ecosystem.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Facebook已经成为一个非常受欢迎的应用程序。随着其受欢迎程度的增加，对新功能的需求也在增加。React是Facebook的答案，可以帮助更多的人在代码库上工作并更快地交付功能。React对Facebook来说效果非常好，他们最终将其开源。如今，React是一个成熟的用于构建基于组件的前端的库，非常受欢迎，并拥有庞大的社区和生态系统。
- en: TypeScript is also a popular, mature library maintained by a big company – namely,
    Microsoft. It allows users to add strong types to their JavaScript code, helping
    them to be more productive, particularly in large code bases.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript也是一个受欢迎的成熟库，由一家大公司——微软维护。它允许用户向他们的JavaScript代码添加强类型，帮助他们在大型代码库中更加高效。
- en: This book will teach you how you can use both of these awesome libraries to
    build robust frontends that are easy to maintain. The first couple of chapters
    in the book focus solely on TypeScript. You'll then start to learn about React
    and how you can compose robust frontends using Typescript components with strong
    typing.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将教您如何使用这两个令人惊叹的库来构建易于维护的强大前端。本书的前几章将专注于TypeScript。然后，您将开始学习React以及如何使用具有强类型的TypeScript组件来构建强大的前端。
- en: In this chapter, we'll cover TypeScript's relationship to JavaScript and the
    benefits it brings. A basic understanding of JavaScript is therefore required.
    We'll also cover the basics of TypeScript that you'll commonly use when writing
    code for the browser.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍TypeScript与JavaScript的关系以及它带来的好处。因此，基本的JavaScript理解是必需的。我们还将介绍您在编写面向浏览器的代码时通常会使用的TypeScript基础知识。
- en: You'll come to understand the need to use TypeScript for building a frontend
    and the sort of projects for which TypeScript really shines. You will also see
    how to transpile your TypeScript code into JavaScript so that it can run in a
    browser. Last but not least, you'll learn how you can perform additional checks
    on your TypeScript code to make it readable and maintainable.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 您将了解到在构建前端时使用TypeScript的必要性，以及TypeScript真正擅长的项目类型。您还将了解如何将您的TypeScript代码转译为JavaScript，以便在浏览器中运行。最后但同样重要的是，您将学习如何对您的TypeScript代码执行额外的检查，使其更易读和易维护。
- en: By the end of the chapter, you'll be ready to start learning how you can use
    TypeScript for building frontends with React.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，您将准备好开始学习如何使用TypeScript构建具有React的前端。
- en: 'In this chapter, we''ll cover the following topics:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Understanding the benefits of TypeScript
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解TypeScript的好处
- en: Understanding basic types
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解基本类型
- en: Creating interfaces, types aliases, and classes
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建接口、类型别名和类
- en: Structuring code into modules
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将代码结构化为模块
- en: Configuring compilation
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置编译
- en: TypeScript linting
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TypeScript代码检查
- en: Code formatting
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码格式化
- en: Technical requirements
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'We will use the following technologies in this chapter:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用以下技术：
- en: '**TypeScript playground**: This is a website at [https://www.typescriptlang.org/play/](https://www.typescriptlang.org/play/)
    that allows you to play around with and understand the features in TypeScript
    without installing it.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TypeScript playground**：这是一个网站，网址为[https://www.typescriptlang.org/play/](https://www.typescriptlang.org/play/)，允许您在不安装TypeScript的情况下玩耍并了解其特性。'
- en: '**Node.js and** `npm`: TypeScript and React are dependent on these. You can
    install them at: [https://nodejs.org/en/download/](https://nodejs.org/en/download/).
    If you already have these installed, make sure Node.js is at least Version 8.2
    and `npm` is at least Version 5.2.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Node.js**和**npm**：TypeScript和React依赖于这些。您可以在[https://nodejs.org/en/download/](https://nodejs.org/en/download/)安装它们。如果您已经安装了这些，请确保Node.js至少是8.2版本，`npm`至少是5.2版本。'
- en: '**TypeScript**: This can be installed via `npm`, entering the following command
    in a terminal:'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TypeScript**：可以通过`npm`安装这个。在终端中输入以下命令：'
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Visual Studio Code**: We''ll need an editor to write our TypeScript code.
    This one can be installed from [https://code.visualstudio.com/](https://code.visualstudio.com/).
    Other editors that could be used can be found at [https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support).'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Visual Studio Code**：我们需要一个编辑器来编写TypeScript代码。可以从[https://code.visualstudio.com/](https://code.visualstudio.com/)安装这个编辑器。其他可用的编辑器可以在[https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support)找到。'
- en: 'All the code snippets in this chapter can be found online at: [https://github.com/carlrip/LearnReact17WithTypeScript/tree/master/01-TypeScriptBasics](https://github.com/carlrip/LearnReact17WithTypeScript/tree/master/01-TypeScriptBasics)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的所有代码片段都可以在以下网址找到：[https://github.com/carlrip/LearnReact17WithTypeScript/tree/master/01-TypeScriptBasics](https://github.com/carlrip/LearnReact17WithTypeScript/tree/master/01-TypeScriptBasics)
- en: Understanding the benefits of TypeScript
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解TypeScript的好处
- en: When a JavaScript codebase grows, it can become hard to read and maintain. TypeScript
    is an extension of JavaScript, adding static types. The TypeScript compiler reads
    in TypeScript code that includes type information and produces clean, readable
    JavaScript with the type information transformed and removed. The compiled code
    can then run in our favorite browsers and Node.js.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当JavaScript代码库增长时，阅读和维护可能变得困难。TypeScript是JavaScript的扩展，添加了静态类型。TypeScript编译器读取包含类型信息的TypeScript代码，并生成干净、可读的JavaScript，其中包含转换和删除的类型信息。编译后的代码可以在我们喜爱的浏览器和Node.js中运行。
- en: 'TypeScript offers several benefits over JavaScript:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript相对于JavaScript提供了几个优点：
- en: Coding errors can be caught in the development process earlier
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编码错误可以在开发过程中更早地被捕捉到
- en: Static types allow tools to be built that improve the developer experience and
    productivity
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 静态类型允许构建工具，提高开发者的体验和生产力
- en: JavaScript features that aren't implemented in all the browsers yet can actually
    be used in an app that targets those browsers
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尚未在所有浏览器中实现的JavaScript功能实际上可以在针对这些浏览器的应用程序中使用
- en: We'll go through these points in detail in the following sections.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在接下来的章节中详细介绍这些要点。
- en: Catching coding errors early
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 早期捕捉编码错误
- en: 'The type information helps the TypeScript compiler catch bugs and typos before
    our users run into them. In code editors such as Visual Studio Code, a mistake
    is underlined in red immediately after the user has gone wrong. As an example,
    create a file called `utils.js` and paste in the following code, which calculates
    the total price on an order line:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 类型信息帮助TypeScript编译器在用户遇到错误之前捕捉到错误和拼写错误。在诸如Visual Studio Code之类的代码编辑器中，用户一旦出错，错误就会立即用红色下划线标出。例如，创建一个名为`utils.js`的文件，并粘贴以下代码，用于计算订单行上的总价：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'There is a bug in the code that might be difficult for us to spot. If we open
    the file in Visual Studio Code, no errors are highlighted. If we change the extension
    of the file to `.ts`, Visual Studio Code immediately underlines bits of the code
    that need our attention in red:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 代码中存在一个错误，可能很难发现。如果我们在Visual Studio Code中打开文件，不会有错误被突出显示。如果我们将文件扩展名更改为`.ts`，Visual
    Studio Code会立即用红色下划线标出需要我们注意的代码部分：
- en: '![](assets/d034d3cc-cc4f-425b-a72e-716b4742a954.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d034d3cc-cc4f-425b-a72e-716b4742a954.png)'
- en: 'Most of the errors are TypeScript asking for some type information. So, let''s
    add some types to our code:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数错误都是TypeScript要求一些类型信息。因此，让我们为我们的代码添加一些类型：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Don''t worry if you don''t understand what we just added; we''ll go through
    types in the next section. The key point is that we now have a single error highlighted
    to us, which is, in fact, the bug:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不理解我们刚刚添加的内容，不要担心；我们将在下一节中介绍类型。关键点是，我们现在有一个突出显示的错误，实际上就是bug：
- en: '![](assets/1db9c971-c9e6-4618-99ad-484496e137df.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1db9c971-c9e6-4618-99ad-484496e137df.png)'
- en: The bug is that our function references a `price` property in the product object
    that doesn't exist. The property that we should reference is `unitPrice`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: bug是我们的函数引用了产品对象中不存在的`price`属性。我们应该引用的属性是`unitPrice`。
- en: Better developer experience and productivity
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更好的开发者体验和生产力
- en: 'Let''s fix the bug in the previous section by renaming `price` to `unitPrice`.
    Notice how Visual Studio Code gives us IntelliSense lists `unitPrice` as an option
    because it looking at our type definition:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过将`price`重命名为`unitPrice`来修复上一节中的错误。请注意，Visual Studio Code给我们提供了智能感知列表`unitPrice`作为一个选项，因为它查看了我们的类型定义：
- en: '![](assets/0bfbc717-3073-4c1c-9a09-fccb1457b6cf.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0bfbc717-3073-4c1c-9a09-fccb1457b6cf.png)'
- en: Here, TypeScript and Visual Studio Code are using the types to provide a better
    authoring experience for us. As well as IntelliSense, we are provided with code
    navigation features, and the safe renaming of functions and variables across multiple
    files. These features increase our productivity, particularly when the code base
    is large and there is a team of people working on it.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，TypeScript和Visual Studio Code使用类型为我们提供更好的编写体验。除了智能感知外，我们还提供了代码导航功能，以及在多个文件中安全重命名函数和变量。这些功能提高了我们的生产力，特别是当代码库很大并且有一个团队在上面工作时。
- en: Using future JavaScript features
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用未来的JavaScript功能
- en: There is another benefit of TypeScript that is important to understand. TypeScript
    allows us to use some features in JavaScript that haven't yet been adopted by
    all browsers but still target those browsers. TypeScript achieves this by transpiling
    the use of these features down to JavaScript code that the targeted browser does
    support.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript还有另一个重要的好处需要理解。TypeScript允许我们使用一些JavaScript中尚未被所有浏览器采用的功能，但仍然可以针对这些浏览器。TypeScript通过将这些功能的使用转译为目标浏览器支持的JavaScript代码来实现这一点。
- en: 'As an example, let''s look at the exponentiation operator (`**`) in ES7, which
    isn''t supported in IE. Let''s create a file called `future.ts` and enter the
    following code:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们看一下ES7中的幂运算符（`**`），它在IE中不受支持。让我们创建一个名为`future.ts`的文件，并输入以下代码：
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'When we run the program in a browser, it should put `9` into the console. Before
    we do that, let''s run the code against the TypeScript compiler to get the transpiled
    JavaScript. Run the following command in a terminal in the same directory as `future.ts`:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在浏览器中运行程序时，它应该将`9`放入控制台。在这之前，让我们运行代码对TypeScript编译器进行转译成JavaScript。在与`future.ts`相同的目录中的终端中运行以下命令：
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This should generate a file called `future.js` with the following content:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该生成一个名为`future.js`的文件，内容如下：
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: So, TypeScript converted the exponentiation operator to a call to the `Math.pow`
    function, which is supported in IE. To confirm that this works, paste the generated
    JavaScript code into the console in IE and the output should be `9`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，TypeScript将幂运算符转换为对`Math.pow`函数的调用，这在IE中是支持的。为了确认这一点，将生成的JavaScript代码粘贴到IE的控制台中，输出应该是`9`。
- en: This example is purposely simple but probably not that useful. `Async/await`,
    **spread** operators, **rest** parameters, and **arrow functions** are far more
    useful features that IE doesn't support but TypeScript allows the use of. Don't
    worry if you don't know what the features in the last sentence are, as we'll cover
    them when we need them in the book.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子故意简单，但可能并不那么有用。`Async/await`、**spread**操作符、**rest**参数和**箭头函数**是远比IE不支持但TypeScript允许使用的更有用的功能。如果你不知道上一句中的功能是什么，不要担心，因为我们需要时会介绍它们。
- en: Understanding basic types
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解基本类型
- en: We touched on types in the last section. In this section, we'll go through the
    basic types that are commonly used in TypeScript so that we start to understand
    what cases we should use in each type. We'll make heavy use of the online TypeScript
    playground, so be sure to have that ready.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在上一节中提到了类型。在本节中，我们将介绍在TypeScript中常用的基本类型，以便开始理解我们应该在每种类型中使用哪些情况。我们将大量使用在线TypeScript播放器，所以确保准备好。
- en: Primitive types
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本类型
- en: 'Before understanding how we declare variables and functions with types in TypeScript,
    let''s briefly look at primitive types, which are the most basic types. Primitive
    types are simple values that have no properties. TypeScript shares the following
    primitive types with JavaScript:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在理解我们如何在TypeScript中声明带有类型的变量和函数之前，让我们简要地看一下基本类型，这些是最基本的类型。基本类型是没有属性的简单值。TypeScript与JavaScript共享以下基本类型：
- en: '`string`: Represents a sequence of Unicode characters'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`string`：表示Unicode字符序列'
- en: '`number`: Represents both integers and floating-point numbers'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`number`：表示整数和浮点数'
- en: '`boolean`: Represents a logical true or false'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔值：表示逻辑真或假
- en: '`undefined`: Represents a value that hasn''t been initialized yet'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`undefined`：表示尚未初始化的值'
- en: '`null`: Represents no value'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`null`：表示没有值'
- en: Type annotations
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 类型注释
- en: Types for JavaScript variables are determined at runtime. Types for JavaScript
    variables can also change at runtime. For example, a variable that holds a number
    can later be replaced by a string. Usually, this is unwanted behavior and can
    result in a bug in our app.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript变量的类型是在运行时确定的。JavaScript变量的类型也可以在运行时更改。例如，一个保存数字的变量可以后来被替换为字符串。通常，这是不希望的行为，可能导致我们应用程序中的错误。
- en: TypeScript annotations let us declare variables with specific types when we
    are writing our code. This allows the TypeScript compiler to check that the code
    adheres to these types before the code executes at runtime. In short, type annotations
    allow TypeScript to catch bugs where our code is using the wrong type much earlier
    than we would if we were writing our code in JavaScript.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript注释允许我们在编写代码时声明具体类型的变量。这允许TypeScript编译器在代码执行运行时检查代码是否遵守这些类型。简而言之，类型注释允许TypeScript在我们编写代码时更早地捕捉到代码使用错误类型的错误。
- en: TypeScript annotations let us declare variables with types using the `:Type`
    syntax.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript注释允许我们使用`:Type`语法声明带有类型的变量。
- en: 'Let''s browse to the TypeScript playground and enter the following variable
    declaration into the left-hand pane:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们浏览到TypeScript播放器，并将以下变量声明输入到左侧窗格中：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The transpiled JavaScript will appear on the right-hand side as follows:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转译后的JavaScript将显示在右侧，如下所示：
- en: '[PRE7]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: That `let` has been converted to `var`. This is because the compiler that the
    playground uses is set to target a wide range of browsers, some of which don't
    support `let`. Also, notice that the type annotation has disappeared. This is
    because type annotations don't exist in JavaScript.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`let`已被转换为`var`。这是因为播放器使用的编译器设置为针对广泛的浏览器，其中一些不支持`let`。另外，请注意类型注释已经消失。这是因为JavaScript中不存在类型注释。'
- en: 'Let''s add a second line to our program:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在我们的程序中添加第二行：
- en: '[PRE8]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Notice that a red line appears under `unitPrice`, and if you hover over it,
    you are correctly informed that there is a type error:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到`unitPrice`下面出现了一条红线，如果你将鼠标悬停在上面，你会得到正确的信息，即存在类型错误：
- en: '![](assets/c5e5cfcf-3483-4a0a-9e90-9f3c097ca1d4.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c5e5cfcf-3483-4a0a-9e90-9f3c097ca1d4.png)'
- en: 'You can also add type annotations to function parameters for the return value
    using the same `:Type` syntax. Let''s enter the following function into the playground:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还可以使用相同的`:Type`语法为返回值的函数参数添加类型注释。让我们在playground中输入以下函数：
- en: '[PRE9]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We've declared `unitPrice`, `quantity`, and `discount` parameters, all as numbers.
    The `return` type annotation comes after the function's parentheses, which is
    also a number in the preceding example.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经声明了`unitPrice`，`quantity`和`discount`参数，都是数字。`return`类型注释在函数的括号后面，前面的例子中也是一个数字。
- en: We have used both `const` and `let` to declare variables in different examples.
    `let` will allow the variable to change the value after the declaration, whereas
    `const` variables can't change. In the preceding function, `priceWithoutDiscount`
    and `discountAmount` never change the value after the initial assignment, so we
    have used `const`.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在不同的例子中使用了`const`和`let`来声明变量。`let`允许变量在声明后改变值，而`const`变量则不能改变。在前面的函数中，`priceWithoutDiscount`和`discountAmount`在初始赋值后不会改变值，所以我们使用了`const`。
- en: 'Let''s call our function with an incorrect type for `quantity` and assign the
    result to a variable with an incorrect type:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们用一个不正确的类型调用我们的函数，并将结果赋给一个不正确的类型的变量：
- en: '[PRE10]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We find that `one` is underlined in red, highlighting that there is a type
    error:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发现`one`被红色下划线标出，突出显示存在类型错误：
- en: '![](assets/9ebd2959-d814-4f9d-b521-5cb61f8d6826.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9ebd2959-d814-4f9d-b521-5cb61f8d6826.png)'
- en: 'If we then correct `one` to `1`, `total` should be underlined in red, highlighting
    that there is a type problem with that:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们将`one`更正为`1`，`total`应该被红色下划线标出，突出显示存在类型问题：
- en: '![](assets/ee0cfd8d-b271-46b1-aca4-12ac238767de.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ee0cfd8d-b271-46b1-aca4-12ac238767de.png)'
- en: The TypeScript compiler uses type annotations to check whether values assigned
    to variables and function parameters are valid for their type.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript编译器使用类型注释来检查分配给变量和函数参数的值是否对其类型有效。
- en: This strong type checking is something that we don't get in JavaScript, and
    it is very useful in large code bases because it helps us immediately detect type
    errors.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这种强类型检查是JavaScript中所没有的，它在大型代码库中非常有用，因为它帮助我们立即检测到类型错误。
- en: Type inference
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 类型推断
- en: We have seen how type annotations are really valuable, but they involve a lot
    of extra typing. Luckily, TypeScript's powerful type inference system means we
    don't have to provide annotations all the time. We can use type inference when
    we immediately set a variable value.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到类型注释是非常有价值的，但它们涉及大量额外的输入。幸运的是，TypeScript强大的类型推断系统意味着我们不必一直提供注释。当我们立即设置变量值时，我们可以使用类型推断。
- en: 'Let''s look at an example:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子：
- en: 'Let''s add the following variable assignment in the TypeScript playground:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在TypeScript playground中添加以下变量赋值：
- en: '[PRE11]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'If we hover our mouse over the `flag` variable, we can see that TypeScript
    has inferred the type as `boolean`:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们将鼠标悬停在`flag`变量上，我们可以看到TypeScript已经推断出类型为`boolean`：
- en: '![](assets/1ed07087-0ce6-4247-b4a7-bc53f3f64745.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1ed07087-0ce6-4247-b4a7-bc53f3f64745.png)'
- en: 'If we add another line beneath this, to incorrectly set `flag` to `Table`,
    we get a type error:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们在下面再添加一行，错误地将`flag`设置为`Table`，我们会得到一个类型错误：
- en: '![](assets/5474e9e7-8d0b-4508-b0dc-d710346c5ee8.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5474e9e7-8d0b-4508-b0dc-d710346c5ee8.png)'
- en: So, when we declare a variable and immediately set its type, we can use type
    inference to save a few keystrokes.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，当我们声明一个变量并立即设置其类型时，我们可以使用类型推断来节省一些按键。
- en: Any
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 任意
- en: 'What if we declare a variable with no type annotation and no value? What does
    TypeScript infer as the type? Let''s enter the following code in the TypeScript
    playground and find out:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们声明一个没有类型注释和没有值的变量会怎么样？TypeScript会推断出什么类型？让我们在TypeScript playground中输入以下代码并找出：
- en: '[PRE12]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'If we hover our mouse over `flag`, we see it has been given the `any` type:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将鼠标悬停在“flag”上，我们会看到它被赋予了“any”类型：
- en: '![](assets/d974d3d7-4b98-4dd7-9417-706c5f510702.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d974d3d7-4b98-4dd7-9417-706c5f510702.png)'
- en: So, the TypeScript compiler gives a variable with no type annotation and no
    immediately assigned value, the `any` type. The `any` type is specific to TypeScript;
    it doesn't exist in JavaScript. It is a way of opting out of type checking on
    a particular variable. It is commonly used for dynamic content or values from
    third-party libraries. However, TypeScript's increasingly powerful type system
    means that we need to use `any` less often these days.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，TypeScript编译器给了一个没有类型注释和没有立即赋值的变量，`any`类型。`any`类型是特定于TypeScript的；它在JavaScript中不存在。这是一种选择不对特定变量进行类型检查的方式。它通常用于动态内容或来自第三方库的值。然而，TypeScript日益强大的类型系统意味着我们这些天需要更少地使用`any`。
- en: Void
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Void
- en: '`void` is another type that doesn''t exist in JavaScript. It is generally used
    to represent a non-returning function.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`void`是另一种在JavaScript中不存在的类型。它通常用于表示一个不返回任何东西的函数。'
- en: 'Let''s look at an example:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个例子：
- en: 'Let''s enter the following function into the TypeScript playground:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在TypeScript playground中输入以下函数：
- en: '[PRE13]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The function simply logs some text into the console and doesn't return anything.
    So, we've marked the return type as `void`.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数只是简单地将一些文本记录到控制台中，并且不返回任何东西。因此，我们将返回类型标记为`void`。
- en: 'If we remove the return type annotation and hover over the function name, `logText`,
    we''ll see that TypeScript has inferred the type to be `void`:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们删除返回类型注释并悬停在函数名`logText`上，我们会看到TypeScript已经推断出类型为`void`：
- en: '![](assets/fe81d333-89bc-4e5b-b149-03213ce8bb0c.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fe81d333-89bc-4e5b-b149-03213ce8bb0c.png)'
- en: This saves us a few keystrokes while writing functions that don't return anything.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这在编写不返回任何东西的函数时为我们节省了一些按键。
- en: Never
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Never
- en: The `never` type represents something that would never occur and is typically
    used to specify unreachable areas of code. Again, this doesn't exist in JavaScript.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`never`类型表示永远不会发生的事情，通常用于指定代码中不可达的区域。同样，这在JavaScript中不存在。'
- en: 'Time for an example:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是一个例子的时间：
- en: 'Type the following code into the TypeScript playground:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在TypeScript playground中输入以下代码：
- en: '[PRE14]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The function invokes an infinite loop and never returns, and so we have given
    it a type annotation of `never`. This is different to `void` because void means
    it will return, but with no value.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数调用一个无限循环并且永远不会返回，因此我们给它一个`never`类型的类型注释。这与`void`不同，因为void表示它将返回，但没有值。
- en: In the preceding example, we used a JavaScript template literal to construct
    the string to log to the console. Template literals are enclosed by back-ticks
    ([PRE15]
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们使用了JavaScript模板文字来构造要记录到控制台的字符串。模板文字由反引号括起来。
- en: 'function foreverTask(taskName: string): never {'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 'function foreverTask(taskName: string): never {'
- en: while (true) {
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: while (true) {
- en: console.log(`Doing ${taskName} over and over again ...`);
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(`一遍又一遍地做${taskName}...`);
- en: break;
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: break;
- en: '}'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE16]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: enum OrderStatus {
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 枚举OrderStatus {
- en: Paid,
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 已支付，
- en: Shipped,
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 已发货，
- en: Completed,
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 已完成，
- en: Cancelled
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 取消
- en: '}'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE17]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: var OrderStatus;
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: var OrderStatus;
- en: (function (OrderStatus) {
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: (function (OrderStatus) {
- en: OrderStatus[OrderStatus["Paid"] = 1] = "Paid";
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: OrderStatus[OrderStatus["Paid"] = 1] = "Paid";
- en: OrderStatus[OrderStatus["Shipped"] = 2] = "Shipped";
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: OrderStatus[OrderStatus["Shipped"] = 2] = "Shipped";
- en: OrderStatus[OrderStatus["Completed"] = 3] = "Completed";
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: OrderStatus[OrderStatus["Completed"] = 3] = "Completed";
- en: OrderStatus[OrderStatus["Cancelled"] = 4] = "Cancelled";
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: OrderStatus[OrderStatus["Cancelled"] = 4] = "Cancelled";
- en: '})(OrderStatus || (OrderStatus = {}));'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '})(OrderStatus || (OrderStatus = {}));'
- en: '[PRE18]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: let status = OrderStatus.Shipped;
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 让状态 = OrderStatus.Shipped;
- en: '[PRE19]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: enum OrderStatus {
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 枚举订单状态 {
- en: Paid = 1,
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 已付款 = 1,
- en: Shipped,
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 已发货,
- en: Completed,
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 完成，
- en: Cancelled
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 取消
- en: '}'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE20]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: let status = OrderStatus.Shipped;
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 让状态 = OrderStatus.Shipped;
- en: console.log(status);
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(status);
- en: '[PRE21]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: enum OrderStatus {
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 枚举订单状态 {
- en: Paid = 1,
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 已付款 = 1，
- en: Shipped = 2,
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 已发货 = 2，
- en: Completed = 3,
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 完成 = 3，
- en: Cancelled = 0
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 取消 = 0
- en: '}'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE22]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: const customer = {
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: const customer = {
- en: 'name: "Lamps Ltd",'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 名称："灯具有限公司",
- en: 'turnover: 2000134,'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 营业额：2000134，
- en: 'active: true'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 活跃：true
- en: '};'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE23]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: customer.turnover = 500000;
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 客户营业额 = 500000;
- en: '[PRE24]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: customer.profit = 10000;
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 客户利润 = 10000;
- en: '[PRE25]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'const numbers: number[] = [];'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 'const numbers: number[] = [];'
- en: '[PRE26]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: numbers.push(1);
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: numbers.push(1);
- en: '[PRE27]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: const numbers = [1, 3, 5];
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: const numbers = [1, 3, 5];
- en: '[PRE28]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: console.log(numbers[0]);
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(numbers[0]);
- en: console.log(numbers[1]);
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(numbers[1]);
- en: console.log(numbers[2]);
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(numbers[2]);
- en: '[PRE29]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: for (let i in numbers) {
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 对于（让i在数字中）{
- en: console.log(numbers[i]);
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(numbers[i]);
- en: '}'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE30]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: numbers.forEach(function (num) {
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: numbers.forEach(function (num) {
- en: console.log(num);
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(num);
- en: '});'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '[PRE31]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: const customer = {
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: const customer = {
- en: 'name: "Lamps Ltd",'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 名称："灯具有限公司",
- en: 'turnover: 2000134,'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 营业额：2000134，
- en: 'active: true'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 活跃：true
- en: '};'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE32]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'let customer: object;'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 让客户：对象;
- en: customer = {
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 客户 = {
- en: 'name: "Lamps Ltd",'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 名称："灯具有限公司",
- en: 'turnover: 2000134,'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 营业额：2000134，
- en: 'active: true'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 活跃：true
- en: '};'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE33]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: customer.turnover = 2000200;
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 客户营业额 = 2000200;
- en: '[PRE34]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: interface Product {
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 产品接口 {
- en: '...'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '}'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE35]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: interface Product {
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 产品接口 {
- en: 'name: string;'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 名称：字符串;
- en: 'unitPrice: number;'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：数字;
- en: '}'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE36]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'const table: Product = {'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 'const table: 产品 = {'
- en: 'name: "Table",'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 名称："桌子",
- en: 'unitPrice: 500'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：500
- en: '}'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE37]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'const chair: Product = {'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 'const chair: 产品 = {'
- en: 'productName: "Table",'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 产品名称："桌子",
- en: 'price: 70'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 价格：70
- en: '}'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE38]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: interface Product {
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 产品接口 {
- en: 'name: string;'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 名称：字符串;
- en: 'unitPrice: number;'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：数字;
- en: '}'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: interface OrderDetail {
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 订单详情接口 {
- en: 'product: Product;'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：产品;
- en: 'quantity: number;'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：数字;
- en: '}'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: 'const table: Product = {'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 'const table: 产品 = {'
- en: 'name: "Table",'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 名称："桌子",
- en: 'unitPrice: 500'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：500
- en: '}'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: 'const tableOrder: OrderDetail = {'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 'const tableOrder: 订单详情 = {'
- en: 'product: table,'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：桌子，
- en: 'quantity: 1'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：1
- en: '};'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE39]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: interface OrderDetail {
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 订单详情接口 {
- en: 'product: Product;'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：产品;
- en: 'quantity: number;'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：数字;
- en: 'getTotal(discount: number): number;'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 获取总数（折扣：数字）：数字;
- en: '}'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE40]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'const tableOrder: OrderDetail = {'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 'const tableOrder: 订单详情 = {'
- en: 'product: table,'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：桌子，
- en: 'quantity: 1,'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：1，
- en: 'getTotal(discount: number): number {'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 获取总数（折扣：数字）：数字 {
- en: const priceWithoutDiscount = this.product.unitPrice *
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: const priceWithoutDiscount = this.product.unitPrice *
- en: this.quantity;
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数量;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: const discountAmount = priceWithoutDiscount * discount;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 priceWithoutDiscount - discountAmount;
- en: '}'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE41]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'getTotal(discountPercentage: number): number {'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 获取总数（折扣百分比：数字）：数字 {
- en: const priceWithoutDiscount = this.product.unitPrice *
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: const priceWithoutDiscount = this.product.unitPrice *
- en: this.quantity;
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数量;
- en: const discountAmount = priceWithoutDiscount *
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: const discountAmount = priceWithoutDiscount *
- en: discountPercentage;
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 折扣百分比;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 priceWithoutDiscount - discountAmount;
- en: '}'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE42]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'total(discountPercentage: number): number {'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 总数（折扣百分比：数字）：数字 {
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * discountPercentage;
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: const discountAmount = priceWithoutDiscount * discountPercentage;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 priceWithoutDiscount - discountAmount;
- en: '}'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE43]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'const tableOrder: OrderDetail = {'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 'const tableOrder: 订单详情 = {'
- en: 'product: table,'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：桌子,
- en: 'quantity: 1,'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：1，
- en: 'getTotal(discountPercentage: number): string {'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 获取总数（折扣百分比：数字）：字符串 {
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * discountPercentage;
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: const discountAmount = priceWithoutDiscount * discountPercentage;
- en: return (priceWithoutDiscount - discountAmount).toString();
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 返回（priceWithoutDiscount - discountAmount）。toString();
- en: '}'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE44]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: interface OrderDetail {
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 订单详情接口 {
- en: '...'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: 'getTotal(number): number;'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 获取总数（数字）：数字;
- en: '}'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE45]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: interface OrderDetail {
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 订单详情接口 {
- en: 'product: Product;'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：产品;
- en: 'quantity: number;'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：数字;
- en: 'dateAdded?: Date,'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: dateAdded？：日期，
- en: 'getTotal(discount: number): number;'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: getTotal（折扣：数字）：数字;
- en: '}'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE46]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: interface OrderDetail {
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 接口OrderDetail {
- en: 'product: Product;'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：产品;
- en: 'quantity: number;'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：数字;
- en: 'dateAdded?: Date,'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: dateAdded？：日期，
- en: 'getTotal(discount?: number): number;'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: getTotal（折扣？：数字）：数字;
- en: '}'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE47]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'getTotal(discount?: number): number {'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: getTotal（折扣？：数字）：数字{
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * (discount || 0);
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: const discountAmount = priceWithoutDiscount *（折扣|| 0）;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 返回无折扣价格 - 折扣金额;
- en: '}'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE48]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: tableOrder.getTotal()
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: tableOrder.getTotal（）
- en: '[PRE49]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: interface Product {
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 接口产品{
- en: 'readonly name: string;'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 只读名称：字符串;
- en: 'unitPrice: number;'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：数字;
- en: '}'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE50]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'const table: Product = {'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: const table：产品= {
- en: 'name: "Table",'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 名称："桌子"，
- en: 'unitPrice: 500'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：500
- en: '};'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE51]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: table.name = "Better Table";
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: table.name = "更好的桌子";
- en: '[PRE52]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: interface Product {
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 接口产品{
- en: 'name: string;'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 名称：字符串;
- en: 'unitPrice: number;'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：数字；
- en: '}'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: interface DiscountCode {
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 接口折扣码 {
- en: 'code: string;'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 代码：字符串;
- en: 'percentage: number;'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 百分比：数字;
- en: '}'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: interface ProductWithDiscountCodes extends Product {
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 带折扣码的产品接口扩展产品 {
- en: 'discountCodes: DiscountCode[];'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 折扣码：DiscountCode[];
- en: '}'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE53]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'const table: ProductWithDiscountCodes = {'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: const table：带折扣码的产品= {
- en: 'name: "Table",'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 名称："桌子"，
- en: 'unitPrice: 500,'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：500，
- en: 'discountCodes: ['
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 折扣码：[
- en: '{ code: "SUMMER10", percentage: 0.1 },'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '{代码："SUMMER10"，百分比：0.1}，'
- en: '{ code: "BFRI", percentage: 0.2 }'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '{代码："BFRI"，百分比：0.2}'
- en: ']'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: ']'
- en: '};'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE54]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'type GetTotal = (discount: number) => number;'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 类型获取总数=（折扣：数字）=> 数字;
- en: interface OrderDetail {
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 接口OrderDetail {
- en: 'product: Product;'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：产品;
- en: 'quantity: number;'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：数字;
- en: 'getTotal: GetTotal;'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: getTotal：GetTotal;
- en: '}'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE55]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: type Product = {
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 类型产品= {
- en: 'name: string;'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 名称：字符串;
- en: 'unitPrice: number;'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：数字;
- en: '};'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: type OrderDetail = {
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 类型OrderDetail = {
- en: 'product: Product;'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：产品;
- en: 'quantity: number;'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：数字;
- en: 'getTotal: (discount: number) => number;'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: getTotal：（折扣：数字）=> 数字;
- en: '};'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE56]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'const table: Product = {'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: const table：产品= {
- en: 'name: "Table",'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 名称："桌子"，
- en: 'unitPrice: 500'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：500
- en: '};'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: 'const orderDetail: OrderDetail = {'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: const orderDetail：OrderDetail = {
- en: 'product: table,'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：桌子，
- en: 'quantity: 1,'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：1，
- en: 'getTotal(discount: number): number {'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: getTotal（折扣：数字）：数字{
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: const discountAmount = priceWithoutDiscount *折扣;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 返回无折扣价格 - 折扣金额;
- en: '}'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE57]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: class Product {
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 类产品{
- en: 'name: string;'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 名称：字符串;
- en: 'unitPrice: number;'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：数字；
- en: '}'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE58]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: const table = new Product();
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: const table = new Product();
- en: table.name = "Table";
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: table.name = "桌子";
- en: table.unitPrice = 500;
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: table.unitPrice = 500;
- en: '[PRE59]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: class OrderDetail {
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 类OrderDetail {
- en: 'product: Product;'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：产品;
- en: 'quantity: number;'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：数字;
- en: 'getTotal(discount: number): number {'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: getTotal（折扣：数字）：数字{
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: const discountAmount = priceWithoutDiscount *折扣;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 返回无折扣价格 - 折扣金额;
- en: '}'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE60]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: const table = new Product();
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: const table = new Product();
- en: table.name = "Table";
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: table.name = "桌子";
- en: table.unitPrice = 500;
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: table.unitPrice = 500;
- en: const orderDetail = new OrderDetail();
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: const orderDetail = new OrderDetail();
- en: orderDetail.product = table;
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: orderDetail.product = table;
- en: orderDetail.quantity = 2;
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: orderDetail.quantity = 2;
- en: const total = orderDetail.getTotal(0.1);
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 总数= orderDetail.getTotal（0.1）;
- en: console.log(total);
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: console.log（总数）;
- en: '[PRE61]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: interface IOrderDetail {
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 接口IOrderDetail {
- en: 'product: Product;'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：产品;
- en: 'quantity: number;'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：数字;
- en: 'getTotal(discount: number): number;'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: getTotal（折扣：数字）：数字;
- en: '}'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: class OrderDetail implements IOrderDetail {
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 类OrderDetail实现IOrderDetail {
- en: 'product: Product;'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：产品;
- en: 'quantity: number;'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：数字;
- en: 'getTotal(discount: number): number {'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: getTotal（折扣：数字）：数字{
- en: const priceWithoutDiscount = this.product.unitPrice *
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: const priceWithoutDiscount = this.product.unitPrice *
- en: this.quantity;
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数量;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: const discountAmount = priceWithoutDiscount * discount;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: return priceWithoutDiscount - discountAmount;
- en: '}'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE62]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: class OrderDetail implements IOrderDetail {
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: class OrderDetail implements IOrderDetail {
- en: 'product: Product;'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 'product: Product;'
- en: 'quantity: number;'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 'quantity: number;'
- en: 'constructor(product: Product, quantity: number) {'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 'constructor(product: Product, quantity: number) {'
- en: this.product = product;
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: this.product = product;
- en: this.quantity = quantity;
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: this.quantity = quantity;
- en: '}'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: 'getTotal(discount: number): number {'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 'getTotal(discount: number): number {'
- en: '...'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '}'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE63]'
  id: totrans-427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: const orderDetail = new OrderDetail(table, 2);
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: const orderDetail = new OrderDetail(table, 2);
- en: '[PRE64]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'constructor(product: Product, quantity: number = 1) {'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 'constructor(product: Product, quantity: number = 1) {'
- en: this.product = product;
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: this.product = product;
- en: this.quantity = quantity;
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: this.quantity = quantity;
- en: '}'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE65]'
  id: totrans-434
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: const orderDetail = new OrderDetail(table);
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: const orderDetail = new OrderDetail(table);
- en: '[PRE66]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: class OrderDetail implements IOrderDetail {
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: class OrderDetail implements IOrderDetail {
- en: 'constructor(public product: Product, public quantity: number = 1) {'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 'constructor(public product: Product, public quantity: number = 1) {'
- en: this.product = product;
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: this.product = product;
- en: this.quantity = quantity;
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: this.quantity = quantity;
- en: '}'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: 'getTotal(discount: number): number {'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 'getTotal(discount: number): number {'
- en: '...'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '}'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE67]'
  id: totrans-446
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: class Product {
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: class Product {
- en: 'name: string;'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 'name: string;'
- en: 'unitPrice: number;'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 'unitPrice: number;'
- en: '}'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: interface DiscountCode {
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: interface DiscountCode {
- en: 'code: string;'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 'code: string;'
- en: 'percentage: number;'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 'percentage: number;'
- en: '}'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: class ProductWithDiscountCodes extends Product {
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: class ProductWithDiscountCodes extends Product {
- en: 'discountCodes: DiscountCode[];'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 'discountCodes: DiscountCode[];'
- en: '}'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE68]'
  id: totrans-458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: const table = new ProductWithDiscountCodes();
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: const table = new ProductWithDiscountCodes();
- en: table.name = "Table";
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: table.name = "Table";
- en: table.unitPrice = 500;
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: table.unitPrice = 500;
- en: table.discountCodes = [
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: table.discountCodes = [
- en: '{ code: "SUMMER10", percentage: 0.1 },'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: '{ code: "SUMMER10", percentage: 0.1 },'
- en: '{ code: "BFRI", percentage: 0.2 }'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: '{ code: "BFRI", percentage: 0.2 }'
- en: '];'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: '];'
- en: '[PRE69]'
  id: totrans-466
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: class Product {
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: class Product {
- en: 'constructor(public name: string, public unitPrice: number) {'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 'constructor(public name: string, public unitPrice: number) {'
- en: '}'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: interface DiscountCode {
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: interface DiscountCode {
- en: 'code: string;'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 'code: string;'
- en: 'percentage: number;'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 'percentage: number;'
- en: '}'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: class ProductWithDiscountCodes extends Product {
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: class ProductWithDiscountCodes extends Product {
- en: 'constructor(public name: string, public unitPrice: number) {'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 'constructor(public name: string, public unitPrice: number) {'
- en: super(name, unitPrice);
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: super(name, unitPrice);
- en: '}'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: 'discountCodes: DiscountCode[];'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 'discountCodes: DiscountCode[];'
- en: '}'
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE70]'
  id: totrans-481
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: abstract class Product {
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: abstract class Product {
- en: 'name: string;'
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 'name: string;'
- en: 'unitPrice: number;'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 'unitPrice: number;'
- en: '}'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE71]'
  id: totrans-486
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: class Food extends Product {
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: class Food extends Product {
- en: 'constructor(public bestBefore: Date) {'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 'constructor(public bestBefore: Date) {'
- en: super();
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: super();
- en: '}'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE72]'
  id: totrans-492
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: const bread = new Food(new Date(2019, 6, 1));
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: const bread = new Food(new Date(2019, 6, 1));
- en: '[PRE73]'
  id: totrans-494
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: abstract class Product {
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: abstract class Product {
- en: 'name: string;'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 'name: string;'
- en: 'unitPrice: number;'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 'unitPrice: number;'
- en: 'abstract delete(): void;'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 'abstract delete(): void;'
- en: '}'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE74]'
  id: totrans-500
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: class Food extends Product {
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: class Food extends Product {
- en: 'deleted: boolean;'
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 'deleted: boolean;'
- en: 'constructor(public bestBefore: Date) {'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 'constructor(public bestBefore: Date) {'
- en: super();
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: super();
- en: '}'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: delete() {
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: delete() {
- en: this.deleted = false;
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: this.deleted = false;
- en: '}'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE75]'
  id: totrans-510
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: class OrderDetail {
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: class OrderDetail {
- en: 'public product: Product;'
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 'public product: Product;'
- en: 'public quantity: number;'
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 'public quantity: number;'
- en: 'public getTotal(discount: number): number {'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 'public getTotal(discount: number): number {'
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: const discountAmount = priceWithoutDiscount * discount;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: return priceWithoutDiscount - discountAmount;
- en: '}'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE76]'
  id: totrans-520
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: class OrderDetail {
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: class OrderDetail {
- en: 'public product: Product;'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 'public product: Product;'
- en: 'public quantity: number;'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 'public quantity: number;'
- en: 'private deleted: boolean;'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 'private deleted: boolean;'
- en: 'public delete(): void {'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 'public delete(): void {'
- en: this.deleted = true;
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: this.deleted = true;
- en: '}'
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '...'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '}'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE77]'
  id: totrans-530
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: const orderDetail = new OrderDetail();
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: const orderDetail = new OrderDetail();
- en: orderDetail.deleted = true;
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: orderDetail.deleted = true;
- en: '[PRE78]'
  id: totrans-533
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: class Product {
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: class Product {
- en: 'name: string;'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 'name: string;'
- en: 'private _unitPrice: number;'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 'private _unitPrice: number;'
- en: 'get unitPrice(): number {'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 'get unitPrice(): number {'
- en: return this._unitPrice || 0;
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: return this._unitPrice || 0;
- en: '}'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: 'set unitPrice(value: number) {'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 'set unitPrice(value: number) {'
- en: if (value < 0) {
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 如果（值 < 0）{
- en: value = 0;
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 值 = 0;
- en: '}'
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: this._unitPrice = value;
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: this._unitPrice = 值;
- en: '}'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE79]'
  id: totrans-547
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: const table = new Product();
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: const 表 = 新产品（）;
- en: table.name = "Table";
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 表.名称 = "桌子";
- en: console.log(table.unitPrice);
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: console.log（表.单价）;
- en: table.unitPrice = -10;
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 表.单价 = -10;
- en: console.log(table.unitPrice);
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: console.log（表.单价）;
- en: '[PRE80]'
  id: totrans-553
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: class OrderDetail {
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 类订单明细{
- en: 'product: Product;'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：产品；
- en: 'quantity: number;'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：数字；
- en: 'static getTotal(discount: number): number {'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 静态获取总计（折扣：数字）：数字{
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: const 无折扣价格 = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: const 折扣金额 = 无折扣价格 * 折扣;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 返回无折扣价格 - 折扣金额;
- en: '}'
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE81]'
  id: totrans-563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'static getTotal(unitPrice: number, quantity: number, discount: number): number
    {'
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 静态获取总计（单价：数字，数量：数字，折扣：数字）：数字{
- en: const priceWithoutDiscount = unitPrice * quantity;
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: const 无折扣价格 = 单价 * 数量;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: const 折扣金额 = 无折扣价格 * 折扣;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 返回无折扣价格 - 折扣金额;
- en: '}'
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE82]'
  id: totrans-569
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: const total = OrderDetail.getTotal(500, 2, 0.1);
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: const 总计 = 订单明细.获取总计（500，2，0.1）;
- en: console.log(total);
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: console.log（总计）;
- en: '[PRE83]'
  id: totrans-572
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: interface Product {
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 接口产品{
- en: 'name: string;'
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 名称：字符串；
- en: 'unitPrice: number;'
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：数字；
- en: '}'
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE84]'
  id: totrans-577
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: class OrderDetail {
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 类订单明细{
- en: 'product: Product;'
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：产品；
- en: 'quantity: number;'
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：数字；
- en: 'getTotal(discount: number): number {'
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 获取总计（折扣：数字）：数字{
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: const 无折扣价格 = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: const 折扣金额 = 无折扣价格 * 折扣;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 返回无折扣价格 - 折扣金额;
- en: '}'
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE85]'
  id: totrans-587
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: export interface Product {
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: 导出接口产品{
- en: 'name: string;'
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 名称：字符串；
- en: 'unitPrice: number;'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：数字；
- en: '}'
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE86]'
  id: totrans-592
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: interface Product {
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 接口产品{
- en: 'name: string;'
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 名称：字符串；
- en: 'unitPrice: number;'
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：数字；
- en: '}'
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: export { Product }
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 导出{产品}
- en: '[PRE87]'
  id: totrans-598
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: interface Product {
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: 接口产品{
- en: 'name: string;'
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: 名称：字符串；
- en: 'unitPrice: number;'
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：数字；
- en: '}'
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: export { Product as Stock }
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 导出{产品作为库存}
- en: '[PRE88]'
  id: totrans-604
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: import { Product } from "./product";
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: 导入{产品}从“产品”；
- en: class OrderDetail {
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: 类订单明细{
- en: 'product: Product;'
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：产品；
- en: 'quantity: number;'
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：数字；
- en: 'getTotal(discount: number): number {'
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 获取总计（折扣：数字）：数字{
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: const 无折扣价格 = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
  zh: const 折扣金额 = 无折扣价格 * 折扣;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: 返回无折扣价格 - 折扣金额;
- en: '}'
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE89]'
  id: totrans-615
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: import { Product as Stock } from "./product";
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: 导入{产品作为库存}从“产品”；
- en: class OrderDetail {
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: 类订单明细{
- en: 'product: Stock;'
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：库存；
- en: 'quantity: number;'
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：数字；
- en: 'getTotal(discount: number): number {'
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 获取总计（折扣：数字）：数字{
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
  zh: const 无折扣价格 = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: const 折扣金额 = 无折扣价格 * 折扣;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: 返回无折扣价格 - 折扣金额;
- en: '}'
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE90]'
  id: totrans-626
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: export default interface {
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
  zh: 默认导出接口{
- en: 'name: string;'
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: 名称：字符串；
- en: 'unitPrice: number;'
  id: totrans-629
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：数字；
- en: '}'
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE91]'
  id: totrans-631
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: import Product from "./product";
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
  zh: 导入产品从“产品”；
- en: '[PRE92]'
  id: totrans-633
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: export interface Product {
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: 导出接口产品{
- en: 'name: string;'
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: 名称：字符串；
- en: 'unitPrice: number;'
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：数字；
- en: '}'
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: export class OrderDetail {
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: 导出类订单明细{
- en: 'product: Product;'
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: 产品：产品；
- en: 'quantity: number;'
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：数字；
- en: 'getTotal(discount: number): number {'
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
  zh: 获取总计（折扣：数字）：数字{
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: const 无折扣价格 = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
  zh: const 折扣金额 = 无折扣价格 * 折扣;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: 返回无折扣价格 - 折扣金额;
- en: '}'
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE93]'
  id: totrans-647
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: tsc orderDetail
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: tsc订单明细
- en: '[PRE94]'
  id: totrans-649
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '"use strict";'
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
  zh: '"use strict";'
- en: exports.__esModule = true;
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: exports.__esModule = true;
- en: var OrderDetail = (function () {
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
  zh: var 订单明细 =（function（）{
- en: function OrderDetail() {
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: 函数订单明细（）{
- en: '}'
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: OrderDetail.prototype.getTotal = function (discount) {
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
  zh: OrderDetail.prototype.getTotal = function (discount) {
- en: var priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: var priceWithoutDiscount = this.product.unitPrice * this.quantity;
- en: var discountAmount = priceWithoutDiscount * discount;
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
  zh: var discountAmount = priceWithoutDiscount * discount;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
  zh: return priceWithoutDiscount - discountAmount;
- en: '};'
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: return OrderDetail;
  id: totrans-660
  prefs: []
  type: TYPE_NORMAL
  zh: return OrderDetail;
- en: '}());'
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: '}());'
- en: exports.OrderDetail = OrderDetail;
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: exports.OrderDetail = OrderDetail;
- en: '[PRE95]'
  id: totrans-663
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: tsc orderDetail --target es6
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: tsc orderDetail --target es6
- en: '[PRE96]'
  id: totrans-665
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: export class OrderDetail {
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: export class OrderDetail {
- en: getTotal(discount) {
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
  zh: getTotal(discount) {
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
  zh: const discountAmount = priceWithoutDiscount * discount;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
  zh: return priceWithoutDiscount - discountAmount;
- en: '}'
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE97]'
  id: totrans-673
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: tsc orderDetail --outDir dist
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: tsc orderDetail --outDir dist
- en: '[PRE98]'
  id: totrans-675
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: tsc orderDetail --watch
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: tsc orderDetail --watch
- en: '[PRE99]'
  id: totrans-677
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'getTotal(discount: number): number {'
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: 'getTotal(discount: number): number {'
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
  zh: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * (discount || 0);
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
  zh: const discountAmount = priceWithoutDiscount * (discount || 0);
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
  zh: return priceWithoutDiscount - discountAmount;
- en: '}'
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE100]'
  id: totrans-683
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: export class OrderDetail {
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: export class OrderDetail {
- en: '...'
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: doSomething(input) {
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: doSomething(input) {
- en: input.something();
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
  zh: input.something();
- en: return input.result;
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: return input.result;
- en: '}'
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE101]'
  id: totrans-691
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: tsc orderDetail --noImplicitAny
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
  zh: tsc orderDetail --noImplicitAny
- en: '[PRE102]'
  id: totrans-693
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'orderDetail.ts(14,15): error TS7006: Parameter ''input'' implicitly has an
    ''any'' type.'
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
  zh: 'orderDetail.ts(14,15): 错误 TS7006: 参数 ''input'' 隐含地具有 ''any'' 类型。'
- en: '[PRE103]'
  id: totrans-695
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'doSomething(input: {something: () => void, result: string}) {'
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: 'doSomething(input: {something: () => void, result: string}) {'
- en: input.something();
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: input.something();
- en: return input.result;
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: return input.result;
- en: '}'
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE104]'
  id: totrans-700
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'getTotal(discount: number): number {'
  id: totrans-701
  prefs: []
  type: TYPE_NORMAL
  zh: 'getTotal(discount: number): number {'
- en: if (discount) {
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: if (discount) {
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
  zh: const discountAmount = priceWithoutDiscount * discount;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: return priceWithoutDiscount - discountAmount;
- en: '} else {'
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: // We forgot about this branch!
  id: totrans-707
  prefs: []
  type: TYPE_NORMAL
  zh: // 我们忘记了这个分支！
- en: '}'
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE105]'
  id: totrans-710
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: tsc orderDetail
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
  zh: tsc orderDetail
- en: '[PRE106]'
  id: totrans-712
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: tsc orderDetail --noImplicitReturns
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
  zh: tsc orderDetail --noImplicitReturns
- en: '[PRE107]'
  id: totrans-714
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'orderDetail.ts(9,31): error TS7030: Not all code paths return a value.'
  id: totrans-715
  prefs: []
  type: TYPE_NORMAL
  zh: 'orderDetail.ts(9,31): 错误 TS7030: 不是所有的代码路径都返回一个值。'
- en: '[PRE108]'
  id: totrans-716
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: '{'
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"compilerOptions": {'
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: '"compilerOptions": {'
- en: '"target": "esnext",'
  id: totrans-719
  prefs: []
  type: TYPE_NORMAL
  zh: '"target": "esnext",'
- en: '"outDir": "dist",'
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: '"outDir": "dist",'
- en: '"module": "es6",'
  id: totrans-721
  prefs: []
  type: TYPE_NORMAL
  zh: '"module": "es6",'
- en: '"moduleResolution": "node",'
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: '"moduleResolution": "node",'
- en: '"sourceMap": true,'
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
  zh: '"sourceMap": true,'
- en: '"noImplicitReturns": true,'
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: '"noImplicitReturns": true,'
- en: '"noImplicitAny": true'
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: '"noImplicitAny": true'
- en: '}'
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE109]'
  id: totrans-728
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: tsc
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: tsc
- en: '[PRE110]'
  id: totrans-730
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '{'
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"compilerOptions": {'
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
  zh: '"compilerOptions": {'
- en: '...'
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '},'
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '"files": ["product.ts", "orderDetail.ts"]'
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: '"files": ["product.ts", "orderDetail.ts"]'
- en: '}'
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE111]'
  id: totrans-737
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '{'
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"compilerOptions": {'
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: '"compilerOptions": {'
- en: '...'
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '},'
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '"include": ["src/**/*"]'
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: '"include": ["src/**/*"]'
- en: '}'
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE112]'
  id: totrans-744
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: tsc
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
  zh: tsc
- en: '[PRE113]'
  id: totrans-746
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: npm install -g tslint
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: npm install -g tslint
- en: '[PRE114]'
  id: totrans-748
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: export interface Product {
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: export interface Product {
- en: 'name: string;'
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: 'name: string;'
- en: 'unitPrice: number;'
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
  zh: 'unitPrice: number;'
- en: '}'
  id: totrans-752
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: export class OrderDetail {
  id: totrans-753
  prefs: []
  type: TYPE_NORMAL
  zh: export class OrderDetail {
- en: 'product: Product;'
  id: totrans-754
  prefs: []
  type: TYPE_NORMAL
  zh: 'product: Product;'
- en: 'quantity: number;'
  id: totrans-755
  prefs: []
  type: TYPE_NORMAL
  zh: 'quantity: number;'
- en: 'getTotal(discount: number): number {'
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
  zh: 'getTotal(discount: number): number {'
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
  zh: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: const discountAmount = priceWithoutDiscount * discount;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-759
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 priceWithoutDiscount - discountAmount;
- en: '}'
  id: totrans-760
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-761
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE115]'
  id: totrans-762
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: '{'
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"rules": {'
  id: totrans-764
  prefs: []
  type: TYPE_NORMAL
  zh: '"rules": {'
- en: '"member-access": true'
  id: totrans-765
  prefs: []
  type: TYPE_NORMAL
  zh: '"member-access": true'
- en: '}'
  id: totrans-766
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE116]'
  id: totrans-768
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: export class OrderDetail {
  id: totrans-769
  prefs: []
  type: TYPE_NORMAL
  zh: export class OrderDetail {
- en: 'public product: Product;'
  id: totrans-770
  prefs: []
  type: TYPE_NORMAL
  zh: 'public product: Product;'
- en: 'public quantity: number;'
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
  zh: 'public quantity: number;'
- en: 'public getTotal(discount: number): number {'
  id: totrans-772
  prefs: []
  type: TYPE_NORMAL
  zh: 'public getTotal(discount: number): number {'
- en: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
  id: totrans-773
  prefs: []
  type: TYPE_NORMAL
  zh: const priceWithoutDiscount = this.product.unitPrice * this.quantity;
- en: const discountAmount = priceWithoutDiscount * discount;
  id: totrans-774
  prefs: []
  type: TYPE_NORMAL
  zh: const discountAmount = priceWithoutDiscount * discount;
- en: return priceWithoutDiscount - discountAmount;
  id: totrans-775
  prefs: []
  type: TYPE_NORMAL
  zh: return priceWithoutDiscount - discountAmount;
- en: '}'
  id: totrans-776
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-777
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE117]'
  id: totrans-778
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '{'
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"extends": ["tslint:recommended"]'
  id: totrans-780
  prefs: []
  type: TYPE_NORMAL
  zh: '“extends”: [“tslint:recommended”]'
- en: '}'
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE118]'
  id: totrans-782
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '{'
  id: totrans-783
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"extends": ["tslint:recommended"],'
  id: totrans-784
  prefs: []
  type: TYPE_NORMAL
  zh: '“extends”: [“tslint:recommended”],'
- en: '"rules": {'
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
  zh: '“rules”: {'
- en: '"interface-name": false'
  id: totrans-786
  prefs: []
  type: TYPE_NORMAL
  zh: '“interface-name”: false'
- en: '}'
  id: totrans-787
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-788
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE119]'
  id: totrans-789
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '{'
  id: totrans-790
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"extends": ["tslint:recommended"],'
  id: totrans-791
  prefs: []
  type: TYPE_NORMAL
  zh: '“extends”: [“tslint:recommended”],'
- en: '"linterOptions": {'
  id: totrans-792
  prefs: []
  type: TYPE_NORMAL
  zh: '“linterOptions”: {'
- en: '"exclude": ["node_modules/**/*.ts"]'
  id: totrans-793
  prefs: []
  type: TYPE_NORMAL
  zh: '“exclude”: [“node_modules/**/*.ts”]'
- en: '}'
  id: totrans-794
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-795
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE120]'
  id: totrans-796
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: const flag = false;
  id: totrans-797
  prefs: []
  type: TYPE_NORMAL
  zh: const flag = false;
- en: '[PRE121]'
  id: totrans-798
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: class Product {
  id: totrans-799
  prefs: []
  type: TYPE_NORMAL
  zh: class Product {
- en: 'constructor(public name: string, public unitPrice: number) {}'
  id: totrans-800
  prefs: []
  type: TYPE_NORMAL
  zh: 'constructor(public name: string, public unitPrice: number) {}'
- en: '}'
  id: totrans-801
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: let table = new Product();
  id: totrans-802
  prefs: []
  type: TYPE_NORMAL
  zh: let table = new Product();
- en: table.name = "Table";
  id: totrans-803
  prefs: []
  type: TYPE_NORMAL
  zh: table.name = "Table";
- en: table.unitPrice = 700;
  id: totrans-804
  prefs: []
  type: TYPE_NORMAL
  zh: table.unitPrice = 700;
- en: '```'
  id: totrans-805
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: If we want our TypeScript program to support IE11, what should the compiler`--target`
    option be?
  id: totrans-806
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们希望我们的 TypeScript 程序支持 IE11，编译器的 `--target` 选项应该是什么？
- en: Is it possible to get the TypeScript compiler to transpile ES6 `.js` files?
    If so, how?
  id: totrans-807
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是否可能让 TypeScript 编译器转译 ES6 `.js` 文件？如果可以，如何做？
- en: How can we prevent `console.log()` statements from getting into our code?
  id: totrans-808
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何防止 `console.log()` 语句进入我们的代码？
- en: Further reading
  id: totrans-809
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '[http://www.typescriptlang.org](http://www.typescriptlang.org) has great documentation
    on TypeScript. It is worth looking at the following pages of this site to cement
    your knowledge, or using them as a quick reference guide:'
  id: totrans-810
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.typescriptlang.org](http://www.typescriptlang.org) 在 TypeScript
    上有很好的文档。值得查看这个网站的以下页面来巩固你的知识，或者将它们用作快速参考指南：'
- en: '**Basic types**: [https://www.typescriptlang.org/docs/handbook/basic-types.html](https://www.typescriptlang.org/docs/handbook/basic-types.html)'
  id: totrans-811
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基本类型**: [https://www.typescriptlang.org/docs/handbook/basic-types.html](https://www.typescriptlang.org/docs/handbook/basic-types.html)'
- en: '**Interfaces**: [https://www.typescriptlang.org/docs/handbook/interfaces.html](https://www.typescriptlang.org/docs/handbook/interfaces.html)'
  id: totrans-812
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**接口**: [https://www.typescriptlang.org/docs/handbook/interfaces.html](https://www.typescriptlang.org/docs/handbook/interfaces.html)'
- en: '**Classes**: [https://www.typescriptlang.org/docs/handbook/classes.html](https://www.typescriptlang.org/docs/handbook/classes.html)'
  id: totrans-813
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**类**: [https://www.typescriptlang.org/docs/handbook/classes.html](https://www.typescriptlang.org/docs/handbook/classes.html)'
- en: '**Modules**: [https://www.typescriptlang.org/docs/handbook/modules.html](https://www.typescriptlang.org/docs/handbook/modules.html)'
  id: totrans-814
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模块**: [https://www.typescriptlang.org/docs/handbook/modules.html](https://www.typescriptlang.org/docs/handbook/modules.html)'
- en: '**Compiler Options**: [https://www.typescriptlang.org/docs/handbook/compiler-options.html](https://www.typescriptlang.org/docs/handbook/compiler-options.html)'
  id: totrans-815
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编译器选项**: [https://www.typescriptlang.org/docs/handbook/compiler-options.html](https://www.typescriptlang.org/docs/handbook/compiler-options.html)'
- en: The full list of `tslint` rules can be found at [https://palantir.github.io/tslint/rules/](https://palantir.github.io/tslint/rules/).
  id: totrans-816
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的 `tslint` 规则列表可以在 [https://palantir.github.io/tslint/rules/](https://palantir.github.io/tslint/rules/)
    找到。
