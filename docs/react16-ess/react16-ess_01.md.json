["```jsx\nclass App extends Component {\n  state = {}\n\n  componentDidCatch(err) {\n    this.setState({ err: err.message });\n  }\n\n  render() {\n    return (<p><MyError err={this.state.err}/></p>);\n  }\n}\n```", "```jsx\nconst MyError = (props) => {\n  if (props.err) {\n    return <b style={{color: 'red'}}>{props.err}</b>;\n  }\n\n  throw new Error('epic fail');\n};\n```", "```jsx\nconst Multi = () => [\n  'first sibling',\n  'second sibling'\n].map((v, i) => <p key={i}>{v}</p>);\n```", "```jsx\nconst Label = () => 'Name:';\n\nconst MultiWithString = () => [\n  'first sibling',\n  'second sibling'\n].map((v, i) => <p key={i}><Label/> {v}</p>);\n```", "```jsx\nimport React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nclass MyPortal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.el = document.createElement('strong');\n  }\n\n  componentWillMount() {\n    document.body.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.el);\n  }\n\n  render() {\n    return createPortal(\n      this.props.children,\n      this.el\n    );\n  }\n};\n```", "```jsx\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <p>Main content</p>\n        <MyPortal>Bro, you just notified me!</MyPortal>\n      </div>\n    );\n  }\n}\n```"]