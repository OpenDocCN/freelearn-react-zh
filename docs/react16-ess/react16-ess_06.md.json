["```jsx\n    **npm install --save snapkite-stream-client**\n\n    ```", "```jsx\nimport React, { Component } from 'react';\nimport SnapkiteStreamClient from 'snapkite-stream-client';\nimport StreamTweet from './StreamTweet';\nimport Header from './Header.react';\n\nclass Stream extends Component {\n  state = {\n    tweet: null\n  }\n\n  componentDidMount() {\n    SnapkiteStreamClient.initializeStream(this.handleNewTweet);\n  }\n\n  componentWillUnmount() {\n    SnapkiteStreamClient.destroyStream();\n  }\n\n  handleNewTweet = (tweet) => {\n    this.setState({\n      tweet: tweet\n    });\n  }\n\n  render() {\n    const { tweet } = this.state;\n    const { onAddTweetToCollection } = this.props; \n    const headerText = 'Waiting for public photos from Twitter...';\n\n    if (tweet) {\n      return (\n        <StreamTweet\n          tweet={tweet}\n           onAddTweetToCollection={onAddTweetToCollection}\n        />\n      );\n    }\n\n    return (\n      <Header text={headerText}/>\n    );\n  }\n}\n\nexport default Stream;\n```", "```jsx\nrender() {\n  const { tweet } = this.state;\n  const { onAddTweetToCollection } = this.props;\n  const headerText = 'Waiting for public photos from Twitter...';\n\n  if (tweet) {\n    return (\n      <StreamTweet\n        tweet={tweet}\n        onAddTweetToCollection={onAddTweetToCollection}\n      />\n    );\n  }\n\n  return (\n    <Header text={headerText}/>\n  );\n}\n```", "```jsx\nhandleNewTweet = (tweet) => {\n  this.setState({\n    tweet: tweet\n  });\n}\n```", "```jsx\ncomponentDidMount() {\n  SnapkiteStreamClient.initializeStream(this.handleNewTweet);\n}\n```", "```jsx\ncomponentWillUnmount() {\n  SnapkiteStreamClient.destroyStream();\n}\n```", "```jsx\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Tweet from './Tweet';\n\nclass StreamTweet extends Component {\n\n  // define other component lifecycle methods here\n\n  render() {\n    console.log('[Snapterest] StreamTweet: Running render()');\n\n    const { headerText } = this.state;\n    const { tweet, onAddTweetToCollection } = this.props;\n\n    return (\n      <section>\n        <Header text={headerText} />\n        <Tweet\n          tweet={tweet}\n          onImageClick={onAddTweetToCollection}\n        />\n      </section>\n    );\n  }\n}\n\nexport default StreamTweet;\n```", "```jsx\ncomponentWillMount() {\n  console.log('[Snapterest] StreamTweet: 1\\. Running componentWillMount()');\n\n  this.setState({\n    numberOfCharactersIsIncreasing: true,\n    headerText: 'Latest public photo from Twitter'\n  });\n\n  window.snapterest = {\n    numberOfReceivedTweets: 1,\n    numberOfDisplayedTweets: 1\n  };\n}\n```", "```jsx\nwindow.snapterest = {\n  numberOfReceivedTweets: 1,\n  numberOfDisplayedTweets: 1\n};\n```", "```jsx\ncomponentDidMount = () => {\n  console.log('[Snapterest] StreamTweet: 3\\. Running componentDidMount()');\n\n  const componentDOMRepresentation = ReactDOM.findDOMNode(this);\n\n  window.snapterest.headerHtml = componentDOMRepresentation.children[0].outerHTML;\n  window.snapterest.tweetHtml = componentDOMRepresentation.children[1].outerHTML;\n}\n```", "```jsx\nrender() {\n  console.log('[Snapterest] StreamTweet: Running render()');\n\n  const { headerText } = this.state;\n  const { tweet, onAddTweetToCollection } = this.props;\n\n  return (\n    <section>\n      <Header text={headerText} />\n      <Tweet\n        tweet={tweet}\n        onImageClick={onAddTweetToCollection}\n      />\n    </section>\n  );\n}\n```", "```jsx\ncomponentWillUnmount() {\n  console.log('[Snapterest] StreamTweet: 8\\. Running componentWillUnmount()');\n\n  delete window.snapterest;\n}\n```", "```jsx\ndelete window.snapterest;\n```"]