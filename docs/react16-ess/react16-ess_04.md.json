["```jsx\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nclass ReactClass extends Component {\n  render () {\n    return (\n      <h1 className=\"header\">React Component</h1>\n    );\n  }\n}\n\nconst reactComponent = ReactDOM.render(\n  <ReactClass/>,\n  document.getElementById('react-application')\n);\nexport default ReactClass;\n```", "```jsx\nclass ReactClass extends Component {\n  render() {\n    return null;\n  }\n}\n```", "```jsx\nclass ReactClass extends Component {\n  render() {\n    return (\n      <h1 className=\"header\">React Component</h1>\n    );\n  }\n}\n```", "```jsx\n<h1 data-reactroot class=\"header\">React Component</h1>\n```", "```jsx\nclass ReactClass extends Component {\n  render() {\n    const componentState = {\n      isHidden: true\n    };\n\n    if (componentState.isHidden) {\n      return null;\n    }\n\n    return (\n      <h1 className=\"header\">React Component</h1>\n    );\n  }\n}\n```", "```jsx\nclass ReactClass extends Component {\n  render() {\n    const componentState = {\n      isHidden: false\n    };\n\n    if (componentState.isHidden) {\n      return null;\n    }\n\n    return (\n      <h1 className=\"header\">{this.props.header}</h1>\n    );\n  }\n}\n```", "```jsx\nclass ReactClass extends Component {\n  render() {\n    if (this.props.isHidden) {\n      return null;\n    }\n\n    return (\n      <h1 className=\"header\">{this.props.header}</h1>\n    );\n  }\n}\n```", "```jsx\nclass ReactClass extends Component {\n  render() {\n    const {\n      isHidden,\n      header\n    } = this.props;\n\n    if (isHidden) {\n      return null;\n    }\n\n    return (\n      <h1 className=\"header\">{this.header}</h1>\n    );\n  }\n}\n```", "```jsx\nclass ReactClass extends React.Component {\n  state = {\n    isHidden: false\n  };\n\n  render() {\n    const {\n      isHidden\n    } = this.state;\n\n    if (isHidden) {\n      return null;\n    }\n\n    return (\n      <h1 className=\"header\">React Component</h1>\n    );\n  }\n}\n```", "```jsx\n{\n  isHidden: true,\n  title: 'Stateful React Component'\n}\n```", "```jsx\n{\n  isHidden: false\n}\n```", "```jsx\n{\n  isHidden: false,\n  title: 'Stateful React Component'\n}\n```", "```jsx\nthis.setState(prevState => ({\n  isHeaderHidden: !prevState.isHeaderHidden\n}));\n```", "```jsx\n<button onClick={this.handleClick}>\n  Toggle Header\n</button>\n```", "```jsx\n<button class=\"btn btn-default\">Toggle header</button>\n```", "```jsx\nclass ReactClass extends Component {\n  state = {\n    isHeaderHidden: false\n  }\n\n  handleClick = () => {\n    this.setState(prevState => ({\n      isHeaderHidden: !prevState.isHeaderHidden\n    }));\n  }\n\n  render() {\n    const {\n      isHeaderHidden\n    } = this.state;\n\n    if (isHeaderHidden) {\n      return (\n        <button\n          className=\"btn ban-default\"\n          onClick={this.handleClick}\n        >\n          Toggle Header\n        </button>\n      );\n    }\n\n    return (\n      <div>\n        <h1 className=\"header\">Stateful React Component</h1>\n        <button\n          className=\"btn ban-default\"\n          onClick={this.handleClick}\n        >\n          Toggle Header\n        </button>\n      </div>\n    );\n  }\n}\n```", "```jsx\nclass ReactClass extends Component {\n  state = {}\n  isHeaderHidden = false\n\n  handleClick = () => {\n    this.isHeaderHidden = !this.isHeaderHidden;\n  }\n\n  render() {\n    if (this.isHeaderHidden) {\n      return (\n        <button\n          className=\"btn ban-default\"\n          onClick={this.handleClick}\n        >\n          Toggle Header\n        </button>\n      );\n    }\n\n    return (\n      <div>\n        <h1 className=\"header\">Stateful React Component</h1>\n        <button\n          className=\"btn ban-default\"\n          onClick={this.handleClick}\n        >\n          Toggle Header\n        </button>\n      </div>\n    );\n  }\n}\n```"]