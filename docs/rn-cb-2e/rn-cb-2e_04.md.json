["```jsx\nimport React, { Component } from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\nimport Device from './utils/Device';\n\nimport data from './data.json';\n```", "```jsx\nexport default class App extends Component {\n  renderMaster() {\n    return (\n      <Text>Render on phone and tablets!!</Text>\n    );\n  }\n\n  renderDetail() {\n    if (Device.isTablet()) {\n      return (\n        <Text>Render on tablets only!!</Text>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <View style={styles.content}>\n        {this.renderMaster()}\n        {this.renderDetail()}\n      </View>\n    );\n  }\n}\n```", "```jsx\nconst styles = StyleSheet.create({\n  content: {\n    paddingTop: 40,\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n```", "```jsx\nimport { Dimensions, Alert } from 'react-native';\n\n// Tablet portrait dimensions\nconst tablet = {\n  width: 552,\n  height: 960,\n};\n\nclass Device {\n  // Added in next steps\n}\n\nconst device = new Device();\nexport default device;\n```", "```jsx\nclass Device {\n getPortraitDimensions() {\n    const { width, height } = Dimensions.get(\"window\");\n\n    return {\n      width: Math.min(width, height),\n      height: Math.max(width, height),\n    };\n  }\n\n  getLandscapeDimensions() {\n    const { width, height } = Dimensions.get(\"window\");\n\n    return {\n      width: Math.max(width, height),\n      height: Math.min(width, height),\n    };\n  }\n}\n```", "```jsx\n  isPhone() {\n    const dimension = this.getPortraitDimensions();\n    return dimension.height < tablet.height;\n  }\n\n  isTablet() {\n    const dimension = this.getPortraitDimensions();\n    return dimension.height >= tablet.height;\n  }\n```", "```jsx\nimport UserList from './UserList';\n\nexport default class App extends Component {\n renderMaster() {\n    return (\n      <UserList contacts={data.results} />\n    );\n  }\n\n  //...\n}\n```", "```jsx\nimport React, { Component } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  ListView,\n  Image,\n  TouchableOpacity,\n} from 'react-native';\nimport styles from './styles';\n\nexport default class UserList extends Component {\n // Defined in the following steps \n}\n```", "```jsx\nexport default class UserList extends Component {\n constructor(properties) {\n    super(properties);\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (r1, r2) => r1 !== r2\n    });\n\n    this.state = {\n      dataSource: dataSource.cloneWithRows(properties.contacts),\n    };\n  }\n\n  //...\n}\n```", "```jsx\nrender() {\n return (\n  <View style={styles.main}>\n   <Text style={styles.toolbar}>\n   My contacts!\n   </Text>\n   <ListView dataSource={this.state.dataSource}\n    renderRow={this.renderContact}\n    style={styles.main} />\n  </View> );\n }\n```", "```jsx\n        renderContact = (contact) => { \n          return ( \n            <TouchableOpacity style={styles.row}> \n              <Image source={{uri: `${contact.picture.large}`}} style=\n              {styles.img} /> \n              <View style={styles.info}> \n                <Text style={styles.name}> \n                  {this.capitalize(contact.name.first)} \n                  {this.capitalize(contact.name.last)} \n                </Text> \n                <Text style={styles.phone}>{contact.phone}</Text> \n              </View> \n            </TouchableOpacity> \n          ); \n        }\n```", "```jsx\n  capitalize(value) {\n    return value[0].toUpperCase() + value.substring(1);\n  }\n```", "```jsx\nimport { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: '#dde6e9',\n  },\n  toolbar: {\n    backgroundColor: '#2989dd',\n    color: '#fff',\n    paddingTop: 50,\n    padding: 20,\n    textAlign: 'center',\n    fontSize: 20,\n  },\n  // Remaining styles added in next step.\n});\n```", "```jsx\n  row: {\n    flexDirection: 'row',\n    padding: 10,\n  },\n  img: {\n    width: 70,\n    height: 70,\n    borderRadius: 35,\n  },\n  info: {\n    marginLeft: 10,\n  },\n  name: {\n    color: '#333',\n    fontSize: 22,\n    fontWeight: 'bold',\n  },\n  phone: {\n    color: '#aaa',\n    fontSize: 16,\n  },\n```", "```jsx\nconst styles = StyleSheet.create({\n  content: {\n paddingTop: 40,\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n```", "```jsx\nimport UserDetail from './UserDetail'; \nexport default class App extends Component {\n  renderMaster() {\n    return (\n      <UserList contacts={data.results} />\n    );\n  }\n\n renderDetail() {\n    if (Device.isTablet()) {\n      return (\n        <UserDetail contact={data.results[0]} />\n      );\n    }\n  }\n}\n```", "```jsx\nimport React from 'react';\nimport {\n  View,\n  Text,\n} from 'react-native';\nimport styles from './styles';\n\nconst UserList = ({ contact }) => (\n  <View style={styles.main}>\n    <Text style={styles.toolbar}>Details should go here!</Text>\n    <Text>\n      This is the detail view:{contact.name.first} {contact.name.last}\n    </Text>\n  </View>\n);\n\nexport default UserList;\n```", "```jsx\nimport { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 3,\n    backgroundColor: '#f0f3f4',\n  },\n  toolbar: {\n    backgroundColor: '#2989dd',\n    color: '#fff',\n    paddingTop: 50,\n    padding: 20,\n    textAlign: 'center',\n    fontSize: 20,\n  },\n});\n\nexport default styles;\n```", "```jsx\nimport React from 'react';\nimport {\n  Dimensions,\n  StyleSheet,\n  Text,\n  View\n} from 'react-native';\n```", "```jsx\nexport default class App extends React.Component {\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  text: {\n    fontSize: 40,\n  }\n});\n```", "```jsx\nexport default class App extends React.Component {\n render() {\n    return (\n      <View\n        onLayout={() => this.handleLayoutChange}\n        style={styles.container}\n      >\n        <Text style={styles.text}>\n          {this.state.orientation}\n        </Text>\n      </View>\n    );\n  }\n}\n```", "```jsx\n  handleLayoutChange() {\n    this.getOrientation();\n  }\n\n  getOrientation() {\n    const { width, height } = Dimensions.get('window');\n    const orientation = height > width ? 'Portrait' : 'Landscape';\n    this.setState({\n      orientation\n    });\n  }\n```", "```jsx\n  componentWillMount() {\n    this.getOrientation();\n  }\n```", "```jsx\nimport Menu from './Menu';\n\nexport default class App extends React.Component {\n\n  // ...\n\n  render() {\n    return (\n      <View\n        onLayout={() => {this.handleLayoutChange()}}\n        style={styles.container}\n      >\n        <Menu orientation={this.state.orientation} />\n        <View style={styles.main}>\n          <Text>Main Content</Text>\n        </View>\n      </View>\n    );\n  }\n}\n```", "```jsx\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  main: {\n    flex: 1,\n    backgroundColor: '#ecf0f1',\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n});\n```", "```jsx\nimport React, { Component } from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\nimport { FontAwesome } from '@expo/vector-icons';\n```", "```jsx\nexport default class Menu extends Component {\n  state = {\n    options: [\n      {title: 'Dashboard', icon: 'dashboard'},\n      {title: 'Inbox', icon: 'inbox'},\n      {title: 'Graphs', icon: 'pie-chart'},\n      {title: 'Search', icon: 'search'},\n      {title: 'Settings', icon: 'gear'},\n    ],\n  };\n\n  // Remainder defined in following steps\n}\n```", "```jsx\n  render() {\n    return (\n      <View style={styles.content}>\n        {this.state.options.map(this.renderOption)}\n      </View>\n    );\n  }\n```", "```jsx\n  renderOption = (option, index) => {\n    const isLandscape = this.properties.orientation === 'Landscape';\n    const title = isLandscape\n      ? <Text style={styles.title}>{option.title}</Text>\n      : null;\n    const iconSize = isLandscape ? 27 : 35;\n\n    return (\n      <View key={index} style={[styles.option, styles.landscape]}>\n        <FontAwesome name={option.icon} size={iconSize} color=\"#fff\" />\n        {title}\n      </View>\n    );\n  }\n```", "```jsx\nconst styles = StyleSheet.create({\n  content: {\n    backgroundColor: '#34495e',\n    paddingTop: 50,\n  },\n  option: {\n    flexDirection: 'row',\n    paddingBottom: 15,\n  },\n  landscape: {\n    paddingRight: 30,\n    paddingLeft: 30,\n  },\n  title: {\n    color: '#fff',\n    fontSize: 16,\n    margin: 5,\n    marginLeft: 20,\n  },\n});\n```", "```jsx\nyarn add react-navigation\n```", "```jsx\nnpm install --save react-navigation\n```", "```jsx\nimport React, { Component } from 'react';\nimport { StackNavigator } from 'react-navigation';\n\nimport HomeScreen from './HomeScreen';\n```", "```jsx\nconst App = StackNavigator({\n  Home: {\n    screen: HomeScreen,\n    navigationOptions: ({ navigation }) => ({\n      title: 'Home'\n    }),\n  },\n});\n\nexport default App;\n```", "```jsx\nimport React, { Component } from 'react';\nimport {\n  TouchableOpacity,\n  View,\n  Text,\n  SafeAreaView,\n} from 'react-native';\n\nimport styles from './styles';\n```", "```jsx\nexport default class HomeScreen extends Component {\n  state = {\n    links: [\n      {\n        title: 'Smashing Magazine',\n        url: 'https://www.smashingmagazine.com/articles/'\n      },\n      {\n        title: 'CSS Tricks',\n        url: 'https://css-tricks.com/'\n      },\n      {\n        title: 'Gitconnected Blog',\n        url: 'https://medium.com/gitconnected'\n      },\n      {\n        title: 'Hacker News',\n        url: 'https://news.ycombinator.com/'\n      }\n     ],\n  };\n}\n```", "```jsx\n  render() {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.buttonList}>\n          {this.state.links.map(this.renderButton)}\n        </View>\n      </SafeAreaView>\n    );\n  }\n```", "```jsx\n  renderButton = (button, index) => {\n    return (\n      <TouchableOpacity\n        key={index}\n        onPress={() => this.handleButtonPress(button)}\n        style={styles.button}\n      >\n        <Text style={styles.text}>{button.title}</Text>\n      </TouchableOpacity>\n    );\n  }\n```", "```jsx\n  handleButtonPress(button) {\n    const { url, title } = button;\n    this.properties.navigation.navigate('Browser', { url, title });\n  }\n```", "```jsx\nimport { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonList: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  button: {\n    margin: 10,\n    backgroundColor: '#c0392b',\n    borderRadius: 3,\n    padding: 10,\n    paddingRight: 30,\n    paddingLeft: 30,\n  },\n  text: {\n    color: '#fff',\n    textAlign: 'center',\n  },\n});\n\nexport default styles;\n```", "```jsx\nimport BrowserScreen from './BrowserScreen';\n```", "```jsx\nconst App = StackNavigator({\n  Home: {\n    screen: HomeScreen,\n    navigationOptions: ({ navigation }) => ({\n      title: 'Home'\n    }),\n  },\n Browser: {\n    screen: BrowserScreen,\n    navigationOptions: ({ navigation }) => ({\n      title: navigation.state.params.title\n    }),\n  },\n});\n```", "```jsx\nimport React, { Component } from 'react';\nimport { WebView } from 'react-native';\n```", "```jsx\nexport default class BrowserScreen extends Component {\n  render() {\n    const { params } = this.properties.navigation.state;\n\n    return(\n      <WebView\n        source={{uri: params.url}}\n      />\n    );\n  }\n}\n```", "```jsx\nimport React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Platform } from 'react-native';\nimport { Linking } from 'react-native';\nimport { WebBrowser } from 'expo';\n```", "```jsx\nexport default class App extends React.Component {\n  state = {\n    links: [\n      {\n        title: 'Call Support',\n        url: 'tel:+12025550170',\n        type: 'phone'\n      },\n      {\n        title: 'Email Support',\n        url: 'mailto:support@email.com',\n        type: 'email',\n      },\n      {\n        title: 'Text Support',\n        url: 'sms:+12025550170',\n        type: 'text message',\n      },\n      {\n        title: 'Join us on Slack',\n        url: 'slack://channel?team=T5KFMSASF&id=C5K142J57',\n        type: 'slack deep link',\n      },\n      {\n        title: 'Visit Site (internal)',\n        url: 'https://google.com',\n        type: 'internal link'\n      },\n      {\n        title: 'Visit Site (external)',\n        url: 'https://google.com',\n        type: 'external link'\n      }\n    ]\n  }\n\n}\n```", "```jsx\n  render() {\n    return(\n      <View style={styles.container}>\n        <View style={styles.buttonList}>\n          {this.state.links.map(this.renderButton)}\n        </View>\n      </View>\n    );\n  }\n```", "```jsx\n  renderButton = (button, index) => {\n    return(\n      <TouchableOpacity\n        key={index}\n        onPress={() => this.handleButtonPress(button)}\n        style={styles.button}\n      >\n        <Text style={styles.text}>{button.title}</Text>\n      </TouchableOpacity>\n    );\n  }\n```", "```jsx\n  handleButtonPress(button) {\n    if (button.type === 'internal link') {\n      WebBrowser.openBrowserAsync(button.url);\n    } else {\n      Linking.openURL(button.url).catch(({ message }) => {\n        if (message.includes('slack://')) {\n          this.handleMissingApp();\n        }\n      });\n    }\n  }\n```", "```jsx\n  handleMissingApp() {\n    if (Platform.OS === 'ios') {\n      Linking.openURL(`https://itunes.apple.com/us/app/id618783545`);\n    } else {\n      Linking.openURL(\n        `https://play.google.com/store/applications/details?id=com.Slack`\n      );\n    }\n  }\n```", "```jsx\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonList: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  button: {\n    margin: 10,\n    backgroundColor: '#c0392b',\n    borderRadius: 3,\n    padding: 10,\n    paddingRight: 30,\n    paddingLeft: 30,\n  },\n  text: {\n    color: '#fff',\n    textAlign: 'center',\n  },\n});\n```", "```jsx\nimport React from 'react';\nimport {\n Alert,\n StyleSheet,\n ScrollView,\n SafeAreaView,\n Text,\n TextInput,\n} from 'react-native';\n\nimport UserForm from './UserForm';\n```", "```jsx\nconst App = () => (\n  <SafeAreaView style={styles.main}>\n    <Text style={styles.toolbar}>Fitness App</Text>\n    <ScrollView style={styles.content}>\n      <UserForm />\n    </ScrollView>\n  </SafeAreaView>\n);\n\nconst styles = StyleSheet.create({\n  // Defined in a later step\n});\n\nexport default App; \n```", "```jsx\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: '#ecf0f1',\n  },\n  toolbar: {\n    backgroundColor: '#1abc9c',\n    padding: 20,\n    color: '#fff',\n    fontSize: 20,\n  },\n  content: {\n    padding: 10,\n  },\n});\n```", "```jsx\nimport React, { Component } from 'react';\nimport {\n  Alert,\n  StyleSheet,\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n} from 'react-native';\n```", "```jsx\nexport default class UserForm extends Component { \n  state = {}; \n\n  // Defined in a later step\n} \n\nconst styles = StyleSheet.create({ \n // Defined in a later step\n});\n```", "```jsx\n  render() {\n    return (\n      <View style={styles.panel}>\n        <Text style={styles.instructions}>\n          Please enter your contact information\n        </Text>\n        {this.renderTextfield({ name: 'name', placeholder: 'Your \n        name' })}\n        {this.renderTextfield({ name: 'phone', placeholder: 'Your\n        phone number', keyboard: 'phone-pad' })}\n        {this.renderTextfield({ name: 'email', placeholder: 'Your \n        email address', keyboard: 'email-address'})}\n        {this.renderButton()}\n      </View>\n    );\n  }\n```", "```jsx\n  renderTextfield(options) {\n    return (\n      <TextInput\n        style={styles.textfield}\n        onChangeText={(value) => this.setState({ [options.name]: \n        value })}\n        placeholder={options.label}\n        value={this.state[options.name]}\n        keyboardType={options.keyboard || 'default'}\n      />\n    );\n  }\n```", "```jsx\n  renderButton() {\n    return (\n      <TouchableOpacity\n        onPress={this.handleButtonPress}\n        style={styles.button}\n      >\n        <Text style={styles.buttonText}>Save</Text>\n      </TouchableOpacity>\n    );\n  }\n```", "```jsx\n  handleButtonPress = () => {\n    const { name, phone, email } = this.state;\n\n    Alert.alert(`User's data`,`Name: ${name}, Phone: ${phone}, \n    Email: ${email}`);\n  }\n```", "```jsx\nconst styles = StyleSheet.create({\n panel: {\n  backgroundColor: '#fff',\n  borderRadius: 3,\n  padding: 10,\n  marginBottom: 20,\n },\n instructions: {\n  color: '#bbb',\n  fontSize: 16,\n  marginTop: 15,\n  marginBottom: 10,\n },\n textfield: {\n  height: 40,\n  marginBottom: 10,\n },\n button: {\n  backgroundColor: '#34495e',\n  borderRadius: 3,\n  padding: 12,\n  flex: 1,\n },\n buttonText: {\n  textAlign: 'center',\n  color: '#fff',\n  fontSize: 16,\n },\n});\n```"]