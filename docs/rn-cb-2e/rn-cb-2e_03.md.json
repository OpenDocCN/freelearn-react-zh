["```jsx\nimport React, { Component } from 'react';\n\nimport {\n  Text,\n  TouchableOpacity,\n} from 'react-native';\n\nimport {\n  Base,\n  Default,\n  Danger,\n  Info,\n  Success\n} from './styles';\n```", "```jsx\nexport default class Button extends Component {\n  getTheme() {\n    // Defined in a later step\n  }\n\n  render() {\n    // Defined in a later step\n  }\n}\n```", "```jsx\n  getTheme() {\n    const { danger, info, success } = this.properties;\n\n    if (info) {\n      return Info;\n    }\n\n    if (success) {\n      return Success;\n    }\n\n    if (danger) {\n      return Danger;\n    }\n\n    return Default;\n  }\n```", "```jsx\n  render() {\n    const theme = this.getTheme();\n    const {\n      children,\n      onPress,\n      style,\n      rounded,\n    } = this.properties;\n\n    return (\n      <TouchableOpacity\n        activeOpacity={0.8}\n        style={[\n          Base.main,\n          theme.main,\n          rounded ? Base.rounded : null ,\n          style,\n        ]}\n        onPress={onPress}\n      >\n        <Text style={[Base.label, theme.label]}>{children}</Text>\n      </TouchableOpacity>\n    );\n  }\n```", "```jsx\nimport React from 'react';\nimport {\n  Alert,\n  StyleSheet,\n  View\n} from 'react-native';\nimport Button from './Button';\n```", "```jsx\nexport default class App extends React.Component {\n  handleButtonPress() {\n    Alert.alert('Alert', 'You clicked this button!');\n  }\n\n  render() {\n    return(\n      <View style={styles.container}>\n        <Button style={styles.button}>\n          My first button\n        </Button>\n        <Button success style={styles.button}>\n          Success button\n        </Button>\n        <Button info style={styles.button}>\n          Info button\n        </Button>\n        <Button danger rounded style={styles.button}\n        onPress={this.handleButtonPress}>\n          Rounded button\n        </Button>\n      </View>\n    );\n  }\n}\n```", "```jsx\nconst styles = StyleSheet.create({\n  container: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  button: {\n    margin: 10,\n  },\n});\n```", "```jsx\nimport { StyleSheet } from 'react-native';\n\nconst Base = StyleSheet.create({\n  main: {\n    padding: 10,\n    borderRadius: 3,\n  },\n  label: {\n    color: '#fff',\n  },\n  rounded: {\n    borderRadius: 20,\n  },\n});\n```", "```jsx\nconst Danger = StyleSheet.create({\n  main: {\n    backgroundColor: '#e74c3c',\n  },\n});\n\nconst Info = StyleSheet.create({\n  main: {\n    backgroundColor: '#3498db',\n  },\n});\n\nconst Success = StyleSheet.create({\n  main: {\n    backgroundColor: '#1abc9c',\n  },\n});\n\nconst Default = StyleSheet.create({\n  main: {\n    backgroundColor: 'rgba(0 ,0 ,0, 0)',\n  },\n  label: {\n    color: '#333',\n  },\n});\n```", "```jsx\nexport {\n  Base,\n  Danger,\n  Info,\n  Success,\n  Default,\n};\n```", "```jsx\nimport React, { Component } from 'react';\nimport { ListView, StyleSheet, Text, View } from 'react-native';\n\nimport Post from './Post';\nimport data from './data.json';\n```", "```jsx\nconst dataSource = new ListView.DataSource({\n  rowHasChanged: (r1, r2) => r1 !== r2,\n});\n\nexport default class App extends Component {\n  state = {\n    dataSource: dataSouce.cloneWithRows(data.posts),\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.toolbar}>\n          <Text style={styles.title}>Latest posts</Text>\n        </View>\n        <ListView\n          dataSource={this.state.dataSource}\n          renderRow={post => <Post {...post} />}\n          style={styles.list}\n          contentContainerStyle={styles.content}\n        />\n      </View>\n    );\n  }\n}\n```", "```jsx\n{\n  \"posts\": [\n    {\n      \"title\": \"The Best Article Ever Written\",\n      \"img\": \"https://i.imgur.com/mf9daCT.jpg\",\n      \"content\": \"Lorem ipsum dolor sit amet...\",\n      \"author\": \"Bob Labla\"\n    },\n    // Add more records here.\n  ]\n}\n```", "```jsx\nimport React from 'react';\nimport {\n  Image,\n  Text,\n  TouchableOpacity,\n  View\n} from 'react-native';\n\nimport styles from './styles';\n\nconst Post = ({ content, img, title }) => (\n  <View style={styles.main}>\n    <Image\n      source={{ uri: img }}\n      style={styles.image}\n    />\n    <View style={styles.content}>\n      <Text style={styles.title}>{title}</Text>\n      <Text>{content}</Text>\n    </View>\n    <TouchableOpacity style={styles.button} activeOpacity={0.8}>\n      <Text style={styles.buttonText}>Read more</Text>\n    </TouchableOpacity>\n  </View>\n);\n\nexport default Post;\n```", "```jsx\nimport { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n  // Defined in later steps\n});\n\nexport default styles;\n```", "```jsx\nconst styles = StyleSheet.create({\n  main: {\n    backgroundColor: '#fff',\n    borderRadius: 3,\n    height: 340,\n    margin: 5,\n    width: 240,\n  }\n});\n```", "```jsx\n  image: {\n    backgroundColor: '#ccc',\n    height: 120,\n    resizeMode: 'cover',\n  }\n```", "```jsx\n  content: {\n    padding: 10,\n    overflow: 'hidden',\n    flex: 1,\n  },\n  title: {\n    fontSize: 18,\n    marginBottom: 5,\n  },\n```", "```jsx\n  button: {\n    backgroundColor: '#1abc9c',\n    borderRadius: 3,\n    padding: 10,\n    margin: 10,\n  },\n  buttonText: {\n    color: '#fff',\n    textAlign: 'center',\n  }\n```", "```jsx\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  toolbar: {\n    backgroundColor: '#34495e',\n    padding: 10,\n    paddingTop: 20,\n  },\n  title: {\n    color: '#fff',\n    fontSize: 20,\n    textAlign: 'center',\n  }\n});\n```", "```jsx\n  list: {\n    backgroundColor: '#f0f3f4',\n    flex: 1,\n    paddingTop: 5,\n    paddingBottom: 5,\n  }\n```", "```jsx\n        content: { \n          flexDirection: 'row', \n          flexWrap: 'wrap', \n          justifyContent: 'space-around', \n        }, \n```", "```jsx\nimport React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Font } from 'expo';\n```", "```jsx\nexport default class App extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.josefinSans}>\n          Hello, Josefin Sans!\n        </Text>\n      </View>\n    );\n  }\n}\n```", "```jsx\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  josefinSans: {\n    fontSize: 40,\n  }\n});\n```", "```jsx\nexport default class App extends React.Component {\n\n componentDidMount() {\n    Font.loadAsync({\n      'josefin-sans-regular': require('./assets/fonts/JosefinSans-Regular.ttf'),\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.josefinSans}>\n          Hello, Josefin Sans!\n        </Text>\n      </View>\n    );\n  }\n}\n```", "```jsx\nconst styles = StyleSheet.create({\n  // Other styles from step 3\n  josefinSans: {\n    fontSize: 40,\n fontFamily: 'josefin-sans-regular'\n  }\n});\n```", "```jsx\nconsole.error: \"fontFamily 'josefin-sans-regular' is not a system font and has not been loaded through Expo.Font.loadAsync\"\n```", "```jsx\nexport default class App extends React.Component {\n state = {\n    fontLoaded: false\n  };\n```", "```jsx\n  async componentDidMount() {\n    await Font.loadAsync({\n      'josefin-sans-regular': require('./assets/fonts/JosefinSans-\n      Regular.ttf'),\n    });\n  }\n```", "```jsx\n  async componentDidMount() {\n    await Font.loadAsync({\n      'josefin-sans-regular': require('./assets/fonts/JosefinSans-\n      Regular.ttf'),\n    });\n\n this.setState({ fontLoaded: true });\n  }\n```", "```jsx\n      <View style={styles.container}>\n {\n          this.state.fontLoaded ? (\n            <Text style={styles.josefinSans}>\n              Hello, Josefin Sans!\n            </Text>\n          ) : null\n        }\n      </View>\n```", "```jsx\n    await Font.loadAsync({\n      'josefin-sans-regular': require('./assets/fonts/JosefinSans-\n      Regular.ttf'),\n 'josefin-sans-bold': require('./assets/fonts/JosefinSans-\n      Bold.ttf'),\n      'josefin-sans-italic': require('./assets/fonts/JosefinSans-\n      Italic.ttf'),\n      'raleway-regular': require('./assets/fonts/Raleway-\n      Regular.ttf'),\n      'raleway-bold': require('./assets/fonts/Raleway-Bold.ttf'),\n      'raleway-italic': require('./assets/fonts/Raleway-\n      Italic.ttf'),\n    });\n```", "```jsx\n  render() {\n    return (\n      <View style={styles.container}>\n {\n          this.state.fontLoaded ? (\n            <View style={styles.container}>\n              <Text style={[styles.josefinSans, \n              styles.textFormatting]}>\n                Hello, Josefin Sans!\n              </Text>\n              <Text style={[styles.josefinSansBold,\n              styles.textFormatting]}>\n                Hello, Josefin Sans!\n              </Text>\n              <Text style={[styles.josefinSansItalic, \n              styles.textFormatting]}>\n                Hello, Josefin Sans!\n              </Text>\n              <Text style={[styles.raleway, styles.textFormatting]}>\n                Hello, Raleway!\n              </Text>\n              <Text style={[styles.ralewayBold, \n              styles.textFormatting]}>\n                Hello, Raleway!\n              </Text>\n              <Text style={[styles.ralewayItalic, \n              styles.textFormatting]}>\n                Hello, Raleway!\n              </Text>\n            </View>\n          ) : null\n        }\n      </View>\n    );\n  }\n```", "```jsx\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  josefinSans: {\n    fontFamily: 'josefin-sans-regular',\n  },\n  josefinSansBold: {\n    fontFamily: 'josefin-sans-bold',\n  },\n  josefinSansItalic: {\n    fontFamily: 'josefin-sans-italic',\n  },\n  raleway: {\n    fontFamily: 'raleway-regular',\n  },\n  ralewayBold: {\n    fontFamily: 'josefin-sans-bold'\n  },\n  ralewayItalic: {\n    fontFamily: 'josefin-sans-italic',\n  },\n  textFormatting: {\n    fontSize: 40,\n    paddingBottom: 20\n  }\n});\n```", "```jsx\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { FontAwesome, Ionicons } from '@expo/vector-icons';\n```", "```jsx\nexport default class App extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n      </View>\n    );\n  }\n}\n```", "```jsx\nexport default class App extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n <View style={styles.iconRow}>\n\n        </View>\n        <View style={styles.iconRow}>\n\n        </View>\n      </View>\n    );\n  }\n}\n```", "```jsx\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  iconRow: {\n    flexDirection: 'row',\n  },\n});\n```", "```jsx\n<View style={styles.iconRow}>\n <FontAwesome style={styles.iconPadding} name=\"glass\" size={48} color=\"green\" />\n  <FontAwesome style={styles.iconPadding} name=\"beer\" size={48} color=\"red\" />\n  <FontAwesome style={styles.iconPadding} name=\"music\" size={48} color=\"blue\" />\n  <FontAwesome style={styles.iconPadding} name=\"taxi\" size={48} color=\"#1CB5AD\" />\n</View>\n```", "```jsx\n<View style={styles.iconRow}>\n <Ionicons style={styles.iconPadding} name=\"md-pizza\" size={48} color=\"orange\" />\n  <Ionicons style={styles.iconPadding} name=\"md-tennisball\" size={48} color=\"maroon\" />\n  <Ionicons style={styles.iconPadding} name=\"ios-thunderstorm\" size={48} color=\"purple\" />\n  <Ionicons style={styles.iconPadding} name=\"ios-happy\" size={48} color=\"#DF7977\" />\n</View>\n```", "```jsx\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  iconRow: {\n    flexDirection: 'row',\n  },\n iconPadding: {\n    padding: 8,\n  }\n});\n```"]