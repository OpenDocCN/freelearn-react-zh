["```jsx\nnpm install react-native-button --save\n```", "```jsx\nyarn add react-native-button\n```", "```jsx\n#import <Foundation/Foundation.h>\n#import <React/RCTBridgeModule.h>\n\n@interface HelloManager : NSObject <RCTBridgeModule>\n\n@end\n```", "```jsx\n#import \"HelloManager.h\"\n\n@implementation HelloManager\nRCT_EXPORT_MODULE();\n\n@end\n```", "```jsx\n#import \"HelloManager.h\"\n\n@implementation HelloManager\nRCT_EXPORT_MODULE();\n\nRCT_EXPORT_METHOD(\n greetUser: (NSString *)name isAdmin:(BOOL *)isAdmin callback: (RCTResponseSenderBlock) callback\n) {\n NSString *greeting =\n [NSString stringWithFormat:\n @\"Welcome %@, you %@ an administrator.\", name, isAdmin ? @\"are\" : @\"are not\"];\n\n callback(@[greeting]);\n}\n\n@end\n```", "```jsx\nimport React, { Component } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  NativeModules,\n  TextInput,\n  Switch\n} from 'react-native';\nimport Button from 'react-native-button';\n```", "```jsx\nconst HelloManager = NativeModules.HelloManager; \n```", "```jsx\nexport default class App extends Component {\n  state = {\n    greetingMessage: null,\n    userName: null,\n    isAdmin: false\n  }\n  // Defined on following steps\n}\n```", "```jsx\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.label}>\n          Enter User Name\n        </Text>\n        <TextInput\n          ref=\"userName\"\n          autoCorrect={false}\n          style={styles.inputField}\n          placeholder=\"User Name\"\n          onChangeText={(text) => this.setState({ userName: text }) }\n        />\n        <Text style={styles.label}>\n          Admin\n        </Text>\n        <Switch style={styles.radio}\n          value={this.state.isAdmin}\n          onValueChange={(value) =>\n            this.setState({ isAdmin: value })\n          }\n        />\n\n        // Continued below\n      </View>\n    );\n  }\n```", "```jsx\n  render() {\n    return (\n      // Defined above.\n <Button\n disabled={!this.state.userName}\n style={[\n styles.buttonStyle,\n !this.state.userName ? styles.disabled : null\n ]}\n onPress={this.greetUser}\n >\n Greet (callback)\n </Button>\n <Text style={styles.label}>\n Response:\n </Text>\n <Text style={styles.message}>\n {this.state.greetingMessage}\n </Text>\n      </View>\n    );\n  }\n```", "```jsx\n  greetUser = () => {\n    HelloManager.greetUser(\n      this.state.userName,\n      this.state.isAdmin,\n      this.displayResults\n    );\n  }\n```", "```jsx\n  displayResults = (results) => {\n    this.refs.userName.blur();\n    this.setState({ greetingMessage: results });\n  }\n```", "```jsx\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  inputField:{\n    padding: 20,\n    fontSize: 30\n  },\n  label: {\n    fontSize: 18,\n    marginTop: 18,\n    textAlign: 'center',\n  },\n  radio: {\n    marginBottom: 20\n  },\n  buttonStyle: {\n    padding: 20,\n    backgroundColor: '#1DA1F2',\n    color: '#fff',\n    fontSize: 18\n  },\n  message: {\n    fontSize: 22,\n    marginLeft: 50,\n    marginRight: 50,\n  },\n  disabled: {\n    backgroundColor: '#3C3C3C'\n  }\n});\n```", "```jsx\n#import <UIKit/UIKit.h>\n#import \"React/RCTComponent.h\"\n\n@interface Button : UIView\n\n@property (nonatomic, copy) RCTBubblingEventBlock onTap;\n\n@end\n```", "```jsx\n#import \"Button.h\"\n#import \"React/UIView+React.h\"\n\n@implementation Button {\n  UIButton *_button;\n  NSString *_buttonText;\n}\n\n// Defined in following steps\n```", "```jsx\n-(void) setButtonText:(NSString *)buttonText {\n  NSLog(@\"Set text %@\", buttonText);\n  _buttonText = buttonText;\n  if(_button) {\n    [_button setTitle:\n     buttonText forState:UIControlStateNormal];\n    [_button sizeToFit];\n  }\n}\n```", "```jsx\n- (IBAction)onButtonTap:(id)sender {\n  self.onTap(@{});\n}\n```", "```jsx\n-(void) layoutSubviews {\n  [super layoutSubviews];\n  if( _button == nil) {\n    _button =\n    [UIButton buttonWithType:UIButtonTypeRoundedRect];\n    [_button addTarget:self action:@selector(onButtonTap:)\n      forControlEvents:UIControlEventTouchUpInside];\n    [_button setTitle:\n     _buttonText forState:UIControlStateNormal];\n    [_button sizeToFit];\n    [self insertSubview:_button atIndex:0];\n  }\n}\n```", "```jsx\n#import \"React/RCTViewManager.h\"\n\n@interface ButtonViewManager : RCTViewManager\n\n@end\n```", "```jsx\n#import \"ButtonViewManager.h\"\n#import \"Button.h\"\n#import \"React/UIView+React.h\"\n\n@implementation ButtonViewManager\nRCT_EXPORT_MODULE()\n\n- (UIView *)view {\n  Button *button = [[Button alloc] init];\n  return button;\n}\n\nRCT_EXPORT_VIEW_PROPERTY(buttonText, NSString);\nRCT_EXPORT_VIEW_PROPERTY(onTap, RCTBubblingEventBlock);\n\n@end\n```", "```jsx\nimport React, { Component } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View\n} from 'react-native';\nimport Button from './components/Button';\n```", "```jsx\nexport default class Button extends Component {\n  render() {\n    return <ButtonView {...this.properties} />;\n  }\n}\n\nconst ButtonView = requireNativeComponent('ButtonView', Button);\n```", "```jsx\nimport React, { Component } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View\n} from 'react-native';\nimport Button from './components/Button';\n```", "```jsx\nexport default class App extends Component {\n state = {\n  count: 0\n }\n // Defined on following steps\n}\n```", "```jsx\n  render() {\n    return (\n      <View style={styles.container}>\n        <Button buttonText=\"Click Me!\"\n        onTap={this.handleButtonTap}\n        style={styles.button}\n      />\n        <Text>Button Pressed Count: {this.state.count}</Text>\n      </View>\n    );\n  }\n```", "```jsx\n  handleButtonTap = () => {\n    this.setState({\n      count: this.state.count + 1\n    });\n  }\n```", "```jsx\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  button: {\n    height: 40,\n    width: 80\n  }\n});\n```", "```jsx\n- (UIView *)view {\n  Button *button = [[Button alloc] init];\n  return button;\n}\n```", "```jsx\nnpm install react-native-button --save\n```", "```jsx\nyarn add react-native-button\n```", "```jsx\npackage com.nativemoduleapp;\n\nimport com.facebook.react.bridge.Callback;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.bridge.ReactContextBaseJavaModule;\nimport com.facebook.react.bridge.ReactMethod;\n```", "```jsx\npublic class HelloManager extends ReactContextBaseJavaModule {\n  public HelloManager(ReactApplicationContext reactContext) {\n    super(reactContext);\n  }\n\n  @Override\n  public String getName() {\n    return \"HelloManager\";\n  }\n}\n```", "```jsx\npublic class HelloManager extends ReactContextBaseJavaModule {\n  // Defined in previous steps  \n\n @ReactMethod\n public void greetUser(String name, Boolean isAdmin, Callback callback) {\n System.out.println(\"User Name: \" + name + \", Administrator: \" + (isAdmin ? \"Yes\" : \"No\"));\n String greeting = \"Welcome \" + name + \", you \" + (isAdmin ? \"are\" : \"are not\") + \" an administrator\";\n\n callback.invoke(greeting);\n }\n}\n```", "```jsx\npackage com.nativemoduleapp;\n\nimport com.facebook.react.ReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.uimanager.ViewManager;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n```", "```jsx\npublic class HelloPackage implements ReactPackage {\n\n  @Override\n  public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n    return Collections.emptyList();\n  }\n\n  @Override\n  public List<NativeModule> createNativeModules(ReactApplicationContext reactContext) {\n    List<NativeModule> modules = new ArrayList<>();\n    modules.add(new HelloManager(reactContext));\n\n    return modules;\n  }\n}\n```", "```jsx\npackage com.nativemoduleapp;\n\nimport android.app.Application;\n\nimport com.facebook.react.ReactApplication;\nimport com.facebook.react.ReactNativeHost;\nimport com.facebook.react.ReactPackage;\nimport com.facebook.react.shell.MainReactPackage;\nimport com.facebook.soloader.SoLoader;\n\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class MainApplication extends Application implements ReactApplication {\n\n private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {\n    @Override\n    public boolean getUseDeveloperSupport() {\n      return BuildConfig.DEBUG;\n    }\n\n @Override\n protected List<ReactPackage> getPackages() {\n return Arrays.asList(\n new MainReactPackage(),\n new HelloPackage()\n );\n }\n\n    @Override\n    protected String getJSMainModuleName() {\n      return \"index\";\n    }\n  };\n\n  @Override\n  public ReactNativeHost getReactNativeHost() {\n    return mReactNativeHost;\n  }\n\n  @Override\n  public void onCreate() {\n    super.onCreate();\n    SoLoader.init(this, /* native exopackage */ false);\n  }\n}\n```", "```jsx\nimport React, { Component } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  NativeModules,\n  TextInput,\n  Switch,\n  DeviceEventEmitter\n} from 'react-native';\nimport Button from 'react-native-button';\n```", "```jsx\nconst { HelloManager } = NativeModules;\n```", "```jsx\nexport default class App extends Component {\n  state = {\n    userName: null,\n    greetingMessage: null,\n    isAdmin: false\n  }\n}\n```", "```jsx\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.label}>\n          Enter User Name\n        </Text>\n        <TextInput\n          ref=\"userName\"\n          autoCorrect={false}\n          style={styles.inputField}\n          placeholder=\"User Name\"\n          onChangeText={(text) => this.setState({ userName: text })\n          }\n        />\n        <Text style={styles.label}>\n          Admin\n        </Text>\n        <Switch\n          style={styles.radio}\n          onValueChange={\n            value => this.setState({ isAdmin: value })\n          }\n          value={this.state.isAdmin}\n        />\n       <Button\n          disabled={!this.state.userName}\n          style={[\n            styles.buttonStyle,\n            !this.state.userName ? styles.disabled : null\n          ]}\n          onPress={this.greetUser}\n        >\n          Greet\n        </Button>\n        <Text style={styles.label}>\n          Response:\n        </Text>\n        <Text style={styles.message}>\n          {this.state.greetingMessage}\n        </Text>\n      </View>\n    );\n  }\n```", "```jsx\n  updateGreetingMessage = (result) => {\n    this.setState({\n      greetingMessage: result\n    });\n  }\n\n  greetUser = () => {\n    this.refs.userName.blur();\n    HelloManager.greetUser(\n      this.state.userName,\n      this.state.isAdmin,\n      this.updateGreetingMessage\n    );\n  }\n```", "```jsx\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  inputField:{\n    padding: 20,\n    fontSize: 30,\n    width: 200\n  },\n  label: {\n    fontSize: 18,\n    marginTop: 18,\n    textAlign: 'center',\n  },\n  radio: {\n    marginBottom: 20\n  },\n  buttonStyle: {\n    padding: 20,\n    backgroundColor: '#1DA1F2',\n    color: '#fff',\n    fontSize: 18\n  },\n  message: {\n    fontSize: 22,\n    marginLeft: 50,\n    marginRight: 50,\n  },\n  disabled: {\n    backgroundColor: '#3C3C3C'\n  }\n});\n```", "```jsx\npackage com.nativeuicomponent;\n\nimport android.view.View;\nimport android.widget.Button;\n\nimport com.facebook.react.bridge.Arguments;\nimport com.facebook.react.bridge.ReactContext;\nimport com.facebook.react.bridge.WritableMap;\nimport com.facebook.react.uimanager.SimpleViewManager;\nimport com.facebook.react.uimanager.ThemedReactContext;\nimport com.facebook.react.uimanager.annotations.ReactProp;\nimport com.facebook.react.uimanager.events.RCTEventEmitter;\n\npublic class ButtonViewManager extends SimpleViewManager<Button> implements View.OnClickListener {\n  // Defined on following steps\n}\n```", "```jsx\npublic class ButtonViewManager extends SimpleViewManager<Button> implements View.OnClickListener{\n @Override\n public String getName() {\n return \"ButtonView\";\n }\n\n  // Defined on following steps.\n}\n```", "```jsx\n  @Override\n  protected Button createViewInstance(ThemedReactContext reactContext) {\n    Button button = new Button(reactContext);\n    button.setOnClickListener(this);\n    return button;\n  }\n```", "```jsx\n  @ReactProp(name = \"buttonText\")\n  public void setButtonText(Button button, String buttonText) {\n    button.setText(buttonText);\n  }\n```", "```jsx\n  @Override\n  public void onClick(View v) {\n    WritableMap map = Arguments.createMap();\n    ReactContext reactContext = (ReactContext) v.getContext();\n    reactContext.getJSModule(RCTEventEmitter.class).receiveEvent(v.getId(), \"topChange\", map);\n  }\n```", "```jsx\npackage com.nativeuicomponent;\n\nimport com.facebook.react.ReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.uimanager.ViewManager;\n\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\n\npublic class ButtonPackage implements ReactPackage {\n  @Override\n  public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n    return Arrays.<ViewManager>asList(new ButtonViewManager());\n  }\n\n  @Override\n  public List<NativeModule> createNativeModules(ReactApplicationContext reactContext) {\n    return Collections.emptyList();\n  }\n}\n```", "```jsx\n    @Override\n    protected List<ReactPackage> getPackages() {\n      return Arrays.<ReactPackage>asList(\n        new MainReactPackage(),\n        new ButtonPackage()\n      );\n    }\n```", "```jsx\nimport React, { Component } from 'react';\nimport { requireNativeComponent, View } from 'react-native';\n\nexport default class Button extends Component {\n  onChange = (event) => {\n    if (this.properties.onTap) {\n      this.properties.onTap(event.nativeEvent.message);\n    }\n  }\n\n  render() {\n    return(\n      <ButtonView\n        {...this.properties}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n```", "```jsx\nconst ButtonView = requireNativeComponent(\n  'ButtonView',\n  Button, {\n    nativeOnly: {\n      onChange: true\n    }\n  }\n);\n```", "```jsx\nimport React, { Component } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View\n} from 'react-native';\n\nimport Button from './components/Button';\n```", "```jsx\nexport default class App extends Component {\n  state = {\n    count: 0\n  }\n\n  onButtonTap = () => {\n    this.setState({\n      count : this.state.count + 1\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Button buttonText=\"Press Me!\"\n          onTap={this.onButtonTap}\n          style={styles.button}\n        />\n        <Text>\n          Button Pressed Count: {this.state.count}\n        </Text>\n      </View>\n    );\n  }\n}\n```", "```jsx\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  button: {\n    height: 40,\n    width: 150\n  }\n});\n```"]