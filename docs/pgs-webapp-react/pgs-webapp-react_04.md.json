["```jsx\n<body>\n  <div id=\"root\"></div> \n  <script src=\"https://www.gstatic.com/firebasejs/4.1.2/firebase.js\"></script> \n  <script>  \n    // Initialize Firebase  \n    var config = {    \n      apiKey: /* API KEY HERE */,    \n      authDomain: \"chatastrophe-77bac.firebaseapp.com\",    \n      databaseURL: \"https://chatastrophe-77bac.firebaseio.com\",    \n      projectId: \"chatastrophe-77bac\",    \n      storageBucket: \"chatastrophe-77bac.appspot.com\",    \n      messagingSenderId: \"85734589405\"  \n    };  \n    firebase.initializeApp(config); \n  </script> \n</body>\n```", "```jsx\nwindow.firebase = firebase;\n```", "```jsx\nwindow.apiKey = \"YOUR-API-KEY\u201d\nmessagingSenderId = \"YOUR-SENDER-ID\"\n```", "```jsx\n<script src=\"/secrets.js\"></script>\n```", "```jsx\n <script>  \n   // Initialize Firebase\n   var config = {\n     apiKey: window.apiKey,\n     // ...rest of config\n     messagingSenderId: window.messagingSenderId\n   };\n```", "```jsx\n/public/secrets.js\n```", "```jsx\nnpm install -g firebase-tools\n```", "```jsx\nfirebase login\n```", "```jsx\nfirebase init\n```", "```jsx\n\"scripts\": {\n  \"build\": \"node scripts/copy_assets.js && node_modules/.bin/webpack --config webpack.config.prod.js\",\n  \"start\": \"node_modules/.bin/webpack-dev-server\",\n  \"deploy\": \"npm run build && firebase deploy\"\n},\n```", "```jsx\nhandleSubmit = (event) => {\n  event.preventDefault();\n  console.log(this.state);\n};\n```", "```jsx\nhandleSubmit = (event) => {\n event.preventDefault();\n // Step 1\\. Check if user filled out fields\n // Step 2\\. If yes, try to log them in.\n // Step 3\\. If login fails, sign them up.\n}\n```", "```jsx\nhandleSubmit = (event) => {\n  event.preventDefault();\n  if (this.state.email && this.state.password) {\n    // Try to log them in.\n  } else {\n    // Display an error reminding them to fill out fields.\n  }\n}\n```", "```jsx\nstate = { email: '', password: '', error: \u2018\u2019 }\n```", "```jsx\nhandleSubmit = (event) => {\n  event.preventDefault();\n  this.setState({ error: '' });\n  if (this.state.email && this.state.password) {\n    // Try to log them in.\n  } else {\n    this.setState({ error: 'Please fill in both fields.' });\n  }\n}\n```", "```jsx\n  <input  \n    type=\"password\"  \n    onChange={this.handlePasswordChange} \n    value={this.state.password} \n    placeholder=\"Your password\" /> \n  <p className=\"error\">{this.state.error}</p> \n  <button className=\"red light\" type=\"submit\">Login</button>\n```", "```jsx\nfirebase.auth().signInWithEmailAndPassword(email, password, function() {\n  // Do something when the sign in is complete.\n});\n```", "```jsx\nfirebase.auth().signInWithEmailAndPassword(email, password, function() {\n  onLoginComplete(email, password, function() { \n    onLoginCompleteComplete('contrived example', function() {\n      anotherFunction('an argument', function () {\n        console.log('Help I'm in callback hell!');\n      });\n    });\n  });\n});\n```", "```jsx\nfirebase.auth().signInWithEmailAndPassword(email, password)\n  .then(() => { // Do something on success })\n  .catch(err => { // Do something on failure. })\n```", "```jsx\nhandleSubmit = (event) => {\n  event.preventDefault();\n  this.setState({ error: '' });\n  if (this.state.email && this.state.password) {\n    firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then(res => { console.log(res); })\n      .catch(err => { console.log(err); })\n  } else {\n    this.setState({ error: 'Please fill in both fields.' });\n  }\n}\n```", "```jsx\n{code: \"auth/user-not-found\", message: \"There is no user record corresponding to this identifier. The user may have been deleted.\"}\n```", "```jsx\nhandleSubmit = (event) => {\n  event.preventDefault();\n  this.setState({ error: '' });\n  if (this.state.email && this.state.password) {\n    firebase.auth().signInWithEmailAndPassword(this.state.email, \n     this.state.password)\n      .then(res => { console.log(res); })\n      .catch(err => { \n        if (error.code === 'auth/user-not-found') { \n          // Sign up here.\n        } else { \n          this.setState({ error: 'Error logging in.' }) ;\n        }\n      })\n } else {\n   this.setState({ error: 'Please fill in both fields.' });\n }\n}\n```", "```jsx\nlogin() {\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(this.state.email, this.state.password)\n    .then(res => {\n      console.log(res);\n    })\n    .catch(err => {\n      if (err.code === 'auth/user-not-found') {\n        this.signup();\n      } else {\n        this.setState({ error: 'Error logging in.' });\n      }\n    });\n}\n```", "```jsx\nhandleSubmit = event => {\n  event.preventDefault();\n  this.setState({ error: '' });\n  if (this.state.email && this.state.password) {\n    this.login();\n  } else {\n    this.setState({ error: 'Please fill in both fields.' });\n  }\n};\n```", "```jsx\nsignup() {\n  firebase\n    .auth()\n    .createUserWithEmailAndPassword(this.state.email, this.state.password)\n    .then(res => {\n      console.log(res);\n    })\n    .catch(error => {\n      console.log(error);\n      this.setState({ error: 'Error signing up.' });\n    });\n}\n```", "```jsx\nwindow.addEventListener('resize', function() { // Do something about resize });\n```", "```jsx\nfirebase.auth().onAuthStateChanged((user) => {\n  // If there is a user, save it to state.\n  // If there is no user, do nothing.\n});\n```", "```jsx\nclass App extends Component {\n state = { user: null };\n\n componentDidMount() {\n\n }\n\n  render() {\n    return (\n      <div id=\"container\">\n        <LoginContainer />\n      </div>\n    );\n  }\n}\n```", "```jsx\ncomponentDidMount() { \n  firebase.auth().onAuthStateChanged((user) => {      \n    if (user) {        \n      this.setState({ user });      \n    }    \n  }); \n}\n```"]