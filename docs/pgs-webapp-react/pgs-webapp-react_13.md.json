["```jsx\nyarn add --dev lighthouse\n```", "```jsx\n \"scripts\": {\n   \"build\": \"node_modules/.bin/webpack --config webpack.config.prod.js\",\n   \"start\": \"node_modules/.bin/webpack-dev-server\",\n   \"deploy\": \"npm run build && firebase deploy\"\n },\n```", "```jsx\n \"scripts\": {\n   \"build\": \"node_modules/.bin/webpack --config webpack.config.prod.js\",\n   \"start\": \"node_modules/.bin/webpack-dev-server\",\n   \"deploy\": \"npm run build && node scripts/assess.js && firebase deploy\"\n },\n```", "```jsx\nyarn add --dev serve\n```", "```jsx\nconst serve = require('serve');\n```", "```jsx\nconst server = serve('./build', {\n port: 5000\n});\n```", "```jsx\nconst lighthouse = require('lighthouse');\nconst chromeLauncher = require('lighthouse/chrome-launcher');\n```", "```jsx\nfunction launchChromeAndRunLighthouse(url, flags= {}, config = null) {\n\n}\n```", "```jsx\nfunction launchChromeAndRunLighthouse(url, flags = {}, config = null) {\n return chromeLauncher.launch().then(chrome => {\n   flags.port = chrome.port;\n   return lighthouse(url, flags, config).then(results =>\n     chrome.kill().then(() => results));\n });\n}\n```", "```jsx\nlaunchChromeAndRunLighthouse('http://localhost:5000', {}).then(results => {\n  server.stop();\n});\n```", "```jsx\nconst CUTOFF = 90\nlaunchChromeAndRunLighthouse('http://localhost:5000', {}).then(results => {\n```", "```jsx\nconst serve = require('serve');\nconst lighthouse = require('lighthouse');\nconst chromeLauncher = require('lighthouse/chrome-launcher');\n\nfunction launchChromeAndRunLighthouse(url, flags = {}, config = null) {\n return chromeLauncher.launch().then(chrome => {\n   flags.port = chrome.port;\n   return lighthouse(url, flags, config).then(results =>\n     chrome.kill().then(() => results));\n });\n}\n\nconst server = serve('./build', {\n port: 5000\n})\n\nconst CUTOFF = 90\n\nlaunchChromeAndRunLighthouse('http://localhost:5000', {}).then(results => {\n score = results.score\n const catResults = results.reportCategories.map(cat => {\n   if (cat.score < CUTOFF) {\n     cat.audits.forEach(audit => {\n       if (audit.score < CUTOFF) {\n         const result = audit.result\n         if (result.score) {\n           console.warn(result.description + ': ' + result.score)\n         } else {\n           console.warn(result.description)\n         }\n         if (results.displayValue) {\n           console.log('Value: ' + result.displayValue)\n         }\n         console.log(result.helpText)\n         console.log(' ')\n       }\n     })\n   }\n   return cat\n })\n catResults.forEach(cat => {\n   console.log(cat.name, cat.score)\n })\n server.stop()\n});\n```"]