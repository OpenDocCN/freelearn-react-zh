["```jsx\n{\n  \"main.js\": \"static/js/main.8d0d0660.js\",\n  \"static/js/0.8d0d0660.chunk.js\": \"static/js/0.8d0d0660.chunk.js\",\n  \"static/js/1.8d0d0660.chunk.js\": \"static/js/1.8d0d0660.chunk.js\",\n  \"static/js/2.8d0d0660.chunk.js\": \"static/js/2.8d0d0660.chunk.js\"\n}\n```", "```jsx\nself.addEventListener('install', function() {\n\n});\n```", "```jsx\nconst CACHE_NAME = \u2018v1\u2019;\n```", "```jsx\nself.addEventListener('install', event => {\n event.waitUntil(\n   // Promise goes here\n );\n});\n```", "```jsx\nconst CACHE_NAME = 'v1';\nself.addEventListener('install', event => {\n event.waitUntil(\n   caches.open(CACHE_NAME)\n     .then(cache => {\n     });\n );\n});\n```", "```jsx\nself.addEventListener('install', event => {\n event.waitUntil(\n   caches.open(CACHE_NAME)\n     .then(cache => {\n       fetch('asset-manifest.json')\n         .then(response => {\n           if (response.ok) {\n\n           }\n         })\n     });\n );\n});\n```", "```jsx\nself.addEventListener('install', event => {\n event.waitUntil(\n   caches.open(CACHE_NAME)\n     .then(cache => {\n       fetch('asset-manifest.json')\n         .then(response => {\n           if (response.ok) {\n             response.json().then(manifest => {\n\n             });\n           }\n         })\n     });\n );\n});\n```", "```jsx\nresponse.json().then(manifest => {\n  const urls = Object.keys(manifest).map(key => manifest[key]);\n})\n```", "```jsx\nresponse.json().then(manifest => {\n  const urls = Object.keys(manifest).map(key => manifest[key]);\n  urls.push(\u2018/\u2019);\n  urls.push('/assets/icon.png');\n})\n```", "```jsx\n\nself.addEventListener('install', event => {\n  event.waitUntil(\n    caches.open(CACHE_NAME).then(cache => {\n      fetch('asset-manifest.json').then(response => {\n        if (response.ok) {\n          response.json().then(manifest => {\n            const urls = Object.keys(manifest).map(key => manifest[key]);\n            urls.push('/');\n            urls.push('/assets/icon.png');\n            cache.addAll(urls);\n          });\n        }\n      });\n    })\n  );\n});\n```", "```jsx\nself.addEventListener('fetch', event => {\n\n});\n```", "```jsx\nself.addEventListener('fetch', event => {\n event.respondWith(\n   caches.match(event.request).then(response => {\n\n   });\n );\n});\n```", "```jsx\nself.addEventListener('fetch', event => {\n  event.respondWith(\n    caches.match(event.request).then(response => {\n      return response || fetch(event.request);\n    })\n  );\n});\n```", "```jsx\nconst VERSION = \u2018v1\u2019\nconst CACHE_NAMES = {\n css: `css-${VERSION}`,\n js: `js-${VERSION}`\n};\n```", "```jsx\nself.addEventListener('activate', event => {\n event.waitUntil(\n   cache.keys().then(keyList => {\n\n   })\n );\n});\n```", "```jsx\nself.addEventListener('activate', event => {\n event.waitUntil(\n   caches.keys().then(keyList => {\n     Promise.all(keyList.map(key => {\n\n     }));\n   })\n );\n});\n```", "```jsx\nself.addEventListener('activate', event => {\n event.waitUntil(\n   caches.keys().then(keyList => {\n     Promise.all(\n       keyList.map(key => {\n         if (key !== CACHE_NAME) {\n           return caches.delete(key);\n         }\n       })\n     );\n   })\n );\n});\n```"]