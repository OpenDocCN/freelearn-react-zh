["```jsx\nyarn add webpack@3.5.4\n```", "```jsx\nconsole.log(\u2018hello from index.js!\u2019);\n```", "```jsx\nnode_modules/.bin/webpack src/index.js public/bundle.js\n```", "```jsx\nconsole.log(\u2018Hello from index2.js!\u2019);\n```", "```jsx\nrequire('./index2.js');\nconsole.log('Hello from index.js!');\n```", "```jsx\nnode_modules/.bin/webpack src/index.js public/bundle.js\n```", "```jsx\n<script src=\"bundle.js\"></script>\n```", "```jsx\nReactDOM.render(React.createElement('h1', false, 'Hello from React!'), document.getElementById('root'))\n```", "```jsx\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n```", "```jsx\nnode_modules/.bin/webpack src/index.js public/bundle.js\n```", "```jsx\nmodule.exports = {\n  entry:  __dirname + \"/src/index.js\",\n  output: {\n   path: __dirname + \"/public\",\n   filename: \"bundle.js\",\n   publicPath: \"/\",\n  }\n};\n```", "```jsx\nnode_modules/.bin/webpack\n```", "```jsx\n{\n  \"name\": \"chatastrophe\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"license\": \"MIT\",\n \"scripts\": {\n \"build\": \"node_modules/.bin/webpack\",\n },\n  \"dependencies\": {\n    \"react\": \"15.6.1\",\n    \"react-dom\": \"15.6.1\",\n    \"webpack\": \"3.5.4\",\n  }\n}\n```", "```jsx\ndevServer: {\n  contentBase: \"./public\",\n  historyApiFallback: true,\n  inline: true,\n}\n```", "```jsx\nmodule.exports = {\n  entry: __dirname + \"/src/index.js\",\n  output: {\n   path: __dirname + \"/public\",\n   filename: \"bundle.js\",\n   publicPath: \"/\"\n  },\n devServer: {\n contentBase: \"./public\",\n historyApiFallback: true,\n inline: true,\n }\n};\n```", "```jsx\n\"scripts\": {\n  \"build\": \"node_modules/.bin/webpack\",\n  \"start\": \"node_modules/.bin/webpack-dev-server\"\n},\n```", "```jsx\nvar arr = [1, 2, 3, 4];\nfor (var i = 0; i < arr.length; i++) {\n  console.log(arr[i]);\n}\n```", "```jsx\n[1, 2, 3, 4].forEach(num => console.log(num));\n```", "```jsx\nyarn add babel-core babel-loader babel-preset-es2015 babel-preset-react babel-plugin-transform-class-properties\n```", "```jsx\ntest: /\\.js$/\n```", "```jsx\nexclude: /node_modules/\n```", "```jsx\nloader: \u2018babel-loader\u2019\n```", "```jsx\nquery: {\n  presets: ['es2015','react'],\n  plugins: ['transform-class-properties']\n}\n```", "```jsx\nmodule.exports = {\n  entry: __dirname + \"/src/index.js\",\n  output: {\n   path: __dirname + \"/public\",\n   filename: \"bundle.js\",\n   publicPath: \"/\"\n  },\n  module: {\n    loaders: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'babel-loader',\n        query: {\n          presets: ['es2015','react'],\n          plugins: ['transform-class-properties']\n        }\n      },\n    ]\n  },\n  devServer: {\n    contentBase: \"./public\",\n    historyApiFallback: true,\n    inline: true,\n  }\n};\n```", "```jsx\nimport React from \u2018react\u2019;\nimport ReactDOM from 'react-dom';\n```", "```jsx\nReactDOM.render(<h1>Hello from ES6!</h1>, document.getElementById('root'));\n```", "```jsx\nimport React from 'react';\n\nconst App = () => {\n  return <h1>Hello from React!!</h1>\n};\n\nexport default App;\n```", "```jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n```", "```jsx\nyarn add react-hot-loader@3.0.0\n```", "```jsx\nvar webpack = require('webpack');\n```", "```jsx\nmodule: {\n  loaders: [\n    {\n      test: /\\.js$/,\n      exclude: /node_modules/,\n      loader: 'babel-loader',\n      query: {\n        presets: ['es2015','react'],\n        plugins: ['transform-class-properties']\n      }\n    },\n  ]\n},\nplugins: [\n new webpack.HotModuleReplacementPlugin()\n],\ndevServer: {\n  contentBase: \"./public\",\n  historyApiFallback: true,\n  inline: true,\n}\n```", "```jsx\nentry: [\n  'react-hot-loader/patch',\n  __dirname + \"/src/index.js\"\n ],\n```", "```jsx\nentry: [\n   'react-hot-loader/patch',\n   'webpack-dev-server/client?http://localhost:8080',\n   'webpack/hot/only-dev-server',\n   __dirname + \"/src/index.js\"\n ],\n```", "```jsx\nloaders: [\n  {\n    test: /\\.js$/,\n    exclude: /node_modules/,\n    loader: 'babel-loader',\n    query: {\n      presets: ['es2015','react'],\n      plugins: ['react-hot-loader/babel', 'transform-class-properties']\n    }\n  },\n]\n```", "```jsx\ndevServer: {\n  contentBase: \"./public\",\n  historyApiFallback: true,\n  inline: true,\n  hot: true\n},\n```", "```jsx\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    const NextApp = require('./App').default;\n    ReactDOM.render(\n     <App/>,\n     document.getElementById('root')\n    );\n  });\n}\n```", "```jsx\nentry: __dirname + \"/src/index.js\",\n```", "```jsx\npath: __dirname + \"/public\",\n```", "```jsx\npath: __dirname + \"/build\",\n```", "```jsx\noutput: {\n  path: __dirname + \"/build\",\n  filename: \"bundle.js\",\n  publicPath: './'\n},\n```", "```jsx\nplugins: [\n  new webpack.DefinePlugin({\n    'process.env': {\n      NODE_ENV: JSON.stringify('production')\n    }\n  }),\n],\n```", "```jsx\nplugins: [\n  new webpack.DefinePlugin({\n    'process.env': {\n      NODE_ENV: JSON.stringify('production')\n    }\n  }),\n  new HtmlWebpackPlugin({\n    inject: true,\n    template: __dirname + \"/public/index.html\",\n    minify: {\n      removeComments: true,\n      collapseWhitespace: true,\n      removeRedundantAttributes: true,\n      useShortDoctype: true,\n      removeEmptyAttributes: true,\n      removeStyleLinkTypeAttributes: true,\n      keepClosingSlash: true,\n      minifyJS: true,\n      minifyCSS: true,\n      minifyURLs: true,\n    },\n  }),\n],\n```", "```jsx\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\n```", "```jsx\n\"build\": \"node_modules/.bin/webpack --config webpack.config.prod.js\",\n```", "```jsx\n// webpack.config.js\nplugins: [\n  new webpack.HotModuleReplacementPlugin(),\n  new HtmlWebpackPlugin({\n    inject: true,\n    template: __dirname + '/public/index.html',\n  })\n],\n```", "```jsx\n yarn add css-loader style-loader\n```", "```jsx\nimport React from 'react';\nimport './app.css';\n\nconst App = () => {\n  return <h1>Hello from React!!</h1>\n};\n\nexport default App;\n```", "```jsx\nplugins: [\n  new HtmlWebpackPlugin({\n    inject: true,\n    template: __dirname + '/public/index.html',\n    minify: {\n      removeComments: true,\n      collapseWhitespace: true,\n      removeRedundantAttributes: true,\n      useShortDoctype: true,\n      removeEmptyAttributes: true,\n      removeStyleLinkTypeAttributes: true,\n      keepClosingSlash: true,\n      minifyJS: true,\n      minifyCSS: true,\n      minifyURLs: true\n    }\n  }),\n  new webpack.optimize.UglifyJsPlugin({\n    compress: {\n      warnings: false,\n      reduce_vars: false\n    },\n    output: {\n      comments: false\n    },\n    sourceMap: true\n  })\n]\n```", "```jsx\nmodule: {\n  loaders: [\n    {\n      test: /\\.js$/,\n      exclude: /node_modules/,\n      loader: 'babel-loader',\n      query: {\n        presets: ['es2015', 'react'],\n        plugins: ['react-hot-loader/babel', 'transform-class-properties']\n      }\n    },\n    {\n      test: /\\.css$/,\n      use: [{ loader: 'style-loader' }, { loader: 'css-loader' }]\n    },\n {\n exclude: [/\\.html$/, /\\.(js|jsx)$/, /\\.css$/, /\\.json$/],\n loader: 'file-loader',\n options: {\n name: 'static/media/[name].[ext]'\n }\n }</strong>\n  ]\n},\n```", "```jsx\nvar fs = require('fs-extra');\n```", "```jsx\nfs.copySync('public', 'build', {\n dereference: true,\n filter: file => file !== 'public/index.html'\n});\n```", "```jsx\n \"scripts\": {\n   \"build\": \"node scripts/copy_assets.js && node_modules/.bin/webpack --config \n    webpack.config.prod.js\",\n   \"start\": \"node_modules/.bin/webpack-dev-server\"\n },\n```", "```jsx\nvar ManifestPlugin = require('webpack-manifest-plugin');\n// Then, under plugins: new ManifestPlugin({\n  fileName: 'asset-manifest.json',\n}),\n```"]