["```jsx\nlet i = 0\nfunction counterReducer (state, action) {\n    if (action.type === 'INCREMENT') {\n        i++\n    }\n    return i\n}\n\nconsole.log(counterReducer(0, { type: 'INCREMENT' })) // prints 1\nconsole.log(counterReducer(0, { type: 'INCREMENT' })) // prints 2\n```", "```jsx\nfunction counterReducer (state, action) {\n    if (action.type === 'INCREMENT') {\n        return state + 1\n    }\n    return state\n}\n\nconsole.log(counterReducer(0, { type: 'INCREMENT' })) // prints 1\nconsole.log(counterReducer(0, { type: 'INCREMENT' })) // prints 1\n```", "```jsx\n> npm install --save redux react-redux redux-thunk\n```", "```jsx\n{\n    \"todos\": [\n        { \"id\": 1, \"title\": \"Write React Hooks book\", \"completed\": true },\n        { \"id\": 2, \"title\": \"Promote book\", \"completed\": false }\n    ],\n    \"filter\": \"all\"\n}\n```", "```jsx\nimport React, { useState, useEffect, useMemo } from 'react'\nimport { createStore } from 'redux' \n```", "```jsx\nconst initialState = { todos: [], filter: 'all' }\n```", "```jsx\nconst store = createStore(appReducer, initialState)\n```", "```jsx\nconst { dispatch } = store\n```", "```jsx\n    const [ state, dispatch ] = useReducer(appReducer, { todos: [], filter: 'all' })\n```", "```jsx\n    const [ state, setState ] = useState(initialState)\n```", "```jsx\n    useEffect(() => {\n        const unsubscribe = store.subscribe(() => setState(store.getState()))\n        return unsubscribe\n    }, [])\n```", "```jsx\nexport const FETCH_TODOS = 'FETCH_TODOS'\nexport const ADD_TODO = 'ADD_TODO'\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\nexport const REMOVE_TODO = 'REMOVE_TODO'\nexport const FILTER_TODOS = 'FILTER_TODOS'\n```", "```jsx\nimport {\n    ADD_TODO, TOGGLE_TODO, REMOVE_TODO, FILTER_TODOS\n} from './actionTypes'\n```", "```jsx\nexport function addTodo (title) {\n    return { type: ADD_TODO, title }\n}\n\nexport function toggleTodo (id) {\n    return { type: TOGGLE_TODO, id }\n}\n\nexport function removeTodo (id) {\n    return { type: REMOVE_TODO, id }\n}\n\nexport function filterTodos (filter) {\n    return { type: FILTER_TODOS, filter }\n}\n```", "```jsx\nimport {\n    FETCH_TODOS, ADD_TODO, TOGGLE_TODO, REMOVE_TODO, FILTER_TODOS\n} from './actionTypes'\nimport { fetchAPITodos } from './api'\n```", "```jsx\nexport function fetchTodos () {\n    return async (dispatch) => {\n```", "```jsx\n        const todos = await fetchAPITodos()\n        dispatch({ type: FETCH_TODOS, todos })\n    }\n}\n```", "```jsx\nimport { createStore, applyMiddleware } from 'redux'\n```", "```jsx\nimport thunk from 'redux-thunk'\n\nimport appReducer from './reducers'\n```", "```jsx\nconst store = createStore(appReducer, applyMiddleware(thunk))\n```", "```jsx\nexport default store\n```", "```jsx\nimport { combineReducers } from 'redux'\n```", "```jsx\nfunction filter (state = 'all', action) {\n```", "```jsx\nfunction todos (state = [], action) {\n```", "```jsx\nconst appReducer = combineReducers({ todos, filter })\nexport default appReducer\n```", "```jsx\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n```", "```jsx\nimport { addTodo } from '../actions'\nimport AddTodo from '../components/AddTodo'\n```", "```jsx\nfunction mapStateToProps (state) {\n    return {}\n}\n```", "```jsx\nfunction mapDispatchToProps (dispatch) {\n    return bindActionCreators({ addTodo }, dispatch)\n}\n```", "```jsx\nfunction mapDispatchToProps (dispatch) {\n    return {\n        addTodo: (...args) => dispatch(addTodo(...args))\n    }\n}\n```", "```jsx\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodo)\n```", "```jsx\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n```", "```jsx\nimport { toggleTodo, removeTodo } from '../actions'\nimport TodoItem from '../components/TodoItem'\n```", "```jsx\nfunction mapStateToProps (state) {\n    return {}\n}\n```", "```jsx\nfunction mapDispatchToProps (dispatch) {\n    return bindActionCreators({ toggleTodo, removeTodo }, dispatch)\n}\n```", "```jsx\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem)\n```", "```jsx\nimport ConnectedTodoItem from '../containers/ConnectedTodoItem'\n```", "```jsx\n    return filteredTodos.map(item =>\n        <ConnectedTodoItem {...item} key={item.id} />\n    )\n```", "```jsx\nimport { connect } from 'react-redux'\n```", "```jsx\nimport TodoList from '../components/TodoList'\n```", "```jsx\nfunction mapStateToProps (state) {\n    const { filter, todos } = state\n    return { filter, todos }\n}\n```", "```jsx\nfunction mapDispatchToProps (dispatch) {\n    return {}\n}\n```", "```jsx\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)\n```", "```jsx\nimport  React,  {  useMemo  }  from  'react'\n```", "```jsx\n    const filteredTodos = useMemo(() => {\n        const { filter, todos } = state\n        switch (filter) {\n            case 'active':\n                return todos.filter(t => t.completed === false)\n\n            case 'completed':\n                return todos.filter(t => t.completed === true)\n\n            default:\n            case 'all':\n                return todos\n        }\n    }, [ state ])\n```", "```jsx\n    const filteredTodos = useMemo(() => {\n        switch (filter) {\n            case 'active':\n                return todos.filter(t => t.completed === false)\n\n            case 'completed':\n                return todos.filter(t => t.completed === true)\n\n            default:\n            case 'all':\n                return todos\n        }\n    }, [ filter, todos ])\n```", "```jsx\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n```", "```jsx\nimport { filterTodos } from '../actions'\nimport TodoFilter from '../components/TodoFilter'\n```", "```jsx\nfunction mapStateToProps (state) {\n    const { filter } = state\n    return { filter }\n}\n```", "```jsx\nfunction mapDispatchToProps (dispatch) {\n    return bindActionCreators({ filterTodos }, dispatch)\n}\n```", "```jsx\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoFilter)\n```", "```jsx\nimport ConnectedAddTodo from '../containers/ConnectedAddTodo'\nimport ConnectedTodoList from '../containers/ConnectedTodoList'\nimport ConnectedTodoFilter from '../containers/ConnectedTodoFilter'\n```", "```jsx\n            return (\n                <div style={{ width: 400 }}>\n                    <Header />\n                    <ConnectedAddTodo />\n                    <hr />\n                    <ConnectedTodoList />\n                    <hr />\n                    <ConnectedTodoFilter />\n                </div>\n            )\n```", "```jsx\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n```", "```jsx\nimport { fetchTodos } from '../actions'\nimport App from '../components/App'\n```", "```jsx\nfunction mapStateToProps (state) {\n    return {}\n}\n```", "```jsx\nfunction mapDispatchToProps (dispatch) {\n    return bindActionCreators({ fetchTodos }, dispatch)\n}\n```", "```jsx\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n```", "```jsx\nimport { Provider } from 'react-redux'\n```", "```jsx\nimport ConnectedApp from './containers/ConnectedApp'\nimport store from './configureStore'\n```", "```jsx\nReactDOM.render(\n <Provider store={store}>\n <ConnectedApp />\n </Provider>,\n    document.getElementById('root')\n)\n```", "```jsx\nconst dispatch = useDispatch()\n```", "```jsx\nimport { useDispatch } from 'react-redux'\n```", "```jsx\nimport { addTodo } from '../actions'\n```", "```jsx\nexport default function AddTodo () {\n```", "```jsx\n    const dispatch = useDispatch()\n```", "```jsx\n    function handleAdd () {\n        if (input) {\n            dispatch(addTodo(input))\n            setInput('')\n        }\n    }\n```", "```jsx\nimport AddTodo from './AddTodo'\n```", "```jsx\n    return (\n        <div style={{ width: 400 }}>\n            <Header />\n            <AddTodo />\n```", "```jsx\nimport { useDispatch } from 'react-redux'\n```", "```jsx\nimport { fetchTodos } from '../actions'\n```", "```jsx\nexport default function App () {\n```", "```jsx\n    const dispatch = useDispatch()\n```", "```jsx\n    useEffect(() => {\n        dispatch(fetchTodos())\n    }, [ dispatch ])\n```", "```jsx\nimport App from './components/App'\n```", "```jsx\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n```", "```jsx\nimport { useDispatch } from 'react-redux'\n```", "```jsx\nimport { toggleTodo, removeTodo } from '../actions'\n```", "```jsx\nexport default function TodoItem ({ title, completed, id }) {\n```", "```jsx\n    const dispatch = useDispatch()\n```", "```jsx\n    function handleToggle () {\n        dispatch(toggleTodo(id))\n    }\n\n    function handleRemove () {\n        dispatch(removeTodo(id))\n    }\n```", "```jsx\nimport TodoItem from './TodoItem'\n```", "```jsx\n    return filteredTodos.map(item =>\n        <TodoItem {...item} key={item.id} />\n    )\n```", "```jsx\nconst result = useSelector(selectorFn, equalityFn)\n```", "```jsx\nimport { useSelector } from 'react-redux'\n```", "```jsx\nexport default function TodoList () {\n```", "```jsx\n    const filter = useSelector(state => state.filter)\n    const todos = useSelector(state => state.todos)\n```", "```jsx\nimport TodoList from './TodoList'\n```", "```jsx\n    return (\n        <div style={{ width: 400 }}>\n            <Header />\n            <AddTodo />\n            <hr />\n            <TodoList />\n```", "```jsx\nimport { useSelector, useDispatch } from 'react-redux'\n```", "```jsx\nimport { filterTodos } from '../actions'\n```", "```jsx\nexport default function TodoFilter () {\n```", "```jsx\n    const dispatch = useDispatch()\n    const filter = useSelector(state => state.filter)\n```", "```jsx\n    function handleFilter () {\n        dispatch(filterTodos(name))\n    }\n```", "```jsx\nimport TodoFilter from './TodoFilter'\n```", "```jsx\n    return (\n        <div style={{ width: 400 }}>\n            <Header />\n            <AddTodo />\n            <hr />\n            <TodoList />\n            <hr />\n            <TodoFilter />\n        </div>\n    )\n```", "```jsx\n> npm install --save reselect\n```", "```jsx\nimport { createSelector } from 'reselect'\n```", "```jsx\nconst todosSelector = state => state.todos\nconst filterSelector = state => state.filter\n```", "```jsx\nconst selectFilteredTodos = createSelector(\n```", "```jsx\n    todosSelector,\n    filterSelector,\n```", "```jsx\n    (todos, filter) => {\n        switch (filter) {\n            case 'active':\n                return todos.filter(t => t.completed === false)\n\n            case 'completed':\n                return todos.filter(t => t.completed === true)\n\n            default:\n            case 'all':\n                return todos\n        }\n    }\n)\n```", "```jsx\nexport default function TodoList () {\n    const filteredTodos = useSelector(selectFilteredTodos)\n```", "```jsx\nconst store = useStore()\n```", "```jsx\n{\n    \"todos\": [],\n    \"filter\": \"all\",\n    \"newTodo\": \"\"\n}\n```"]