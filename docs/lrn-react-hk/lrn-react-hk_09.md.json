["```jsx\nimport React, { useContext } from 'react'\n\nexport default function HeaderBar ({ setTheme }) {\n   return (\n        <div>\n        </div>\n    )\n}\n```", "```jsx\n  <Header  text=\"React Hooks Blog\" />  <ChangeTheme  theme={theme} setTheme={setTheme} /> <br /> <React.Suspense  fallback={\"Loading...\"}> <UserBar /> </React.Suspense> <br /> {user  && <CreatePost />} \n```", "```jsx\nimport  CreatePost  from  '**../**post/CreatePost' import  UserBar  from  '**../**user/UserBar' import  Header  from  '**../**Header' import  ChangeTheme  from  '**../**ChangeTheme'\n```", "```jsx\nimport { ThemeContext, StateContext } from '../contexts'\n```", "```jsx\nexport default function HeaderBar ({ setTheme }) { const theme = useContext(ThemeContext)\n\n    const { state } = useContext(StateContext)\n    const { user } = state \n    return (\n```", "```jsx\nimport HeaderBar from './pages/HeaderBar'\n```", "```jsx\n        <div style={{ padding: 8 }}>\n            <HeaderBar setTheme={setTheme} />\n            <hr />\n```", "```jsx\nimport React, { useEffect, useContext } from 'react'\nimport { StateContext } from '../contexts'\n\nexport default function HomePage () {\n    const { state, dispatch } = useContext(StateContext)\n    const { error } = state\n\n    return (\n        <div>\n        </div>\n    )\n}\n```", "```jsx\nimport  {  useResource  }  from  'react-request-hook'\nimport PostList from '**../**post/PostList'\n```", "```jsx\n const  [  posts,  getPosts  ]  =  useResource(()  => ({ url:  '/posts', method:  'get' })) useEffect(getPosts, []) useEffect(()  =>  { if (posts  &&  posts.error) { dispatch({ type:  'POSTS_ERROR'  }) } if (posts  &&  posts.data) { dispatch({ type:  'FETCH_POSTS', posts:  posts.data.reverse() }) } }, [posts])\n```", "```jsx\n            {error && <b>{error}</b>}\n            <PostList />\n```", "```jsx\nimport HomePage from './pages/HomePage'\n```", "```jsx\n            <hr />\n            <HomePage />\n```", "```jsx\nimport React, { useEffect } from 'react'\nimport { useResource } from 'react-request-hook'\n\nimport Post from '../post/Post'\n```", "```jsx\nexport default function PostPage ({ id }) {\n```", "```jsx\n    const [ post, getPost ] = useResource(() => ({\n        url: `/posts/${id}`,\n        method: 'get'\n    }))\n    useEffect(getPost, [id])\n```", "```jsx\n    return (\n        <div>\n            {(post && post.data)\n                ? <Post {...post.data} />\n                : 'Loading...'\n            }\n            <hr />\n        </div>\n    )\n}\n```", "```jsx\nimport PostPage from './pages/PostPage'\n```", "```jsx\n            <PostPage id={'react-hooks'} />\n```", "```jsx\n>npm install --save navi react-navi\n```", "```jsx\nimport { Router, View } from 'react-navi'\nimport { mount, route } from 'navi'\n```", "```jsx\nimport HomePage from './pages/HomePage'\n```", "```jsx\nconst routes = mount({\n```", "```jsx\n    '/': route({ view: <HomePage /> }),\n```", "```jsx\n    '/view/:id': route(req => {\n        return { view: <PostPage id={req.params.id} /> }\n    }),\n})\n```", "```jsx\n <Router routes={routes}>\n            <div style={{ padding: 8 }}>\n                <HeaderBar setTheme={setTheme} />\n                <hr />\n <View />\n            </div>\n </Router>\n```", "```jsx\nimport { Link } from 'react-navi'\n```", "```jsx\nfunction Post ({ id, title, content, author, short = false }) {\n```", "```jsx\n    let processedContent = content\n    if (short) {\n        if (content.length > 30) {\n            processedContent = content.substring(0, 30) + '...'\n        }\n    }\n```", "```jsx\n            <div>{processedContent}</div>\n {short &&\n <div>\n <br />\n <Link href={`/view/${id}`}>View full post</Link>\n </div>\n }\n```", "```jsx\n                <Post {...p} short={true} />\n```", "```jsx\nimport { Link } from 'react-navi'\n```", "```jsx\n    return (\n        <div>\n            <div><Link href=\"/\">Go back</Link></div>\n```", "```jsx\nimport React, { useState, useContext, useEffect } from 'react'\n```", "```jsx\n    const [ post, createPost ] = useResource(({ title, content, author }) => ({\n```", "```jsx\n    useEffect(() => {\n        if (post && post.data) {\n            dispatch({ type: 'CREATE_POST', ...post.data })\n        }\n    }, [post])\n```", "```jsx\n    function handleCreate () {\n        createPost({ title, content, author: user })\n dispatch({ type: 'CREATE_POST', title, content, author: user })\n    }\n```", "```jsx\nfunction postsReducer (state, action) {\n    switch (action.type) {\n        case 'FETCH_POSTS':\n            return action.posts\n\n        case 'CREATE_POST':\n            const newPost = { title: action.title, content: action.content, author: action.author, id: action.id }\n            return [ newPost, ...state ]\n```", "```jsx\nconst navigation = useNavigation()\n```", "```jsx\nconst route = useCurrentRoute()\n```", "```jsx\nconst loadingRoute = useLoadingRoute()\n```", "```jsx\nimport { useNavigation } from 'react-navi'\n```", "```jsx\n    const navigation = useNavigation()\n```", "```jsx\n    useEffect(() => {\n        if (post && post.data) {\n            dispatch({ type: 'CREATE_POST', ...post.data })\n            navigation.navigate(`/view/${post.data.id}`)\n        }\n    }, [post])\n```", "```jsx\nimport React from 'react'\nimport { useCurrentRoute } from 'react-navi'\n```", "```jsx\nexport default function FooterBar () {\n```", "```jsx\n    const { url } = useCurrentRoute()\n```", "```jsx\n    return (\n        <div>\n            <a href={url.href}>{url.href}</a>\n        </div>\n    )\n}\n```"]