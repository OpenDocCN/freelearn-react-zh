["```jsx\n  import React, { Component } from 'react';\n  import './Calculator.css';\n\n  class Calculator extends Component {\n    constructor() {\n      super();\n\n      this.state = {\n        number1: 0,\n        number2: 0,\n        result: 0\n      };\n    }\n\n    render() {\n      return (\n        <div className=\"Calculator\">\n          <input \n            name=\"number1\" \n            type=\"text\" \n            value={this.state.number1} \n          />\n          {' + '}\n          <input \n            name=\"number2\" \n            type=\"text\" \n            value={this.state.number2} \n          />\n\n          <p><button>=</button></p>\n          <p className=\"result\">{this.state.result}</p>\n        </div>\n      );\n    }\n  }\n\n  export default Calculator;\n```", "```jsx\n    handleOnChange(e) {\n      const { target: { value, name } } = e;\n\n      this.setState({\n        [name]: Number(value)\n      });\n    }\n\n    handleResult(e) {\n      this.setState({\n        result: this.state.number1 + this.state.number2\n      });\n    }\n```", "```jsx\n    render() {\n      return (\n        <div className=\"Calculator\">\n          <input \n onChange={this.handleOnChange} \n            name=\"number1\" \n            type=\"text\" \n            value={this.state.number1} \n          />\n          {' + '}\n          <input \n onChange={this.handleOnChange} \n            name=\"number2\" \n            type=\"text\" \n            value={this.state.number2}\n          />\n          <p>\n            <button onClick={this.handleResult}>=</button>\n          </p>\n          <p className=\"result\">{this.state.result}</p>\n        </div>\n      );\n    }\n```", "```jsx\n  .Calculator {\n    margin: 0 auto;\n    padding: 50px;\n  }\n\n  .Calculator input {\n    border: 1px solid #eee;\n    font-size: 16px;\n    text-align: center;\n    height: 50px;\n    width: 100px;\n  }\n\n  .Calculator button {\n    background: #0072ff;\n    border: none;\n    color: #fff;\n    font-size: 16px;\n    height: 54px;\n    width: 150px;\n  }\n\n  .Calculator .result {\n    border: 10px solid red;\n    background: #eee;\n    margin: 0 auto;\n    font-size: 24px;\n    line-height: 100px;\n    height: 100px;\n    width: 100px;\n  }\n```", "```jsx\n    constructor() {\n      super();\n\n      this.state = {\n        number1: 0,\n        number2: 0,\n        result: 0\n      };\n\n      // Binding methods\n      this.handleOnChange = this.handleOnChange.bind(this);\n      this.handleResult = this.handleResult.bind(this);\n    }\n```", "```jsx\n    constructor() {\n      super();\n\n      this.state = {\n        number1: 0,\n        number2: 0,\n        result: 0\n      };\n    }\n\n    // Changing this method to be an arrow function\n    handleOnChange = e => {\n      const { target: { value, name } } = e;\n\n      this.setState({\n        [name]: Number(value)\n      });\n    }\n\n    // Changing this method to be an arrow function\n    handleResult = e => {\n      this.setState({\n        result: this.state.number1 + this.state.number2\n      });\n    }\n```", "```jsx\n import React, { Component } from 'react';\n  import './Person.css';\n\n  class Person extends Component {\n    constructor() {\n      super();\n\n      this.state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: ''\n      };\n    }\n\n    render() {\n      return (\n        <div className=\"Person\">\n\n        </div>\n      );\n    }\n  }\n\n  export default Person;\n```", "```jsx\n  render() {\n    return (\n      <div className=\"Person\">\n        <form>\n          <div>\n            <p><strong>First Name:</strong></p>\n            <p><input name=\"firstName\" type=\"text\" /></p>\n          </div>\n\n          <div>\n            <p><strong>Last Name:</strong></p>\n            <p><input name=\"lastName\" type=\"text\" /></p>\n          </div>\n\n          <div>\n            <p><strong>Email:</strong></p>\n            <p><input name=\"email\" type=\"email\" /></p>\n          </div>\n\n          <div>\n            <p><strong>Phone:</strong></p>\n            <p><input name=\"phone\" type=\"tel\" /></p>\n          </div>\n\n          <p>\n            <button>Save Information</button>\n          </p>\n        </form>\n      </div>\n    );\n  }\n```", "```jsx\n  .Person {\n    margin: 0 auto;\n  }\n\n  .Person form input {\n    font-size: 16px;\n    height: 50px;\n    width: 300px;\n  }\n\n  .Person form button {\n    background: #0072ff;\n    border: none;\n    color: #fff;\n    font-size: 16px;\n    height: 50px;\n    width: 300px;\n  }\n```", "```jsx\n  render() {\n    return (\n      <div className=\"Person\">\n        <form>\n          <div>\n            <p><strong>First Name:</strong></p>\n            <p>\n              <input \n                name=\"firstName\" \n                type=\"text\" \n value={this.state.firstName} \n              />\n            </p>\n          </div>\n\n          <div>\n            <p><strong>Last Name:</strong></p>\n            <p>\n              <input \n                name=\"lastName\" \n                type=\"text\" \n value={this.state.lastName} \n              />\n            </p>\n          </div>\n\n          <div>\n            <p><strong>Email:</strong></p>\n            <p>\n              <input \n                name=\"email\" \n                type=\"email\" \n value={this.state.email} \n              />\n            </p>\n          </div>\n\n          <div>\n            <p><strong>Phone:</strong></p>\n            <p>\n              <input \n                name=\"phone\" \n                type=\"tel\" \n value={this.state.phone} \n              />\n            </p>\n          </div>\n\n          <p>\n            <button>Save Information</button>\n          </p>\n        </form>\n      </div>\n    );\n  }\n```", "```jsx\n  handleOnChange = e => {\n    const { target: { value } } = e;\n\n    this.setState({\n      firstName: value\n    });\n  }\n```", "```jsx\n    <input \n      name=\"firstName\" \n      type=\"text\" \n      value={this.state.firstName} \n onChange={this.handleOnChange} \n    />\n```", "```jsx\n    handleOnChange = e => {\n      const { target: { value, name } } = e;\n\n      this.setState({\n        [name]: value\n      });\n    }\n```", "```jsx\n    render() {\n      return (\n        <div className=\"Person\">\n          <form>\n            <div>\n              <p><strong>First Name:</strong></p>\n              <p>\n                <input \n                  name=\"firstName\" \n                  type=\"text\" \n                  value={this.state.firstName} \n onChange={this.handleOnChange} \n                />\n              </p>\n            </div>\n\n            <div>\n              <p><strong>Last Name:</strong></p>\n              <p>\n                <input \n                  name=\"lastName\" \n                  type=\"text\" \n                  value={this.state.lastName} \n onChange={this.handleOnChange} \n                />\n              </p>\n            </div>\n\n            <div>\n              <p><strong>Email:</strong></p>\n              <p>\n                <input \n                  name=\"email\" \n                  type=\"email\" \n                  value={this.state.email} \n onChange={this.handleOnChange} \n                />\n              </p>\n            </div>\n\n            <div>\n              <p><strong>Phone:</strong></p>\n              <p>\n                <input \n                  name=\"phone\" \n                  type=\"tel\" \n                  value={this.state.phone} \n onChange={this.handleOnChange} \n                />\n              </p>\n            </div>\n\n            <p>\n              <button>Save Information</button>\n            </p>\n          </form>\n        </div>\n      );\n    }\n```", "```jsx\n  handleOnSubmit = e => {\n    // The e.preventDefault() method cancels the event if it is                            \n    // cancelable, meaning that the default action that belongs to  \n    // the event won't occur.\n    e.preventDefault();\n\n    const { firstName, lastName, email, phone } = this.state;\n    const data = {\n      firstName,\n      lastName,\n      email,\n      phone\n    };\n\n    // Once we have the data collected we can call a Redux Action  \n    // or process the data as we need it.\n    console.log('Data:', data);\n  }\n```", "```jsx\n  <form onSubmit={this.handleOnSubmit}>\n```", "```jsx\n      this.state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        errors: {\n          firstName: false,\n          lastName: false\n        }\n      };\n```", "```jsx\n    handleOnSubmit = e => {\n     // The e.preventDefault() method cancels the event if it is   \n     // cancelable, meaning that the default action that belongs to  \n     // event won't occur.\n    e.preventDefault();\n\n      const { firstName, lastName, email, phone } = this.state;\n\n      // If firstName or lastName is missing then we update the   \n      // local state with true\n      this.setState({\n errors: {\n firstName: firstName === '',\n lastName: lastName === ''\n }\n });\n\n      const data = {\n        firstName,\n        lastName,\n        email,\n        phone\n      };\n\n      // Once we have the data collected we can call a Redux Action  \n      // or process the data as we need it.\n      console.log('Data:', data);\n    }\n```", "```jsx\n    render() {\n      return (\n        <div className=\"Person\">\n          <form onSubmit={this.handleOnSubmit}>\n            <div>\n              <p><strong>First Name:</strong></p>\n              <p>\n                <input\n                  name=\"firstName\"\n                  type=\"text\"\n                  value={this.state.firstName}\n                  onChange={this.handleOnChange}\n                  className={\n                    this.state.errors.firstName ? 'error' : ''\n                  }                \n                />\n                {this.state.errors.firstName \n                  && (<div className=\"errorMessage\">Required \n                field</div>)}\n              </p>\n            </div>\n\n            <div>\n              <p><strong>Last Name:</strong></p>\n              <p>\n                <input\n                  name=\"lastName\"\n                  type=\"text\"\n                  value={this.state.lastName}\n                  onChange={this.handleOnChange}\n                  className={\n                    this.state.errors.lastName ? 'error' : ''\n                  }\n                />\n                {this.state.errors.lastName \n                  && <div className=\"errorMessage\">Required \n                field</div>}\n              </p>\n            </div>\n\n            <div>\n              <p><strong>Email:</strong></p>\n              <p>\n                <input \n                  name=\"email\" \n                  type=\"email\" \n                  value={this.state.email} \n                  onChange={this.handleOnChange} \n                />\n              </p>\n            </div>\n\n            <div>\n              <p><strong>Phone:</strong></p>\n              <p>\n                <input name=\"phone\" type=\"tel\" value=\n                {this.state.phone} \n                 onChange={this.handleOnChange} />\n              </p>\n            </div>\n\n            <p>\n              <button>Save Information</button>\n            </p>\n          </form>\n        </div>\n      );\n    }\n```", "```jsx\n    .Person .error {\n      border: 1px solid red;\n    }\n\n    .Person .errorMessage {\n      color: red;\n      font-size: 10px;\n    }\n```", "```jsx\n  import React, { Component } from 'react';\n  import './Person.css';\n\n  class Person extends Component {\n    constructor() {\n      super();\n\n      this.state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        errors: {\n          firstName: false,\n          lastName: false\n        }\n      };\n    }\n\n    handleOnChange = e => {\n      const { target: { value, name } } = e;\n\n      this.setState({\n        [name]: value\n      });\n    }\n\n    handleOnSubmit = e => {\n // The e.preventDefault() method cancels the event if it is \n      // cancelable, meaning that the default action that belongs \n      // to the event won't occur.\n      e.preventDefault();\n\n      const { firstName, lastName, email, phone } = this.state;\n\n      // If firstName or lastName is missing we add an error class\n      this.setState({\n        errors: {\n          firstName: firstName === '',\n          lastName: lastName === ''\n        }\n      });\n\n      const data = {\n        firstName,\n        lastName,\n        email,\n        phone\n      };\n\n      // Once we have the data collected we can call a Redux Action     \n      // or process the data as we need it.\n      console.log('Data:', data);\n    }\n\n    render() {\n      return (\n        <div className=\"Person\">\n          <form onSubmit={this.handleOnSubmit}>\n            <div>\n              <p><strong>First Name:</strong></p>\n              <p>\n                <input\n                  name=\"firstName\"\n                  type=\"text\"\n                  value={this.state.firstName}\n                  onChange={this.handleOnChange}\n                  className={\n                    this.state.errors.firstName ? 'error' : ''\n                  }\n                />\n                {this.state.errors.firstName \n && <div className=\"errorMessage\">Required \n                field</div>}\n              </p>\n            </div>\n\n            <div>\n              <p><strong>Last Name:</strong></p>\n              <p>\n                <input\n                  name=\"lastName\"\n                  type=\"text\"\n                  value={this.state.lastName}\n                  onChange={this.handleOnChange}\n                  className={\n                    this.state.errors.lastName ? 'error' : ''\n                  }\n                />\n                {this.state.errors.lastName \n && <div className=\"errorMessage\">Required \n                field</div>}\n              </p>\n            </div>\n\n            <div>\n              <p><strong>Email:</strong></p>\n              <p>\n                <input \n                  name=\"email\" \n                  type=\"email\" \n value={this.state.email} \n onChange={this.handleOnChange} \n                />\n              </p>\n            </div>\n\n            <div>\n              <p><strong>Phone:</strong></p>\n              <p>\n                <input \n                  name=\"phone\" \n                  type=\"tel\" \n value={this.state.phone} \n onChange={this.handleOnChange} \n                />\n              </p>\n            </div>\n\n            <p>\n              <button>Save Information</button>\n            </p>\n          </form>\n        </div>\n      );\n    }\n  }\n\n  export default Person;\n```", "```jsx\nnpm install react-popup\n```", "```jsx\n  import React from 'react';\n  import Popup from 'react-popup';\n  import Person from './Person/Person';\n  import Header from '../shared/components/layout/Header';\n  import Content from '../shared/components/layout/Content';\n  import Footer from '../shared/components/layout/Footer';\n  import './App.css';\n  import './Popup.css';\n\n  const App = () => (\n    <div className=\"App\">\n      <Header title=\"Personal Information\" />\n\n      <Content>\n        <Person />\n      </Content>\n\n      <Footer />\n\n      <Popup />\n    </div>\n  );\n\n export default App;\n```", "```jsx\nimport React, { Component } from 'react';\nimport Popup from 'react-popup';\nimport './Person.css';\n```", "```jsx\n  handleOnSubmit = e => {\n    e.preventDefault();\n\n    const {\n      firstName,\n      lastName,\n      email,\n      phone\n    } = this.state;\n\n    // If firstName or lastName is missing we add an error class\n    this.setState({\n      errors: {\n        firstName: firstName === '',\n        lastName: lastName === ''\n      }\n    });\n\n    // We will display the popup just if the data is received...\n    if (firstName !== '' && lastName !== '' && email !== '') {\n      Popup.create({\n        title: 'Person Information',\n        content: (\n          <div>\n            <p><strong>Name:</strong> {firstName} {lastName}</p>\n            <p><strong>Email:</strong> {email}</p>\n            {phone && <p><strong>Phone:</strong> {phone}</p>}\n          </div>\n        ),\n        buttons: {\n          right: [{\n            text: 'Close',\n             action: popup => popup.close() // Closes the popup                                                                                                       \n          }],\n        },\n      });\n    }\n  }\n```", "```jsx\nnpm install eslint eslint-config-airbnb eslint-plugin-react eslint-plugin-jsx-a11y\n```", "```jsx\n  {\n    \"parser\": \"babel-eslint\",\n    \"extends\": \"airbnb\",\n    \"rules\": {\n      \"arrow-parens\": \"off\",\n      \"comma-dangle\": \"off\",\n      \"function-paren-newline\": \"off\",\n      \"max-len\": [1, 120],\n      \"no-param-reassign\": \"off\",\n      \"react/require-default-props\": \"off\"\n    }\n  }\n```", "```jsx\n  {\n    \"name\": \"airbnb\",\n    \"version\": \"0.1.0\",\n    \"private\": true,\n    \"engines\": { \n      \"node\": \">= 10.8\"  \n    },\n    \"dependencies\": {\n      \"eslint\": \"^4.18.2\",\n      \"eslint-config-airbnb\": \"^16.1.0\",\n      \"eslint-plugin-babel\": \"^4.1.2\",\n      \"eslint-plugin-react\": \"^7.7.0\",\n      \"prop-types\": \"^15.6.1\",\n      \"react\": \"^16.2.0\",\n      \"react-dom\": \"^16.2.0\",\n      \"react-scripts\": \"1.1.0\"\n    },\n    \"scripts\": {\n      \"start\": \"react-scripts start\",\n      \"build\": \"react-scripts build\",\n      \"test\": \"react-scripts test --env=jsdom\",\n      \"eject\": \"react-scripts eject\",\n      \"lint\": \"eslint --ext .jsx,.js src\"\n    }\n  }\n```", "```jsx\n npm run lint\n```", "```jsx\n  import React from 'react';\n  import Person from './Person/Person';\n  import Header from '../shared/components/layout/Header';\n  import Content from '../shared/components/layout/Content';\n  import Footer from '../shared/components/layout/Footer';\n  import './App.css';\n\n  const App = () => (\n    <div className=\"App\">\n      <Header title=\"Personal Information\" />\n\n      <Content>\n        <Person />\n      </Content>\n\n      <Footer />\n    </div>\n  );\n\n  export default App;\n```", "```jsx\n/* eslint react/jsx-filename-extension: \"off\" */\nimport React from 'react';\n...\n```", "```jsx\n  const { firstName, lastName, email, phone } = this.state;\n```", "```jsx\n    const {\n      firstName,\n      lastName,\n      email,\n      phone\n    } = this.state;\n```", "```jsx\nconsole.log('Data:', data); // eslint-disable-line no-console \n```", "```jsx\n // eslint-disable-next-line no-console\n    console.log('Data:', data);\n```", "```jsx\n/* eslint no-console: \"off\" */\nimport React, { Component } from 'react';\n...\n```", "```jsx\n/* global document */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n...\n```", "```jsx\n{\n  \"parser\": \"babel-eslint\",\n  \"extends\": \"airbnb\",\n \"globals\": {\n \"document\": \"true\"\n },\n  \"rules\": {\n    \"arrow-parens\": \"off\",\n    \"comma-dangle\": \"off\",\n    \"function-paren-newline\": \"off\",\n    \"max-len\": [1, 120],\n    \"no-param-reassign\": \"off\",\n    \"react/require-default-props\": \"off\"\n  }\n}\n```", "```jsx\n root = true\n\n [*]\n indent_style = space\n indent_size = 2\n end_of_line = lf\n charset = utf-8\n trim_trailing_whitespace = true\n insert_final_newline = true\n\n [*.html]\n indent_size = 4\n\n [*.css]\n indent_size = 4\n\n [*.md]\n trim_trailing_whitespace = false\n```", "```jsx\n npm install husky\n```", "```jsx\n{\n  \"name\": \"airbnb\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"eslint\": \"^4.18.2\",\n    \"eslint-config-airbnb\": \"^16.1.0\",\n    \"eslint-plugin-babel\": \"^4.1.2\",\n    \"eslint-plugin-jsx-a11y\": \"^6.0.3\",\n    \"eslint-plugin-react\": \"^7.7.0\",\n    \"husky\": \"^0.14.3\",\n    \"prop-types\": \"^15.6.1\",\n    \"react\": \"^16.2.0\",\n    \"react-dom\": \"^16.2.0\",\n    \"react-scripts\": \"1.1.0\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test --env=jsdom\",\n    \"eject\": \"react-scripts eject\",\n    \"lint\": \"eslint --ext .jsx,.js src\",\n    \"precommit\": \"npm run lint\",\n    \"postmerge\": \"npm install\", \n    \"postrewrite\": \"npm install\",\n  }\n}\n```", "```jsx\nnpm install react-helmet\n```", "```jsx\n import Helmet from 'react-helmet';\n```", "```jsx\n      <Helmet title=\"Person Information\" />\n```", "```jsx\n    <Helmet\n      title=\"Person Information\"\n      meta={[\n        { name: 'title', content: 'Person Information' },\n        { name: 'description', content: 'This recipe talks about React \n Helmet' }\n      ]}\n    />\n```", "```jsx\n    <Helmet>\n      <title>Person Information</title>\n      <meta name=\"title\" content=\"Person Information\" />\n      <meta name=\"description\" content=\"This recipe talks about React Helmet\" />\n    </Helmet>\n```", "```jsx\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, \n    shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\">\n    <link rel=\"shortcut icon\" href=\"%PUBLIC_URL%/favicon.ico\">\n    <title>Personal Information</title>\n  </head>\n```", "```jsx\n  return  `\n    <head>\n      <meta charset=\"utf-8\">\n      <title>Personal Information</title>\n      ${helmet.title.toString()}\n      ${helmet.meta.toString()}\n      <link rel=\"shortcut icon\" href=\"images/favicon.png\" \n      type=\"image/x-icon\">\n    </head>\n  `;\n```"]