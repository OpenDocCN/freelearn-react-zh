- en: Deploying to Production
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署到生产环境
- en: 'In this chapter, the following recipes will be covered:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，将涵盖以下内容：
- en: Deploying to production on Digital Ocean
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Digital Ocean上部署到生产环境
- en: Configuring Nginx, PM2, and a domain in our Droplet
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在我们的Droplet中配置Nginx、PM2和域名
- en: Implementing Jenkins (continuous integration)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施Jenkins（持续集成）
- en: Introduction
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'If you are reading this chapter, it''s probably because you have completed
    your React Application (congratulations!). Now it''s time to deploy it to production
    and show it to the world. In this chapter, we will learn how to deploy our React
    Application using one of the best cloud services: Digital Ocean.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在阅读这一章，很可能是因为你已经完成了你的React应用程序（恭喜！）。现在是时候将其部署到生产环境并展示给世界了。在这一章中，我们将学习如何使用最好的云服务之一——Digital
    Ocean来部署我们的React应用程序。
- en: At this point, you will need to invest some money in renting the servers you
    will need. I will show you the cheapest way to do this, and then, if you want
    to increase the power of your servers, you will be able to do it without re-doing
    the configurations.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，你需要投资一些钱来租用你需要的服务器。我会向你展示最便宜的方法来做到这一点，然后，如果你想增加服务器的功率，你将能够在不重新配置的情况下做到这一点。
- en: Deploying to production on Digital Ocean
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Digital Ocean上部署到生产环境
- en: Digital Ocean is my favorite cloud-computing platform for using virtual servers
    (droplets) because it is effortless to create, configure, and delete droplets,
    and the price is low (you can get a droplet for $5 per month—that means $0.007
    per hour). Another reason why I think Digital Ocean is fantastic is that they
    have all the documentation up to date and customer service is quick to solve any
    problem you may have.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Digital Ocean是我最喜欢的云计算平台，因为它非常容易创建、配置和删除droplets，并且价格低廉（你可以每月得到一个droplet，每月只需5美元，也就是每小时0.007美元）。我认为Digital
    Ocean很棒的另一个原因是他们的所有文档都是最新的，客户服务也很快解决你可能遇到的任何问题。
- en: For this recipe, we are going to use Ubuntu 18.04, so you will need to know
    some basic Linux commands to be able to configure your droplet. If you are entirely
    new to Linux, don't worry, I'll try to explain each step in a straightforward
    way.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个步骤，我们将使用Ubuntu 18.04，所以你需要了解一些基本的Linux命令来配置你的droplet。如果你完全是新手，不用担心，我会尽量以简单的方式解释每一步。
- en: Getting ready
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'First, you need to create your Digital Ocean account, go to [https://www.digitalocean.com](https://www.digitalocean.com).
    You can sign up with your Google account; this is the recommended way. Once you
    click on the register link with Google, you will see the Billing Info view:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要创建你的Digital Ocean账户，访问[https://www.digitalocean.com](https://www.digitalocean.com)。你可以使用你的Google账户注册；这是推荐的方式。一旦你点击使用Google注册的链接，你将看到账单信息视图：
- en: '![](assets/8f8fae15-2381-4f91-94ab-7f7d0a46cf88.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8f8fae15-2381-4f91-94ab-7f7d0a46cf88.png)'
- en: 'You can register your Credit/Debit Card, or you can pay with PayPal. Once you''ve
    configured your payment information, you are ready to create your first Droplet:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以注册你的信用卡/借记卡，或者你可以使用PayPal支付。一旦你配置好你的付款信息，你就可以创建你的第一个Droplet了：
- en: '![](assets/b4c53373-cdae-4b83-8142-c0dbefd1d8d3.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b4c53373-cdae-4b83-8142-c0dbefd1d8d3.png)'
- en: How to do it...
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let''s create our first Droplet:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建我们的第一个Droplet：
- en: 'Choose your Linux distribution; as I mentioned before, we are going to use
    Ubuntu 18.04:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你的Linux发行版；正如我之前提到的，我们将使用Ubuntu 18.04：
- en: '![](assets/1c1ba873-4484-48ec-bc49-083128a57b58.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1c1ba873-4484-48ec-bc49-083128a57b58.png)'
- en: 'One-click apps are preconfigured Droplets, but I prefer to set my Droplet from
    scratch to have the control and be able to optimize my configuration. After this
    recipe, if you want to take a look at these options if you need to configure something
    quickly, that''s fine:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一键应用是预配置的Droplet，但我更喜欢从头开始设置我的Droplet，以便拥有控制权并能够优化我的配置。在此之后，如果您需要快速配置某些内容，可以查看这些选项：
- en: '![](assets/824561cf-fc0a-4eb7-a845-1f62c5013887.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/824561cf-fc0a-4eb7-a845-1f62c5013887.png)'
- en: Choose the size of your Droplet. I prefer to use the 2 GB RAM Memory Droplet,
    which costs *$10 per month*. You might be wondering why I don't choose the cheapest
    version of 1 GB *RAM*; this is because I've tried to use this version, but I noticed
    that *1GB RAM* is not enough to handle NPM when you install the packages. Most
    of the time, this will hang up your Droplet—I know sounds ridiculous, but NPM
    consumes a lot of RAM.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您的Droplet的大小。我更喜欢使用2GB内存的Droplet，每月费用为*10美元*。也许您会想为什么我不选择最便宜的1GB内存版本；这是因为我曾尝试使用这个版本，但我注意到*1GB内存*不足以处理安装包时的NPM。大多数情况下，这会使您的Droplet挂起——我知道这听起来很荒谬，但NPM消耗大量内存。
- en: 'If you choose the $10 Droplet, you don''t have to pay that money right away.
    One of the best things about Digital Ocean is that they only charge you for the
    time you used your Droplet. That means that if after your complete this recipe
    (let''s say you take 2 hours to complete it), you shut down (power off) your Droplet,
    you will only be charged for the 2 hours, which is *$0.030*. If you keep your
    Droplet on for the full month (30 days), you will be charged $10, so don''t worry:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您选择了10美元的Droplet，您不必立即支付这笔钱。Digital Ocean最好的一点是他们只会按您使用Droplet的时间收费。这意味着如果在完成此操作后（假设您花了2小时来完成它），您关闭（关机）您的Droplet，您只会被收取2小时的费用，即*0.030美元*。如果您将Droplet保持开启一个月（30天），您将被收取10美元，所以不用担心：
- en: '![](assets/e497ef00-ce89-42a0-8f8b-2e23c4aaf03c.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e497ef00-ce89-42a0-8f8b-2e23c4aaf03c.png)'
- en: 'Choose the datacenter region; this will depend on your location. If you''re
    in the US, you will need to pick New York or San Francisco. You need to choose
    the datacenter closest to your location:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择数据中心区域；这将取决于您的位置。如果您在美国，您需要选择纽约或旧金山。您需要选择距离您位置最近的数据中心：
- en: '![](assets/2fa45903-37ae-4830-857f-3442ef6c4e15.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2fa45903-37ae-4830-857f-3442ef6c4e15.png)'
- en: 'Name your Droplet. If you need more than one Droplet, you can select the amount
    here:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给您的Droplet命名。如果您需要多个Droplet，您可以在这里选择数量：
- en: '![](assets/afe71907-6d57-4cbe-864b-d3a9044da95b.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/afe71907-6d57-4cbe-864b-d3a9044da95b.png)'
- en: 'Once you click on the Create button, it will take 30-45 seconds to create your
    Droplet. Once it''s completed, you will see your Droplet:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建”按钮后，将需要30-45秒来创建您的Droplet。完成后，您将看到您的Droplet：
- en: '![](assets/9a33a693-4dd4-45ce-a9db-33f5c7d1a017.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9a33a693-4dd4-45ce-a9db-33f5c7d1a017.png)'
- en: 'At this point, you should get an email with your server credentials:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，您应该会收到一封包含服务器凭据的电子邮件：
- en: '![](assets/613317ad-ef62-4ac4-bcc4-21caadd6f037.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/613317ad-ef62-4ac4-bcc4-21caadd6f037.png)'
- en: 'In your Terminal, you can access your Droplet with the `ssh root@YOUR_DROPLET_IP` command.
    When you access it for the first time, you will get a message to add this IP to
    your known hosts after you have to put in the Droplet password:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的终端中，您可以使用`ssh root@YOUR_DROPLET_IP`命令访问您的Droplet。第一次访问时，您将收到一条消息，要求将此IP添加到已知主机中，然后您需要输入Droplet密码：
- en: '![](assets/222f41e9-aa44-457b-b655-8d4d1e1a40de.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/222f41e9-aa44-457b-b655-8d4d1e1a40de.png)'
- en: 'If everything works fine, you will be asked to change your UNIX password. You
    need to paste the current password and after you have to write the new password
    you want and retype it after you will be connected to the Droplet:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一切正常，您将被要求更改您的UNIX密码。您需要粘贴当前密码，然后输入您想要的新密码并重新输入，之后您将连接到Droplet：
- en: '![](assets/77529c96-f24a-4630-8329-fb4393c3d839.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/77529c96-f24a-4630-8329-fb4393c3d839.png)'
- en: 'Let''s start configuring our Droplet. Install Node.js. For this, we will install
    the latest version of Node using a PPA. Right now, the current release of Node
    is 10.x. If when you are reading this recipe, Node has a new version, change the
    version in the command (setup_**10.x**):'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们开始配置我们的Droplet。安装Node.js。为此，我们将使用PPA安装Node的最新版本。现在，Node的当前版本是10.x。如果在阅读此配方时，Node有一个新版本，请在命令中更改版本（setup_**10.x**）：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once we get the `nodesource_setup.sh` file, run the following command:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们得到`nodesource_setup.sh`文件，运行以下命令：
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To install Node, run the following:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要安装Node，请运行以下命令：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If you want to verify the version of Node and NPM you just installed, run:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想验证刚刚安装的Node和NPM的版本，请运行：
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: How it works...
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Using some of the recipes we performed in [Chapter 11](1daa68c4-442d-479f-b1b6-3efa80592901.xhtml),
    *Implementing Server-Side Rendering*, I created a new GitHub repository with that
    code to push it to production. You can see this repository at [https://github.com/csantany/production](https://github.com/csantany/production).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 使用我们在[第11章](1daa68c4-442d-479f-b1b6-3efa80592901.xhtml)中执行的一些配方，*实施服务器端渲染*，我创建了一个新的GitHub存储库，并将该代码推送到生产环境。您可以在[https://github.com/csantany/production](https://github.com/csantany/production)上看到这个存储库。
- en: 'In our Droplet, we will clone this git repo (if you already have your application
    ready, use your repository). The production repository is public, but if you use
    a private repository, you need to add the SSH Key of your Droplet in your GitHub
    account. For this, you need to run the `ssh-keygen` command in your Droplet, and
    then press *Enter* three times without writing any passphrase:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的Droplet中，我们将克隆此git存储库（如果您已经准备好您的应用程序，请使用您的存储库）。生产存储库是公开的，但如果您使用私人存储库，则需要在GitHub帐户中添加Droplet的SSH密钥。为此，您需要在Droplet中运行`ssh-keygen`命令，然后按三次*Enter*而不写任何密码：
- en: '![](assets/7fafb0c4-915a-44c5-b855-09d9f774f20c.png)If your terminal was inactive
    for more than five minutes, it''s possible your connection will be closed, and
    you will have to connect again.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/7fafb0c4-915a-44c5-b855-09d9f774f20c.png)如果您的终端在五分钟内处于非活动状态，可能会关闭您的连接，您将不得不重新连接。'
- en: 'After you create your SSH Key, you can see it by doing: `vi /root/.ssh/id_rsa.pub`.
    You need to copy the SSH Key and go to your GitHub Account | Settings | SSH and
    GPG Keys ([https://github.com/settings/ssh/new](https://github.com/settings/ssh/new)).
    And then paste your key in the textarea and put some title to the key. When you
    click the Add SSH Key button, GitHub will ask for your password to confirm:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 创建SSH密钥后，您可以通过执行以下操作查看它：`vi /root/.ssh/id_rsa.pub`。您需要复制SSH密钥并转到您的GitHub帐户|设置|SSH和GPG密钥（[https://github.com/settings/ssh/new](https://github.com/settings/ssh/new)）。然后将密钥粘贴到文本区域中，并为密钥添加一些标题。单击“添加SSH密钥”按钮时，GitHub将要求您输入密码以确认：
- en: '![](assets/6e77806f-e1e7-458d-b631-54cdc21f5fea.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/6e77806f-e1e7-458d-b631-54cdc21f5fea.png)'
- en: 'Now we can clone our repository using `git clone git@github.com:csantany/production.git`,
    or your repository:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以使用`git clone git@github.com:csantany/production.git`克隆我们的存储库，或者您的存储库：
- en: '![](assets/8f5aa495-a4c3-4fb7-8620-9a4e30075111.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8f5aa495-a4c3-4fb7-8620-9a4e30075111.png)'
- en: 'Then go to the production folder and install the NPM packages:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然后转到生产文件夹并安装NPM包：
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To test our application, let''s run our npm run start-production script:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试我们的应用程序，让我们运行npm run start-production脚本：
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If you want to verify that it works, go to your browser and open the IP of
    your droplet, and then add port 3000—in my case will be `http://178.128.177.84:3000` if
    everything works fine, you should see your application (in our case we are going
    to open our /todo section):'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想验证它是否有效，请转到浏览器并打开Droplet的IP，然后添加端口3000—在我的情况下将是`http://178.128.177.84:3000`，如果一切正常，您应该看到您的应用程序（在我们的情况下，我们将打开我们的/todo部分）：
- en: '![](assets/5f8932eb-4163-4242-90d8-a41ae0f6406d.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5f8932eb-4163-4242-90d8-a41ae0f6406d.png)'
- en: There's more...
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'If you want to turn off your Droplet, you can go to the Power section, or you
    can use the ON/OFF switch:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想关闭您的Droplet，您可以转到电源部分，或者您可以使用开/关开关：
- en: '![](assets/08a46a15-3719-4104-8840-a481e8ff6aeb.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/08a46a15-3719-4104-8840-a481e8ff6aeb.png)'
- en: 'When you click it, you will get this modal:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当您点击它时，您将会得到这个模态框：
- en: '![](assets/920bcbcf-98ca-440b-a62d-68efe72a3eb2.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/920bcbcf-98ca-440b-a62d-68efe72a3eb2.png)'
- en: Configuring Nginx, PM2, and a domain in our Droplet
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置Nginx、PM2和Droplet中的域
- en: At this point, our first Droplet is ready to use, but we can see our React Application
    using port 3000\. In this recipe, we are going to learn how to configure Nginx
    in our server and how to implement a proxy to redirect the traffic from port 80
    to 3000\. This means that we won't need to specify our port directly anymore.
    PM2 (Node Production Process Manager) will help us to run our Node server in production
    securely. Generally, if we run Node directly with the `node` or `babel-node` command
    and there is an error in our app, this will crash and will stop working; PM2 restarts
    the Node server if an error occurs.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们的第一个Droplet已经准备好使用，但我们可以看到我们的React应用程序使用端口3000。在这个配方中，我们将学习如何在服务器上配置Nginx以及如何实现代理将流量从端口80重定向到3000。这意味着我们不再需要直接指定我们的端口。PM2（Node生产进程管理器）将帮助我们在生产环境中安全地运行我们的Node服务器。通常，如果我们直接使用`node`或`babel-node`命令运行Node，并且我们的应用程序出现错误，它将崩溃并停止工作；如果发生错误，PM2将重新启动Node服务器。
- en: Getting Ready
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'For this recipe, we need to install PM2 globally:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个配方，我们需要全局安装PM2：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Also, we need to install Nginx:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们需要安装Nginx：
- en: '[PRE7]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: How to do it...
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let''s begin with the configuration:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从配置开始：
- en: 'Adjust the firewall to allow the traffic just in port 80\. To list the available
    application configurations, we run the following command:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调整防火墙以允许流量只通过端口80。要列出可用的应用程序配置，我们运行以下命令：
- en: '[PRE8]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '`Nginx Full` means that we will allow the traffic from ports 80 (HTTP) and
    443 (HTTPS). At this point, we haven''t configured any domain with SSL, so we
    should restrict the traffic to pass just through port 80 (HTTP):'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Nginx Full` 意味着我们将允许端口80（HTTP）和443（HTTPS）的流量。在这一点上，我们还没有为SSL配置任何域，所以我们应该限制流量只通过端口80（HTTP）传递：'
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If we try to access our IP, we should see our Nginx working:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们尝试访问我们的IP，我们应该看到我们的Nginx正在工作：
- en: '![](assets/96aeb8a7-c9df-4a2e-a032-a14d3c119f78.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/96aeb8a7-c9df-4a2e-a032-a14d3c119f78.png)'
- en: 'If you want to administrate the process of Nginx, you can use these commands:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想管理Nginx的进程，您可以使用这些命令：
- en: '**Start server**: `sudo systemctl start nginx`'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启动服务器**：`sudo systemctl start nginx`'
- en: '**Stop server**: `sudo systemctl stop nginx`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**停止服务器**：`sudo systemctl stop nginx`'
- en: '**Restart server**: `sudo systemctl restart nginx`'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重新启动服务器**：`sudo systemctl restart nginx`'
- en: '**Reload server**: `sudo systemctl reload nginx`'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重新加载服务器**：`sudo systemctl reload nginx`'
- en: '**Disable server**: `sudo systemctl disable nginx`'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**禁用服务器**：`sudo systemctl disable nginx`'
- en: 'Set up Nginx as a Reverse Proxy Server, for this we need to open our Nginx
    config file:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置Nginx作为反向代理服务器，为此我们需要打开我们的Nginx配置文件：
- en: '[PRE10]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In the `location /` block, we need to replace it with:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`location /`块中，我们需要将其替换为：
- en: '[PRE11]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: How it works...
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Once you''ve saved and closed the file, we need to verify whether we have any
    syntax errors. Use the following command:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您保存并关闭文件，我们需要验证是否有任何语法错误。使用以下命令：
- en: '[PRE12]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'If everything is OK, you should see:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切正常，您应该看到：
- en: '![](assets/e92ff470-bb57-4054-bb8d-c8d12206ca11.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e92ff470-bb57-4054-bb8d-c8d12206ca11.png)'
- en: 'Finally, we restart our Nginx server:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们重新启动我们的Nginx服务器：
- en: '[PRE13]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now we can access our IP without the port, and the React application will work
    fine:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以访问我们的IP而不带端口，React应用程序将正常工作：
- en: '![](assets/ee2dd4f9-4647-4f69-81c7-5cf1c5feb01d.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ee2dd4f9-4647-4f69-81c7-5cf1c5feb01d.png)'
- en: There's more...
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'If you want to use a domain with your Droplet, it''s really easy; you need
    to change the Nameservers of your domain to point to Digital Ocean ones. For example,
    I have a domain, called educnow.com, which I''m going to use for my Droplet. I
    registered this domain with Godaddy, so I have to go to the domain management
    and select it. You can go directly to the `https://dcc.godaddy.com/manage/YOURDOMAIN.COM/dns`
    URL. Then go to Nameservers:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要在Droplet上使用域名，这非常简单；您需要将域名的Nameservers更改为指向Digital Ocean的Nameservers。例如，我有一个名为educnow.com的域名，我将用于我的Droplet。我在Godaddy注册了这个域名，所以我必须转到域名管理并选择它。您可以直接转到`https://dcc.godaddy.com/manage/YOURDOMAIN.COM/dns`
    URL。然后转到Nameservers：
- en: '![](assets/c9b73e93-bbbe-43aa-8dd0-664b590a2f99.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c9b73e93-bbbe-43aa-8dd0-664b590a2f99.png)'
- en: 'We have to click on the Change button, select Custom, specify the Digital Ocean
    Nameservers, and click on Save:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须点击“更改”按钮，选择“自定义”，指定Digital Ocean Nameservers，并点击“保存”：
- en: '![](assets/a4d29c53-0eaf-4b98-86e1-220386dd5b76.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a4d29c53-0eaf-4b98-86e1-220386dd5b76.png)'
- en: 'Once you''ve modified your Nameservers, you need to go to your Droplet dashboard
    and choose the Add a domain option:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您修改了Nameservers，您需要转到Droplet仪表板并选择“添加域名”选项：
- en: '![](assets/fffc047b-5401-4739-b348-c98aff746683.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fffc047b-5401-4739-b348-c98aff746683.png)'
- en: 'Then introduce the domain you want to link to your Droplet and click on Add
    Domain:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 然后输入要链接到Droplet的域名，然后单击“添加域名”：
- en: '![](assets/e7161d4b-11cd-4a5e-ad54-9cc9b5ac4dab.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e7161d4b-11cd-4a5e-ad54-9cc9b5ac4dab.png)'
- en: 'Now you need to create a new record for CNAME. Select the CNAME tab, in the
    hostname write `www`, in the alias field write `@`, and by default the TTL is
    `43200`—this is to be able to access your domain using the `www.yourdomain.com`
    prefix:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您需要为CNAME创建一个新记录。选择CNAME选项卡，在主机名中写入`www`，在别名字段中写入`@`，默认情况下TTL为`43200`—这是为了能够使用`www.yourdomain.com`前缀访问您的域名：
- en: '![](assets/9e417d23-e513-40c0-bbfa-a6c4cc12beb8.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9e417d23-e513-40c0-bbfa-a6c4cc12beb8.png)'
- en: If you did everything correctly, you should be able to access your domain and
    see your React Application working; this process can take from 30 minutes to 24
    hours depending on the DNS propagation speed.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您一切都做对了，您应该能够访问您的域名并看到您的React应用程序正在运行；这个过程可能需要30分钟到24小时，具体取决于DNS传播速度。
- en: Implementing Jenkins (continuous integration)
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施Jenkins（持续集成）
- en: Jenkins is one of the most popular software for continuous integration, it's
    based on Java and is open source.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Jenkins是最受欢迎的持续集成软件之一，它基于Java并且是开源的。
- en: Getting Ready
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'There are some prerequisites to run Jenkins:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 运行Jenkins有一些先决条件：
- en: You need a droplet (server) with Ubuntu 18.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要一个带有Ubuntu 18的Droplet（服务器）。
- en: You need to install Java 8.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要安装Java 8。
- en: 'If you don''t have Java 8 installed, you can install it with this command:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尚未安装Java 8，可以使用以下命令进行安装：
- en: '**sudo apt  install openjdk-8-jre-headless**'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**sudo apt  install openjdk-8-jre-headless**'
- en: 'If you want to check which version of Java you have installed, you can use
    the `java -version` command:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要检查已安装的Java版本，可以使用`java -version`命令：
- en: '![](assets/95f04dff-edfc-48c0-899a-a61b80e88001.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/95f04dff-edfc-48c0-899a-a61b80e88001.png)'
- en: How to do it...
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Now let''s install and configure Jenkins:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们安装和配置Jenkins：
- en: 'Add the repository key to the system:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将存储库密钥添加到系统中：
- en: '[PRE14]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Append the Debian package address to `sources.list`:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Debian软件包地址追加到`sources.list`：
- en: '[PRE15]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Update the apt packages:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新apt软件包：
- en: '[PRE16]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Install Jenkins:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Jenkins：
- en: '[PRE17]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'If you get an error when you install Jenkins, you can uninstall it with:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在安装Jenkins时出现错误，可以使用以下命令卸载它：
- en: '**sudo apt-get remove --purge** jenkins'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**sudo apt-get remove --purge** jenkins'
- en: 'Start the Jenkins service:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Jenkins服务：
- en: '[PRE18]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'If you want to see the Jenkins status, use this command:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想查看Jenkins状态，请使用此命令：
- en: '[PRE19]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![](assets/69f18ccf-68ff-4f58-93c9-e38b13fb3bf4.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/69f18ccf-68ff-4f58-93c9-e38b13fb3bf4.png)'
- en: 'Jenkins runs on port 8080 by default, and we need to open the Firewall to allow
    the traffic to that port:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Jenkins 默认运行在端口 8080 上，我们需要打开防火墙以允许流量通过该端口：
- en: '[PRE20]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'If you want to verify the firewall status, do the following:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想验证防火墙状态，执行以下操作：
- en: '[PRE21]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'If you see Status: inactive, you will need to run these commands to enable
    the firewall:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看到状态：inactive，你需要运行以下命令来启用防火墙：
- en: '**sudo ufw allow OpenSSH**'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**sudo ufw allow OpenSSH**'
- en: '**sudo ufw enable**![](assets/5fabecf9-a272-4600-9e22-63c91f688307.png)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '**sudo ufw enable**![](assets/5fabecf9-a272-4600-9e22-63c91f688307.png)'
- en: 'It''s time to run our Jenkins for the first time and configure it. For this,
    you need to visit `http://<the_ip_or_domain_of_your_droplet>:8080`. In my case,
    it''s `http://142.93.28.244:8080`:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是时候第一次运行并配置我们的 Jenkins 了。为此，你需要访问 `http://<your_droplet的IP或域名>:8080`。在我的情况下，是
    `http://142.93.28.244:8080`：
- en: '![](assets/67584010-d8f9-49d9-8792-bee9c0b9590f.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/67584010-d8f9-49d9-8792-bee9c0b9590f.png)'
- en: 'To see the first password, you need to run:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看第一个密码，你需要运行：
- en: '[PRE22]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![](assets/a8c88760-d80d-4c1f-95e3-ed10c859a8b1.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a8c88760-d80d-4c1f-95e3-ed10c859a8b1.png)'
- en: 'You will see the Welcome to Jenkins page. You have to select the "Install suggested
    plugins" option:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会看到欢迎来到 Jenkins 页面。你需要选择“安装建议的插件”选项：
- en: '![](assets/a28bf925-13bb-4449-a388-dcce812e15d7.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a28bf925-13bb-4449-a388-dcce812e15d7.png)'
- en: 'You will see the installation process:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会看到安装过程：
- en: '![](assets/ef348693-d084-43cd-be6e-4c43ea7f06b1.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ef348693-d084-43cd-be6e-4c43ea7f06b1.png)'
- en: 'Once the installation is complete, you need to create your first admin user:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，你需要创建第一个管理员用户：
- en: '![](assets/450336d6-a3ed-4426-be31-528e8930cc5b.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/450336d6-a3ed-4426-be31-528e8930cc5b.png)'
- en: 'Confirm the Jenkins URL if you don''t want to change it. Click Save and Finish:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认 Jenkins URL 如果你不想更改它。点击保存并完成：
- en: '![](assets/67f5dcc1-99f8-44b6-abbf-e33585f16c4b.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/67f5dcc1-99f8-44b6-abbf-e33585f16c4b.png)'
- en: 'Jenkins is ready:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Jenkins 已准备就绪：
- en: '![](assets/7b53bde8-416c-42aa-8a12-aabe46c244a5.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7b53bde8-416c-42aa-8a12-aabe46c244a5.png)'
- en: 'The first view you will see in Jenkins is this one:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你在 Jenkins 中看到的第一个视图是这个：
- en: '![](assets/ea8373a4-57bb-43ea-a183-b8702e06d8e8.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ea8373a4-57bb-43ea-a183-b8702e06d8e8.png)'
- en: 'Go to Manage Jenkins > Manage Plugins to install the GitHub plugin:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到“管理 Jenkins” > “管理插件”来安装 GitHub 插件：
- en: '![](assets/4acca626-b933-4331-bab3-bf6fe79ff541.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4acca626-b933-4331-bab3-bf6fe79ff541.png)'
- en: 'Select the Available tab and then search for GitHub Integration. Now select
    the checkbox option and click on the Download now and install after restart button:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“可用”选项卡，然后搜索 GitHub 集成。现在选择复选框选项，然后点击“立即下载并在重启后安装”按钮：
- en: '![](assets/7e644e93-7b21-4f33-b7bd-1683f5bb8a13.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7e644e93-7b21-4f33-b7bd-1683f5bb8a13.png)'
- en: 'Select the Restart Jenkins when installation is complete, and no jobs are running option:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“安装完成后重新启动 Jenkins，且没有任务正在运行”选项：
- en: '![](assets/b679bd1e-c7ea-4cc4-8d46-42a6208719db.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b679bd1e-c7ea-4cc4-8d46-42a6208719db.png)'
- en: 'You will see this message:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会看到这个消息：
- en: '![](assets/907880ac-a25e-4a96-8ea5-41d971742a9a.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/907880ac-a25e-4a96-8ea5-41d971742a9a.png)'
- en: Wait one minute and then refresh the page. You may need to log in again.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待一分钟，然后刷新页面。你可能需要重新登录。
- en: Go back to Manage **Plugins**; now you need to install the **Post build task
    plugin**.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到“管理插件”；现在你需要安装“后构建任务插件”。
- en: 'We can create our first Job by clicking on create new jobs on the homepage:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过在主页上点击创建新任务来创建我们的第一个任务：
- en: '![](assets/666ea3f7-cb57-48ed-b6e1-fc91453d3a0f.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/666ea3f7-cb57-48ed-b6e1-fc91453d3a0f.png)'
- en: 'Write the name of your job, select the Freestyle project option, and click
    on the OK button:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入你的任务名称，选择自由风格项目选项，然后点击确定按钮：
- en: '![](assets/3064e63b-656d-4224-8576-9bc1ba74e473.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3064e63b-656d-4224-8576-9bc1ba74e473.png)'
- en: 'In the General configuration, go to the Source Code Management section, select
    the Git option, and then write your GitHub project HTTPS URL (if you select your
    SSH URL, you will need to add new SSH keys for Jenkins in your GitHub):'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在常规配置中，转到源代码管理部分，选择Git选项，然后写入你的GitHub项目HTTPS URL（如果选择SSH URL，你需要在GitHub中为Jenkins添加新的SSH密钥）：
- en: '![](assets/84650f9d-e6be-41c1-986d-09270726558c.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/84650f9d-e6be-41c1-986d-09270726558c.png)'
- en: 'If your repository is private, you need to click on the Add button to specify
    your GitHub credentials (username and password):'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你的存储库是私有的，你需要点击“添加”按钮来指定你的GitHub凭据（用户名和密码）：
- en: '![](assets/fa606801-d577-4aa7-bdf0-6523a10b516f.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fa606801-d577-4aa7-bdf0-6523a10b516f.png)'
- en: 'Select your credentials and make sure the `master` branch is selected as your
    main branch (it''s recommended to use the master instead of others branches):'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你的凭据，并确保“master”分支被选为你的主分支（建议使用主分支而不是其他分支）：
- en: '![](assets/2fd8c743-7f10-4686-91cb-04276161c890.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2fd8c743-7f10-4686-91cb-04276161c890.png)'
- en: 'Select the Post build task option on the Post-build Actions:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在后构建操作中选择“后构建任务”选项：
- en: '![](assets/d6803c1b-e91b-4058-95ba-34f638811ca4.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d6803c1b-e91b-4058-95ba-34f638811ca4.png)'
- en: 'In the textarea script, add `npm install && npm run start-production`. Click
    on Apply and then on the Save button:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本框脚本中，添加`npm install && npm run start-production`。点击应用，然后点击保存按钮：
- en: '![](assets/93173b99-a56f-4164-b1a8-de7c0631bd04.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/93173b99-a56f-4164-b1a8-de7c0631bd04.png)'
- en: How it works...
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We've configured our Jenkins job, now let's test it. I'm going to modify a simple
    file to be sure the Jenkins works properly.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经配置好了Jenkins作业，现在让我们来测试一下。我将修改一个简单的文件，以确保Jenkins正常工作。
- en: At this point (if you followed the first recipe), you must stop the PM2 server
    with the command "**npm run stop**" and then remove the production directory that
    we cloned before, to avoid problems with the Jenkins job.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 到这一步（如果你按照第一个教程操作），你必须使用命令“**npm run stop**”停止PM2服务器，然后删除之前克隆的生产目录，以避免与Jenkins作业出现问题。
- en: 'Let''s modify our Home component; I''ll add an extra text **(Jenkins)**:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们修改我们的主页组件；我会添加额外的文本**(Jenkins)**：
- en: '[PRE23]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'File: src/client/home/index.jsx'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 文件：src/client/home/index.jsx
- en: 'After that, you need to commit and push to master. Now go to Jenkins, select
    your job, and click on `Build Now`:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，你需要提交并推送到主分支。现在转到Jenkins，选择你的作业，然后点击“立即构建”：
- en: '![](assets/4cee1644-935c-4e1d-9011-28768649a40f.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4cee1644-935c-4e1d-9011-28768649a40f.png)'
- en: 'After that, click on the latest build (in my case it''s #5 because I did some
    tests before, but for you, it will be #1):'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，点击最新的构建（在我的情况下是＃5，因为我之前做了一些测试，但对你来说，它将是＃1）：
- en: '![](assets/fbc52eb4-7bc8-495d-96c1-90149b6a8160.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fbc52eb4-7bc8-495d-96c1-90149b6a8160.png)'
- en: 'In the build, you will see who (user) started the build and which is the revision
    (last commit of master) that is building. If you want to see the Console Output,
    you can click on that option on the left menu:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建中，你会看到是谁（用户）启动了构建，正在构建的是哪个修订版本（主分支的最新提交）。如果你想查看控制台输出，你可以点击左侧菜单中的选项：
- en: '![](assets/5710a5c8-b283-4954-8bc2-d75b2b3f2d57.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5710a5c8-b283-4954-8bc2-d75b2b3f2d57.png)'
- en: 'If you look at the Console Output, you will see tons of commands:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看控制台输出，你会看到大量的命令：
- en: '![](assets/f271e88e-6e1d-455d-b663-b963aacf2109.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f271e88e-6e1d-455d-b663-b963aacf2109.png)'
- en: 'Every time we run a new build, Jenkins will fetch the latest changes of the
    repository:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 每次运行新构建时，Jenkins都会获取存储库的最新更改：
- en: '[PRE24]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Then will get the last commit of the master:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将获取主分支的最新提交：
- en: '[PRE25]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'And finally, it will execute the commands we specified on the Post build task:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，它将执行我们在后构建任务中指定的命令：
- en: '[PRE26]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'If everything works fine, you should see Finished: SUCCESS at the end of the
    output:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切正常，你应该在输出的末尾看到“完成：成功”：
- en: '![](assets/6bfadaed-70c9-42f4-b96a-2ac414cce03a.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/6bfadaed-70c9-42f4-b96a-2ac414cce03a.png)'
- en: 'Now wait 30 seconds or 1 minute and then visit your production site (in my
    case `http://142.93.28.244/`) – you will see the new changes:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 现在等待30秒或1分钟，然后访问你的生产网站（在我的案例中是`http://142.93.28.244/`）- 你会看到新的改变：
- en: '![](assets/9b5b1bed-835a-4774-bfd8-5f53ac5e0963.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9b5b1bed-835a-4774-bfd8-5f53ac5e0963.png)'
- en: If you're wondering where the files are stored, you can see them at `/var/lib/jenkins/workspace/<your_jenkins_job_name>`.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想知道文件存储在哪里，你可以在`/var/lib/jenkins/workspace/<your_jenkins_job_name>`看到它们。
