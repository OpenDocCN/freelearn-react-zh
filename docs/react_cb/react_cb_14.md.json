["```jsx\n npm install -g react-native-cli\n```", "```jsx\n    react-native init MyFirstReactNativeApp\n```", "```jsx\n    /usr/bin/ruby -e \"$(curl -fsSL \n  https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```", "```jsx\n    brew update \n    brew install watchman\n```", "```jsx\n    react-native start\n```", "```jsx\n    react-native run-ios \n    or\n    react-native run-android\n```", "```jsx\n  ...\n  export default class App extends Component<Props> {\n    render() {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.welcome}>\n This is my first React Native App!          </Text>\n          <Text style={styles.instructions}>\n            To get started, edit App.js\n          </Text>\n          <Text style={styles.instructions}>{instructions}</Text>\n        </View>\n      );\n    }\n  }\n  ...\n```", "```jsx\n  // Dependencies\n  import React, { Component } from 'react';\n  import { StyleSheet, Text, View } from 'react-native';\n\n  class Home extends Component {\n    render() {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.home}>Home Component</Text>\n        </View>\n      );\n    }\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#F5FCFF',\n    },\n    home: {\n      fontSize: 20,\n      textAlign: 'center',\n      margin: 10,\n    }\n  });\n\n export default Home;\n```", "```jsx\n  // Dependencies\n  import React, { Component } from 'react';\n  import { StyleSheet, Text, View } from 'react-native';\n\n  // Components\n  import Home from './components/Home';\n\n  class App extends Component {\n    render() {\n      return (\n        <Home />\n      );\n    }\n  }\n\n  export default App;\n```", "```jsx\n    // Dependencies\n    import React, { Component } from 'react';\n    import { StyleSheet, Text, View } from 'react-native';\n\n    class Home extends Component {\n      render() {\n        return (\n          <View style={styles.container}>\n            <View style={styles.header}>\n              <Text style={styles.headerText}>Header</Text>\n            </View>\n\n            <View style={styles.columns}>\n              <View style={styles.column1}>\n                <Text style={styles.column1Text}>Column 1</Text>\n              </View>\n\n              <View style={styles.column2}>\n                <Text style={styles.column2Text}>Column 2</Text>\n              </View>\n\n              <View style={styles.column3}>\n                <Text style={styles.column3Text}>Column 3</Text>\n              </View>\n            </View>\n          </View>\n        );\n      }\n    }\n\n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        height: 100\n      },\n      header: {\n        flex: 1,\n        backgroundColor: 'green',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      headerText: {\n        color: 'white'\n      },\n      columns: {\n        flex: 1\n      },\n      column1: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'red'\n      },\n      column1Text: {\n        color: 'white'\n      },\n      column2: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'blue'\n      },\n      column2Text: {\n        color: 'white'\n      },\n      column3: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'orange'\n      },\n      column3Text: {\n        color: 'white'\n      },\n    });\n\n    export default Home;\n```", "```jsx\n  import { StyleSheet } from 'react-native';\n\n  export default StyleSheet.create({\n    container: {\n      flex: 1,\n      height: 100\n    },\n    header: {\n      flex: 1,\n      backgroundColor: 'green',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    headerText: {\n      color: 'white'\n    },\n    columns: {\n      flex: 1\n    },\n    column1: {\n      flex: 1,\n      alignItems: 'center',\n     justifyContent: 'center',\n      backgroundColor: 'red'\n    },\n    column1Text: {\n      color: 'white'\n    },\n    column2: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'blue'\n    },\n    column2Text: {\n      color: 'white'\n    },\n    column3: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'orange'\n    },\n    column3Text: {\n      color: 'white'\n    },\n  });\n```", "```jsx\n  // Dependencies\n  import React, { Component } from 'react';\n  import { StyleSheet, Text, View } from 'react-native';\n\n  // Styles\n  import styles from './HomeStyles';\n  ...\n```", "```jsx\n  import React, { Component } from 'react';\n\n  import Todo from './components/Todo';\n\n  export default class App extends Component {\n    render() {\n      return (\n        <Todo />\n      );\n    }\n  }\n```", "```jsx\n  import React, { Component } from 'react';\n  import { \n    Text, \n    View, \n    TextInput, \n    TouchableOpacity, \n    ScrollView \n  } from 'react-native';\n\n  import styles from './TodoStyles';\n\n  class Todo extends Component {\n    state = {\n      task: '',\n      list: []\n    };\n\n    onPressAddTask = () => {\n      if (this.state.task) {\n        const newTask = this.state.task;\n        const lastTask = this.state.list[0] || { id: 0 };\n        const newId = Number(lastTask.id + 1);\n\n        this.setState({\n          list: [{ id: newId, task: newTask }, ...this.state.list],\n          task: ''\n        });\n      }\n    }\n\n    onPressDeleteTask = id => {\n      this.setState({\n        list: this.state.list.filter(task => task.id !== id)\n      });\n    }\n\n    render() {\n      const { list } = this.state;\n      let zebraIndex = 1;\n\n      return (\n        <View style={styles.container}>\n          <ScrollView\n            contentContainerStyle={{\n              flexGrow: 1,\n            }}\n          >\n            <View style={styles.list}>\n              <View style={styles.header}>\n                <Text style={styles.headerText}>Todo List</Text>\n              </View>\n\n              <View style={styles.add}>\n                <TextInput\n                  style={styles.inputText}\n                  placeholder=\"Add a new task\"\n                  onChangeText={(value) => this.setState({ task: \n value })}\n                  value={this.state.task}\n                />\n\n                <TouchableOpacity\n                  style={styles.button}\n                  onPress={this.onPressAddTask}\n                >\n                  <Text style={styles.submitText}>+ Add Task</Text>\n                </TouchableOpacity>\n              </View>\n\n              {list.length === 0 && (\n                <View style={styles.noTasks}>\n                  <Text style={styles.noTasksText}>\n                    There are no tasks yet, create a new one!\n </Text>\n                </View>\n              )}\n\n              {list.map((item, i) => {\n                zebraIndex = zebraIndex === 2 ? 1 : 2;\n\n                return (\n                  <View key={`task${i}`} style=\n                   {styles[`task${zebraIndex}`]}>\n                    <Text>{item.task}</Text>\n                    <TouchableOpacity onPress={() => { \n                     this.onPressDeleteTask(item.id) }}>\n                      <Text style={styles.delete}>\n                        X\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                );\n              })}\n            </View>\n </ScrollView>\n </View>\n      );\n    }\n  }\n\n export default Todo;\n```", "```jsx\n  import { StyleSheet } from 'react-native';\n\n export default StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#F5FCFF',\n      height: 50\n    },\n    list: {\n      flex: 1\n    },\n    header: {\n      backgroundColor: '#333',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 60\n    },\n    headerText: {\n      color: 'white'\n    },\n    inputText: {\n      color: '#666',\n      height: 40,\n      borderColor: 'gray',\n      borderWidth: 1\n    },\n    button: {\n      paddingTop: 10,\n      paddingBottom: 10,\n      backgroundColor: '#1480D6'\n    },\n    submitText: {\n      color:'#fff',\n      textAlign:'center',\n      paddingLeft : 10,\n      paddingRight : 10\n    },\n    task1: {\n      flexDirection: 'row',\n      height: 50,\n      backgroundColor: '#ccc',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      paddingLeft: 5\n    },\n    task2: {\n      flexDirection: 'row',\n      height: 50,\n      backgroundColor: '#eee',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      paddingLeft: 5\n    },\n    delete: {\n      margin: 10,\n      fontSize: 15\n    },\n    noTasks: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    noTasksText: {\n      color: '#888'\n    }\n  });\n```", "```jsx\n state = {\n      task: '',\n      list: []\n    };\n```", "```jsx\n <TextInput\n    style={styles.inputText}\n    placeholder=\"Add a new task\"\n    onChangeText={(value) => this.setState({ task: value })}\n    value={this.state.task}\n  />\n```", "```jsx\n  <TouchableOpacity\n    style={styles.button}\n    onPress={this.onPressAddTask}\n  >\n    <Text style={styles.submitText}>+ Add Task</Text>\n  </TouchableOpacity>\n```", "```jsx\n    {list.map((item, i) => {\n      zebraIndex = zebraIndex === 2 ? 1 : 2;\n\n      return (\n        <View key={`task${i}`} style={styles[`task${zebraIndex}`]}>\n          <Text>{item.task}</Text>\n          <TouchableOpacity onPress={() => { \n           this.onPressDeleteTask(item.id) }}>\n            <Text style={styles.delete}>\n              X\n            </Text>\n          </TouchableOpacity>\n </View>\n      );\n    })}\n```", "```jsx\n  import { \n    Text, \n    View, \n    TextInput, \n    TouchableOpacity, \n    ScrollView, \n Alert \n  } from 'react-native';\n\n  ...\n\n  onPressDeleteTask = id => {\n    Alert.alert('Delete', 'Do you really want to delete this task?', [\n      {\n        text: 'Yes, delete it.',\n        onPress: () => {\n          this.setState({\n            list: this.state.list.filter(task => task.id !== id)\n          });\n        }\n      }, {\n        text: 'No, keep it.'\n      }\n    ]);\n  }\n\n  ...\n```", "```jsx\n npm install react-navigation\n```", "```jsx\n  // Dependencies\n  import React, { Component } from 'react';\n  import { StyleSheet, View, ScrollView, Image } from 'react-\n  native';\n\n  // React Navigation\n  import { createDrawerNavigator, DrawerItems } from 'react-\n  navigation';\n\n  // Components\n  import Home from './sections/Home';\n  import Configuration from './sections/Configuration';\n```", "```jsx\n // Custom Drawer Component\n // Here we are displaying the menu options \n  // and customizing our drawer\n  const CustomDrawerComponent = props => (\n    <View style={styles.area}>\n      <View style={styles.drawer}>\n        <Image\n          source={require('./assets/codejobs.jpeg')}\n          style={styles.logo}>\n        </Image>\n      </View>\n\n <ScrollView>\n        <DrawerItems {...props} />\n </ScrollView>\n </View>\n  );\n```", "```jsx\n // The left Drawer navigation\n // The first object are the components that we want to display\n // in the Drawer Navigation.\n  const AppDrawerNavigator = createDrawerNavigator({\n    Home,\n    Configuration\n  },\n  {\n    contentComponent: CustomDrawerComponent\n  });\n```", "```jsx\n  class App extends Component {\n    render() {\n      return (\n        <AppDrawerNavigator />\n      );\n    }\n  }\n\n  // Styles for left Drawer\n  const styles = StyleSheet.create({\n    area: {\n      flex: 1\n    },\n    drawer: {\n      height: 150,\n      backgroundColor: 'white',\n      alignItems: 'center',\n      justifyContent:'center'\n    },\n    logo: {\n      height: 120,\n      width: 120,\n      borderRadius: 60\n    }\n  });\n\n  export default App;\n```", "```jsx\n  // Dependencies\n  import React, { Component } from 'react';\n  import { View, Text, Image, TouchableOpacity } from 'react-native';\n  // Styles\n  import styles from './SectionStyles';\n  class Home extends Component {\n    // Here we specify the icon we want to render\n // in the menu for this option\n    static navigationOptions = {\n      drawerIcon: () => (\n        <Image\n          style={styles.iconsItem}\n          source={require('../assets/home.png')}\n        />\n      )\n    }\n    render() {\n      return(\n        <View style={styles.container}>\n          {/* Hamburger menu */}\n          <TouchableOpacity \n            onPress={() => this.props.navigation.openDrawer()} \n            style={styles.iconMenu}\n          >\n            <Image\n              style={styles.menu}\n              source={require('../assets/menu.png')}\n            />\n          </TouchableOpacity>\n\n          {/* Here is the content of the component */}\n          <Text style={styles.titleText}>I'm the home section</Text>\n        </View>\n      );\n    }\n  }\n  export default Home;\n```", "```jsx\n  // Dependencies\n  import React, { Component } from 'react';\n  import { View, Text, Image, TouchableOpacity } from 'react-native';\n\n  // Styles\n  import styles from './SectionStyles';\n\n  class Configuration extends Component {\n // Here we specify the icon we want to render\n // in the menu for this option\n    static navigationOptions = {\n      drawerIcon: () => (\n        <Image\n          style={styles.iconsItem}\n          source={require('../assets/config.png')}\n        />\n      )\n    };\n\n    render() {\n      return(\n        <View style={styles.container}>\n          {/* Hamburger menu */}\n          <TouchableOpacity \n            onPress={() => this.props.navigation.openDrawer()} \n            style={styles.iconMenu}\n          >\n            <Image\n              style={styles.menu}\n              source={require('../assets/menu.png')}\n            />\n          </TouchableOpacity>\n\n          {/* Here is the content of the component */}\n          <Text style={styles.titleText}>I'm the configuration \n          section</Text>\n        </View>\n      );\n    }\n  }\n\n export default Configuration;\n```", "```jsx\n  import { StyleSheet } from 'react-native';\n\n export default StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    iconMenu: {\n      position: 'absolute',\n      left: 0,\n      top: 5\n    },\n    titleText: {\n      fontSize: 26,\n      fontWeight: 'bold',\n    },\n    menu: {\n      width: 80,\n      height: 80,\n    },\n    iconsItem: {\n      width: 25,\n      height: 25\n    }\n  });\n```"]