["```jsx\n npm install react-router-dom\n```", "```jsx\nimport React from 'react';\n\nconst Home = () => (\n  <div className=\"Home\">\n    <h1>Home</h1>\n  </div>\n);\n\nexport default Home;\n```", "```jsx\nimport React from 'react';\n\nconst About = () => (\n  <div className=\"About\">\n    <h1>About</h1>\n  </div>\n);\n\nexport default About;\n```", "```jsx\n      import React from 'react';\n\n      const Contact = () => (\n        <div className=\"Contact\">\n          <h1>Contact</h1>\n        </div>\n      );\n\n      export default Contact;\n```", "```jsx\n      import React from 'react';\n\n      const Error404 = () => (\n        <div className=\"Error404\">\n          <h1>Error404</h1>\n        </div>\n      );\n\n export default Error404;\n```", "```jsx\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\n\n// Routes\nimport AppRoutes from './routes';\n\nrender(\n  <Router>\n    <AppRoutes />\n  </Router>,\n  document.getElementById('root')\n);\n```", "```jsx\n// Dependencies\nimport React from 'react';\nimport { Route } from 'react-router-dom';\n\n// Components\nimport App from './components/App';\nimport Home from './components/Home';\n\nconst AppRoutes = () => (\n  <App>\n    <Route path=\"/\" component={Home} />\n  </App>\n);\n\nexport default AppRoutes;\n```", "```jsx\n      import React from 'react';\n      import { element } from 'prop-types';\n      import Header from '../shared/components/layout/Header';\n      import Content from '../shared/components/layout/Content';\n      import Footer from '../shared/components/layout/Footer';\n      import './App.css';\n\n      const App = props => (\n        <div className=\"App\">\n          <Header title=\"Routing\" />\n\n          <Content>\n            {props.children}\n          </Content>\n\n          <Footer />\n        </div>\n      );\n\n      App.propTypes = {\n        children: element\n      };\n\n export default App;\n```", "```jsx\n// Dependencies\nimport React from 'react';\nimport { Route } from 'react-router-dom';\n\n// Components\nimport App from './components/App';\nimport Home from './components/Home';\nimport Error404 from './components/Error/404';\n\nconst AppRoutes = () => (\n  <App>\n    <Route path=\"/\" component={Home} />\n    <Route component={Error404} />\n  </App>\n);\n\nexport default AppRoutes;\n```", "```jsx\n// Dependencies\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// Components\nimport App from './components/App';\nimport Home from './components/Home';\nimport Error404 from './components/Error/404';\n\nconst AppRoutes = () => (\n  <App>\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route component={Error404} />\n    </Switch>\n  </App>\n);\n\nexport default AppRoutes;\n```", "```jsx\n// Dependencies\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// Components\nimport App from './components/App';\nimport Home from './components/Home';\nimport Error404 from './components/Error/404';\n\nconst AppRoutes = () => (\n  <App>\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n      <Route component={Error404} />\n    </Switch>\n  </App>\n);\n\nexport default AppRoutes;\n```", "```jsx\n// Dependencies\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// Components\nimport App from './components/App';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Home from './components/Home';\nimport Error404 from './components/Error/404';\n\nconst AppRoutes = () => (\n  <App>\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n      <Route path=\"/about\" component={About} exact />\n <Route path=\"/contact\" component={Contact} exact />\n      <Route component={Error404} />\n    </Switch>\n  </App>\n);\n\nexport default AppRoutes;\n```", "```jsx\n    import React, { Component } from 'react';\n    import './Notes.css';\n    class Notes extends Component {\n      constructor() {\n        super();\n\n        // For now we are going to add our notes to our \n        // local state, but normally this should come\n        // from some service.\n        this.state = {\n          notes: [\n            {\n              id: 1,\n              title: 'My note 1'\n            },\n            {\n              id: 2,\n              title: 'My note 2'\n            },\n            {\n              id: 3,\n              title: 'My note 3'\n            },\n          ]\n        };\n      }\n      render() {\n        return (\n          <div className=\"Notes\">\n            <h1>Notes</h1>\n          </div>\n        );\n      }\n    }\n    export default Notes;\n```", "```jsx\n    .Notes ul {\n      list-style: none;\n      margin: 0;\n      margin-bottom: 20px;\n      padding: 0;\n    }\n\n .Notes ul li {\n      padding: 10px;\n    }\n\n    .Notes a {\n      color: #555;\n      text-decoration: none;\n    }\n\n    .Notes a:hover {\n      color: #ccc;\n      text-decoration: none;\n    }\n```", "```jsx\n// Dependencies\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// Components\nimport App from './components/App';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Home from './components/Home';\nimport Notes from './components/Notes';\nimport Error404 from './components/Error/404';\n\nconst AppRoutes = () => (\n  <App>\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n      <Route path=\"/about\" component={About} exact />\n      <Route path=\"/contact\" component={Contact} exact />\n      <Route path=\"/notes\" component={Notes} exact />\n      <Route component={Error404} />\n    </Switch>\n  </App>\n);\n\nexport default AppRoutes;\n```", "```jsx\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Notes.css';\n\nclass Notes extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      notes: [\n        {\n          id: 1,\n          title: 'My note 1'\n        },\n        {\n          id: 2,\n          title: 'My note 2'\n        },\n        {\n          id: 3,\n          title: 'My note 3'\n        },\n      ]\n    };\n  }\n\n  renderNotes = notes => (\n    <ul>\n      {notes.map((note, key) => (\n        <li key={key}>\n          <Link to={`/notes/${note.id}`}>{note.title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n\n  render() {\n    const { notes } = this.state;\n\n    return (\n      <div className=\"Notes\">\n        <h1>Notes</h1>\n\n        {this.renderNotes(notes)}\n      </div>\n    );\n  }\n}\n\nexport default Notes;\n```", "```jsx\n// Dependencies\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// Components\nimport App from './components/App';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Home from './components/Home';\nimport Notes from './components/Notes';\nimport Error404 from './components/Error/404';\n\nconst AppRoutes = () => (\n  <App>\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n      <Route path=\"/about\" component={About} exact />\n      <Route path=\"/contact\" component={Contact} exact />\n      <Route path=\"/notes\" component={Notes} exact />\n      <Route path=\"/notes/:noteId\" component={Notes} exact />\n      <Route component={Error404} />\n    </Switch>\n  </App>\n);\n\nexport default AppRoutes;\n```", "```jsx\nrender() {\n  // Let's see what contains our props object.\n  console.log(this.props); \n\n  // We got the noteId param from match object.\n  const { match: { params: { noteId } } } = this.props;\n  const { notes } = this.state;\n\n  // By default our selectedNote is false\n  let selectedNote = false;\n\n  if (noteId > 0) {\n    // If the note id is higher than 0 then we filter it from our \n    // notes array.\n    selectedNote = notes.filter(\n      note => note.id === Number(noteId)\n    );\n  }\n\n  return (\n    <div className=\"Notes\">\n      <h1>Notes</h1>\n\n      {/* We render our selectedNote or all notes */}\n      {this.renderNotes(selectedNote || notes)}\n    </div>\n  );\n}\n```", "```jsx\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport logo from '../../images/logo.svg';\n\n// We created a component with a simple arrow function.\nconst Header = props => {\n  const {\n    title = 'Welcome to React',\n    url = 'http://localhost:3000'\n  } = props;\n\n  return (\n    <header className=\"App-header\">\n      <a href={url}>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </a>\n      <h1 className=\"App-title\">{title}</h1>\n\n <ul>\n <li><Link to=\"/\">Home</Link></li>\n <li><Link to=\"/about\">About</Link></li>\n <li><Link to=\"/notes\">Notes</Link></li>\n <li><Link to=\"/contact\">Contact</Link></li>\n </ul>\n    </header>\n  );\n};\n\n// Even with Functional Components we are able to validate our PropTypes.\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string\n};\n\nexport default Header;\n```", "```jsx\n.App-header ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n.App-header ul li {\n  display: inline-block;\n  padding: 0 10px;\n}\n\n.App-header ul li a {\n  color: #fff;\n  text-decoration: none;\n}\n\n.App-header ul li a:hover {\n  color: #ccc;\n}\n```"]