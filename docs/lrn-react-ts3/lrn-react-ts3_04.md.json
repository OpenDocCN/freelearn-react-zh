["```jsx\nnpx create-react-app reactshop --typescript\n```", "```jsx\nnpm install react@16.7.0-alpha.0\nnpm install react-dom@16.7.0-alpha.0\n```", "```jsx\ncd reactshop\nnpm install tslint tslint-react tslint-config-prettier --save-dev\n```", "```jsx\n{\n  \"extends\": [\"tslint:recommended\", \"tslint-react\", \"tslint-config-prettier\"],\n  \"rules\": {\n    \"ordered-imports\": false,\n    \"object-literal-sort-keys\": false,\n    \"no-debugger\": false,\n    \"no-console\": false,\n  },\n  \"linterOptions\": {\n    \"exclude\": [\n      \"config/**/*.js\",\n      \"node_modules/**/*.ts\",\n      \"coverage/lcov-report/*.js\"\n    ]\n  }\n}\n```", "```jsx\nnpm install react-router-dom\n```", "```jsx\nnpm install @types/react-router-dom --save-dev\n```", "```jsx\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\n\nReactDOM.render(\n  <div />,\n  document.getElementById('root') as HTMLElement\n);\n```", "```jsx\nexport interface IProduct {\n  id: number;\n  name: string;\n  description: string;\n  price: number;\n}\n\nexport const products: IProduct[] = [\n  {\n    description:\n      \"A collection of navigational components that compose  \n       declaratively with your app\",\n    id: 1,\n    name: \"React Router\",\n    price: 8\n  },\n  {\n    description: \"A library that helps manage state across your app\",\n    id: 2,\n    name: \"React Redux\",\n    price: 12\n  },\n  {\n    description: \"A library that helps you interact with a GraphQL backend\",\n    id: 3,\n    name: \"React Apollo\",\n    price: 12\n  }\n];\n```", "```jsx\nimport * as React from \"react\";\nimport { IProduct, products } from \"./ProductsData\";\n```", "```jsx\ninterface IState {\n  products: IProduct[];\n}\n```", "```jsx\nclass ProductsPage extends React.Component<{}, IState> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      products: []\n    };\n  }\n```", "```jsx\n}\n\nexport default ProductsPage;\n```", "```jsx\npublic componentDidMount() {\n  this.setState({ products });\n}\n```", "```jsx\npublic render() {\n  return (\n    <div className=\"page-container\">\n      <p>\n        Welcome to React Shop where you can get all your tools for ReactJS!\n      </p>\n      <ul className=\"product-list\">\n        {this.state.products.map(product => (\n          <li key={product.id} className=\"product-list-item\">\n           {product.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n```", "```jsx\n.page-container {\n text-align: center;\n padding: 20px;\n font-size: large;\n}\n\n.product-list {\n list-style: none;\n margin: 0;\n padding: 0;\n}\n\n.product-list-item {\n padding: 5px;\n}\n```", "```jsx\nimport * as React from \"react\";\n\nconst AdminPage: React.SFC = () => {\n  return (\n    <div className=\"page-container\">\n      <h1>Admin Panel</h1>\n      <p>You should only be here if you have logged in</p>\n    </div>\n  );\n};\n\nexport default AdminPage;\n```", "```jsx\nimport * as React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport AdminPage from \"./AdminPage\";\nimport ProductsPage from \"./ProductsPage\";\n```", "```jsx\nconst Routes: React.SFC = () => {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/products\" component={ProductsPage} />\n        <Route path=\"/admin\" component={AdminPage} />\n      </div>\n    </Router>\n  );\n};\n\nexport default Routes;\n```", "```jsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Routes from \"./Routes\";\n\nReactDOM.render(<Routes />, document.getElementById(\"root\") as HTMLElement);\n```", "```jsx\nnpm start\n```", "```jsx\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport logo from \"./logo.svg\";\n```", "```jsx\nconst Header: React.SFC = () => {\n  return (\n    <header className=\"header\">\n      <img src={logo} className=\"header-logo\" alt=\"logo\" />\n      <h1 className=\"header-title\">React Shop</h1>\n      <nav>\n        <Link to=\"/products\" className=\"header-\n         link\">Products</Link>\n        <Link to=\"/admin\" className=\"header-link\">Admin</Link>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n```", "```jsx\n.header {\n  text-align: center;\n  background-color: #222;\n  height: 160px;\n  padding: 20px;\n  color: white;\n}\n\n.header-logo {\n  animation: header-logo-spin infinite 20s linear;\n  height: 80px;\n}\n\n@keyframes header-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.header-title {\n  font-size: 1.5em;\n}\n\n.header-link {\n  color: #fff;\n  text-decoration: none;\n  padding: 5px;\n}\n```", "```jsx\nimport Header from \"./Header\";\n```", "```jsx\n<Router>\n  <div>\n    <Header />\n    <Route path=\"/products\" component={ProductsPage} />\n    <Route path=\"/admin\" component={AdminPage} />\n  </div>\n</Router>\n```", "```jsx\nimport * as React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport logo from \"./logo.svg\";\n\nconst Header: React.SFC = () => {\n  return (\n    <header className=\"header\">\n      <img src={logo} className=\"header-logo\" alt=\"logo\" />\n      <h1 className=\"header-title\">React Shop</h1>\n      <nav>\n        <NavLink to=\"/products\" className=\"header-\n         link\">Products</NavLink>\n        <NavLink to=\"/admin\" className=\"header-\n         link\">Admin</NavLink>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n```", "```jsx\n<NavLink to=\"/products\" className=\"header-link\" activeClassName=\"header-link-active\">\n  Products\n</NavLink>\n<NavLink to=\"/admin\" className=\"header-link\" activeClassName=\"header-link-active\">\n  Admin\n</NavLink>\n```", "```jsx\n.header-link-active {\n  border-bottom: #ebebeb solid 2px;\n}\n```", "```jsx\n<Route path=\"/products\" component={ProductsPage} />\n<Route path=\"/products/:id\" component={ProductPage} />\n<Route path=\"/admin\" component={AdminPage} />\n```", "```jsx\nimport * as React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { IProduct, products } from \"./ProductsData\";\n```", "```jsx\ntype Props = RouteComponentProps<{id: string}>;\n```", "```jsx\ninterface IState {\n  product?: IProduct;\n  added: boolean;\n}\n```", "```jsx\nclass ProductPage extends React.Component<Props, IState> {\n  public constructor(props: Props) {\n    super(props);\n    this.state = {\n      added: false\n    };\n  }\n}\n\nexport default ProductPage;\n```", "```jsx\npublic componentDidMount() {\n  if (this.props.match.params.id) {\n    const id: number = parseInt(this.props.match.params.id, 10);\n    const product = products.filter(p => p.id === id)[0];\n\n    this.setState({ product });\n  }\n}\n```", "```jsx\npublic render() {\n  const product = this.state.product;\n  return (\n    <div className=\"page-container\">\n      {product ? (\n        <React.Fragment>\n          <h1>{product.name}</h1>\n          <p>{product.description}</p>\n          <p className=\"product-price\">\n            {new Intl.NumberFormat(\"en-US\", {\n              currency: \"USD\",\n              style: \"currency\"\n            }).format(product.price)}\n          </p>\n          {!this.state.added && (\n            <button onClick={this.handleAddClick}>Add to \n              basket</button>\n          )}\n        </React.Fragment>\n      ) : (\n        <p>Product not found!</p>\n      )}\n    </div>\n  );\n}\n```", "```jsx\nprivate handleAddClick = () => {\n  this.setState({ added: true });\n};\n```", "```jsx\nimport ProductPage from \"./ProductPage\";\n```", "```jsx\n<Route exact={true} path=\"/products\" component={ProductsPage} />\n```", "```jsx\nimport { Link } from \"react-router-dom\";\n```", "```jsx\npublic render() {\n  return (\n    <div className=\"page-container\">\n      <p>\n        Welcome to React Shop where you can get all your tools \n         for ReactJS!\n      </p>\n      <ul className=\"product-list\">\n        {this.state.products.map(product => (\n          <li key={product.id} className=\"product-list-item\">\n            <Link to={`/products/${product.id}`}>{product.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n```", "```jsx\n.product-list-item a {\n  text-decoration: none;\n}\n```", "```jsx\nimport * as React from \"react\";\n\nconst NotFoundPage: React.SFC = () => {\n  return (\n    <div className=\"page-container\">\n      <h1>Sorry, this page cannot be found</h1>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n```", "```jsx\nimport NotFoundPage from \"./NotFoundPage\";\n```", "```jsx\n<Router>\n  <div>\n    <Header />\n    <Route exact={true} path=\"/products\" component={ProductsPage} \n       />\n    <Route path=\"/products/:id\" component={ProductPage} />\n    <Route path=\"/admin\" component={AdminPage} />\n    <Route component={NotFoundPage} />\n  </div>\n</Router>\n```", "```jsx\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n```", "```jsx\n<Switch>\n  <Route exact={true} path=\"/products\" component={ProductsPage} />\n  <Route path=\"/products/:id\" component={ProductPage} />\n  <Route path=\"/admin\" component={AdminPage} />\n  <Route component={NotFoundPage} />\n</Switch>\n```", "```jsx\nimport { BrowserRouter as Router, Redirect,Route, Switch } from \"react-router-dom\";\n```", "```jsx\n<Switch>\n <Redirect exact={true} from=\"/\" to=\"/products\" />\n  <Route exact={true} path=\"/products\" component={ProductsPage} \n   />\n  <Route path=\"/products/:id\" component={ProductPage} />\n  <Route path=\"/admin\" component={AdminPage} />\n  <Route component={NotFoundPage} />\n</Switch>\n```", "```jsx\n<Route path=\"/login\" component={LoginPage} />\n```", "```jsx\nimport * as React from \"react\";\n\nconst LoginPage: React.SFC = () => {\n  return (\n    <div className=\"page-container\">\n      <h1>Login</h1>\n      <p>You need to login ...</p>\n    </div>\n  );\n};\n\nexport default LoginPage;\n```", "```jsx\nimport LoginPage from \"./LoginPage\";\n```", "```jsx\nconst Routes: React.SFC = () => {\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  return (\n    <Router>\n      ...\n    </Router>\n   );\n};\n```", "```jsx\n<Route path=\"/admin\">\n {loggedIn ? <AdminPage /> : <Redirect to=\"/login\" \n />}\n</Route>\n```", "```jsx\nconst [loggedIn, setLoggedIn] = React.useState(true);\n```", "```jsx\ninterface IState {\n  products: IProduct[];\n  search: string;\n}\n```", "```jsx\nimport { RouteComponentProps } from \"react-router-dom\";\n```", "```jsx\nclass ProductsPage extends React.Component<RouteComponentProps, IState> {\n```", "```jsx\npublic constructor(props: RouteComponentProps) {\n  super(props);\n  this.state = {\n    products: [],\n    search: \"\"\n  };\n}\n```", "```jsx\npublic static getDerivedStateFromProps(\n  props: RouteComponentProps,\n  state: IState\n) {\n  const searchParams = new URLSearchParams(props.location.search);\n  const search = searchParams.get(\"search\") || \"\";\n  return {\n    products: state.products,\n    search\n  };\n}\n```", "```jsx\nnpm install url-search-params-polyfill\n```", "```jsx\nimport \"url-search-params-polyfill\";\n```", "```jsx\n<ul className=\"product-list\">\n  {this.state.products.map(product => {\n    if (\n !this.state.search ||\n (this.state.search &&\n product.name\n .toLowerCase()\n .indexOf(this.state.search.toLowerCase()) > -1)\n ) {\n      return (\n        <li key={product.id} className=\"product-list-item\">\n          <Link to={`/products/${product.id}`}>{product.name}\n           </Link>\n        </li>\n      );\n    } else {\n return null;\n }\n  })}\n</ul>\n```", "```jsx\n const [search, setSearch] = React.useState(\"\");\n```", "```jsx\nimport { NavLink, RouteComponentProps, withRouter} from \"react-router-dom\";\nimport \"url-search-params-polyfill\";\n```", "```jsx\nconst Header: React.SFC<RouteComponentProps> = props => { ... }\n```", "```jsx\nconst [search, setSearch] = React.useState(\"\");\nReact.useEffect(() => {\n  const searchParams = new URLSearchParams(props.location.search);\n setSearch(searchParams.get(\"search\") || \"\");\n}, []);\n```", "```jsx\npublic render() {\n  return (\n    <header className=\"header\">\n      <div className=\"search-container\">\n <input\n type=\"search\"\n placeholder=\"search\"\n value={search}\n onChange={handleSearchChange}\n onKeyDown={handleSearchKeydown}\n />\n </div>\n      <img src={logo} className=\"header-logo\" alt=\"logo\" />\n      <h1 className=\"header-title\">React Shop</h1>\n      <nav>\n        ...\n      </nav>\n    </header>\n  );\n}\n```", "```jsx\n.search-container {\n  text-align: right;\n  margin-bottom: -25px;\n}\n```", "```jsx\nconst handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  setSearch(e.currentTarget.value);\n};\n```", "```jsx\nconst handleSearchKeydown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n  if (e.key === \"Enter\") {\n    props.history.push(`/products?search=${search}`);\n  }\n};\n```", "```jsx\nexport default withRouter(Header);\n```", "```jsx\nimport { Prompt, RouteComponentProps } from \"react-router-dom\";\n```", "```jsx\n<div className=\"page-container\">\n  <Prompt when={!this.state.added} message={this.navAwayMessage}\n  />\n  ...\n</div>\n```", "```jsx\nprivate navAwayMessage = () =>\n    \"Are you sure you leave without buying this product?\";\n```", "```jsx\nimport { NavLink, Route, RouteComponentProps } from \"react-router-dom\";\n```", "```jsx\n<div className=\"page-container\">\n  <h1>Admin Panel</h1>\n  <ul className=\"admin-sections>\n <li key=\"users\">\n <NavLink to={`/admin/users`} activeClassName=\"admin-link-\n        active\">\n Users\n </NavLink>\n </li>\n <li key=\"products\">\n <NavLink to={`/admin/products`} activeClassName=\"admin-link-\n       active\">\n Products\n </NavLink>\n </li>\n </ul>\n</div>\n```", "```jsx\n.admin-sections {\n  list-style: none;\n  margin: 0px 0px 20px 0px;\n  padding: 0;\n}\n\n.admin-sections li {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.admin-sections li a {\n  color: #222;\n  text-decoration: none;\n}\n\n.admin-link-active {\n  border-bottom: #6f6e6e solid 2px;\n}\n```", "```jsx\n<div className=\"page-container\">\n  <h1>Admin Panel</h1>\n  <ul className=\"admin-sections\">\n    ...\n  </ul>\n <Route path=\"/admin/users\" component={AdminUsers} />\n <Route path=\"/admin/products\" component={AdminProducts} />\n</div>\n```", "```jsx\nconst AdminProducts: React.SFC = () => {\n  return <div>Some options to administer products</div>;\n};\n```", "```jsx\ninterface IUser {\n  id: number;\n  name: string;\n  isAdmin: boolean;\n}\nconst adminUsersData: IUser[] = [\n  { id: 1, name: \"Fred\", isAdmin: true },\n  { id: 2, name: \"Bob\", isAdmin: false },\n  { id: 3, name: \"Jane\", isAdmin: true }\n];\n```", "```jsx\nconst AdminUsers: React.SFC = () => {\n  return (\n    <div>\n      <ul className=\"admin-sections\">\n        {adminUsersData.map(user => (\n          <li>\n            <NavLink\n              to={`/admin/users/${user.id}`}\n              activeClassName=\"admin-link-active\"\n            >\n              {user.name}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n```", "```jsx\n<div>\n  <ul className=\"admin-sections\">\n    ...\n  </ul>\n <Route path=\"/admin/users/:id\" component={AdminUser} />\n</div>\n```", "```jsx\nconst AdminUser: React.SFC<RouteComponentProps<{ id: string }>> = props => {\n  return null;\n};\n```", "```jsx\nconst AdminUser: React.SFC<RouteComponentProps<{ id: string }>> = props => {\n  let user: IUser;\n if (props.match.params.id) {\n const id: number = parseInt(props.match.params.id, 10);\n user = adminUsersData.filter(u => u.id === id)[0];\n } else {\n return null;\n }\n  return null;\n};\n```", "```jsx\nconst AdminUser: React.SFC<RouteComponentProps<{ id: string }>> = props => {\n  let user: IUser;\n  if (props.match.params.id) {\n    const id: number = parseInt(props.match.params.id, 10);\n    user = adminUsersData.filter(u => u.id === id)[0];\n  } else {\n    return null;\n  }\n  return (\n <div>\n <div>\n <b>Id: </b>\n <span>{user.id.toString()}</span>\n </div>\n <div>\n <b>Is Admin: </b>\n <span>{user.isAdmin.toString()}</span>\n </div>\n </div>\n );\n};\n```", "```jsx\nnpm install react-transition-group\nnpm install @types/react-transition-group --save-dev\n```", "```jsx\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n```", "```jsx\nimport { Redirect, Route, RouteComponentProps, Switch} from \"react-router-dom\";\n```", "```jsx\nconst Routes: React.SFC<RouteComponentProps> = props => {\n  ...\n}\n```", "```jsx\n<TransitionGroup>\n  <CSSTransition\n    key={props.location.key}\n    timeout={500}\n    classNames=\"animate\"\n    >\n    <Switch>\n      ...\n    </Switch>\n  </CSSTransition>\n</TransitionGroup>\n```", "```jsx\n.animate-enter {\n  opacity: 0;\n  z-index: 1;\n}\n.animate-enter-active {\n  opacity: 1;\n  transition: opacity 450ms ease-in;\n}\n.animate-exit {\n  display: none;\n}\n```", "```jsx\nconst RoutesWrap: React.SFC = () => {\n return (\n <Router>\n <Route component={Routes} />\n </Router>\n );\n};\n\nclass Routes extends React.Component<RouteComponentProps, IState> { \n  ...\n}\n\nexport default RoutesWrap;\n```", "```jsx\npublic render() {\n  return (\n    <div>\n      <Header />\n      <TransitionGroup>\n        ...\n      </TransitionGroup>\n    </div>\n  );\n}\n```", "```jsx\nimport { Suspense } from \"react\";\n```", "```jsx\nconst AdminPage = React.lazy(() => import(\"./AdminPage\"));\n```", "```jsx\n\"compilerOptions\": { \n  \"lib\": [\"es6\", \"dom\"],\n  ...\n}\n```", "```jsx\n<Route path=\"/admin\">\n  {loggedIn ? (\n    <Suspense fallback={<div className=\"page-container\">Loading...</div>}>\n      <AdminPage />\n    </Suspense>\n  ) : (\n    <Redirect to=\"/login\" />\n  )}\n</Route>\n```", "```jsx\n<Route path=\"/customers\" component={CustomersPage} />\n```"]