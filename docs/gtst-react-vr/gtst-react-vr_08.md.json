["```jsx\n class TurningPot extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        yRotation: new Animated.Value(0),\n      };\n    }\n```", "```jsx\n   componentDidMount() {\n        Animated.timing( \n          this.state.yRotation, // Animate variable `yRotation`\n          {\n            duration: 10000,    // Time\n            toValue: 360,       // Spin around a full circle\n          }\n        ).start();              // Start the animation\n      } \n```", "```jsx\n    render() {\n      return (\n        <Animated.View // Base: Image, Text, View\n          style={{\n            flex: 1,\n            width: 1,\n            height: 1,\n            transform: [ \n              {rotateY: this.state.yRotation}, // Map yRotation to rotateY\n            ]\n          }}\n          >\n          <Model\n          source={{\n              obj: asset('teapot2.obj'),\n              mtl: asset('teapot2_Mats.mtl'),\n              }}\n              lit\n              style={{\n                  transform: [{ translate: [0, -0.7, -5.1 ] }]\n                  }}\n          />\n      </Animated.View>\n      );\n    }\n\n  }\n```", "```jsx\n render() {\n      return (\n        <Animated.View \n...\n          {rotateY: this.state.yRotation}, // Map yRotation to rotateY\n...\n          <Model\n...\n                  transform: [{ translate: [0, -0.7, -5.1 ] }]\n...\n      </Animated.View>\n      );\n```", "```jsx\n    render() {\n      return (\n        <Animated.View // Base: Image, Text, View\n          style={{\n            transform: [ \n {translate: [0, -0.7, -5.1 ] },\n {rotateY: this.state.yRotation}, // Map `yRotation' to rotateY \n            ]\n          }}\n          >\n          <Model\n          source={{\n              obj: asset('teapot2.obj'),\n              mtl: asset('teapot2_Mats.mtl'),\n              }}\n              lit\n              // we comment this out because we translate the view above\n // style={{\n              // transform: [{ translate: [0, -0.7, -5.1 ] }]\n              // }}\n          />\n      </Animated.View>\n      );\n    }\n\n```", "```jsx\n  class TurningPot extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {yRotation: 0};\n      this.lastUpdate = Date.now();\n      this.rotate = this.rotate.bind(this); \n    }\n```", "```jsx\n    rotate() { //custom function, called when it is time to rotate\n        const now = Date.now();\n        const delta = now - this.lastUpdate;\n        this.lastUpdate = now;\n        console.log(\"Spinning the pot\");\n\n        //note: the 20 is the rotation speed; bad form to\n        //hard code it- this is for instructional purposes only\n        this.setState({yRotation: this.state.yRotation + delta / 20} );\n        //requestAnimationFrame calls the routine specified, not a variable\n        this.frameHandle = requestAnimationFrame(this.rotate);\n      } \n```", "```jsx\n   componentDidMount() { //do the first rotation\n        this.rotate();\n    } \n    componentWillUnmount() { //Important clean up functions\n        if (this.frameHandle) {\n          cancelAnimationFrame(this.frameHandle);\n          this.frameHandle = null;\n        }\n      } \n```", "```jsx\nimport React, {Component } from 'react';\n\nimport {\n  Animated,\n  AppRegistry,\n  asset,\n  AmbientLight,\n  Box,\n  DirectionalLight,\n  Div,\n  Model,\n  Pano,\n  Plane,\n  Text,\n  Vector,\n  View,\n  } from 'react-vr';\n\n  class TurningPot extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {yRotation: 0};\n      this.lastUpdate = Date.now();\n      this.rotate = this.rotate.bind(this); \n    }\n    rotate() { //custom function, called when it is time to rotate\n        const now = Date.now();\n        const delta = now - this.lastUpdate;\n        const potSpeed = 20;\n        this.lastUpdate = now;\n        this.setState({yRotation: this.state.yRotation + delta / potSpeed} );\n        //requestAnimationFrame calls the routine specified, not a variable\n        this.frameHandle = requestAnimationFrame(this.rotate);\n      } \n    componentDidMount() { //do the first rotation\n        this.rotate();\n    } \n    componentWillUnmount() { //Important clean up functions\n        if (this.frameHandle) {\n          cancelAnimationFrame(this.frameHandle);\n          this.frameHandle = null;\n        }\n      } \n    render() {\n      return (\n        <Animated.View // Base: Image, Text, View\n          style={{\n            transform: [ // `transform` is an ordered array\n              {translate: [0, -0.5, -5.1 ] },\n              {rotateY: this.state.yRotation}, // Map `yRotation' to rotateY \n            ]\n          }}\n          >\n          <Model\n          source={{\n              obj: asset('teapot2.obj'),\n              mtl: asset('teapot2_Mats.mtl'),\n              }}\n              lit\n              //style={{\n              // transform: [{ translate: [0, -0.7, -5.1 ] }]\n              // }}\n          />\n      </Animated.View>\n      );\n    }\n\n  }\n\nclass Pedestal extends Component {\n    render() {\n        return (\n          <View>\n          <Box \n          dimWidth={.4}\n          dimDepth={.4}\n          dimHeight={.5}\n          lit\n          texture={asset('travertine_striata_vein_cut_honed_filled_Base_Color.jpg')}\n          style={{\n            transform: [ { translate: [ this.props.MyX, -1.4, this.props.MyZ] } ]\n            }}\n        />\n          <Box \n          dimWidth={.5}\n          dimDepth={.5}\n          dimHeight={.1}\n          lit\n          texture={asset('travertine_striata_vein_cut_honed_filled_Base_Color.jpg')}\n          style={{\n            transform: [ { translate: [ this.props.MyX, -1.1, this.props.MyZ] } ]\n            }}\n        />\n          <Box \n          dimWidth={.5}\n          dimDepth={.5}\n          dimHeight={.1}\n          lit\n          texture={asset('travertine_striata_vein_cut_honed_filled_Base_Color.jpg')}\n          style={{\n            transform: [ { translate: [ this.props.MyX, -1.7, this.props.MyZ] } ]\n            }}\n          />\n     </View>\n    )\n     }\n     }\n\n         class Platform extends Component {\n             render() {\n                 return ( \n                    <Model\n                    source={{\n                        obj: asset('DeckPlate_v1.obj'),\n                        mtl: asset('DeckPlate_v1_AllMats.mtl'),\n                        }}\n                        lit\n                        style={{\n                            transform: [ {\n                            translate: [ this.props.MyX, -1.8, this.props.MyZ]\n                        }] }}\n                    /> \n\n    );\n          }\n         }\n\nexport default class SpaceGallery extends React.Component {\n    render() {\n        return (\n          <View>\n            <Pano source={asset('BabbageStation_v6_r5.jpg')}/>\n            <AmbientLight\n\n    intensity = {.3}\n\n    />\n    <DirectionalLight\n    intensity = {.7}\n    style={{\n        transform:[{\n            rotateZ: -45\n        }]\n    }}\n         /> \n         <Platform MyX='0' MyZ='-5.1'/>\n         <Platform MyX='0' MyZ='0'/>\n         <Platform MyX='0' MyZ='5.1'/>\n         <Platform MyX='5.1' MyZ='-5.1'/>\n         <Platform MyX='5.1' MyZ='0'/>\n         <Platform MyX='5.1' MyZ='5.1'/>\n         <Platform MyX='-5.1' MyZ='-5.1'/>\n         <Platform MyX='-5.1' MyZ='0'/>\n         <Platform MyX='-5.1' MyZ='5.1'/>\n\n         <Pedestal MyX='0' MyZ='-5.1'/>\n         <Pedestal MyX='0' MyZ='5.1'/>\n         <Pedestal MyX='5.1' MyZ='-5.1'/>\n\n         <Pedestal MyX='5.1' MyZ='5.1'/>\n         <Pedestal MyX='-5.1' MyZ='-5.1'/>\n         <Pedestal MyX='-5.1' MyZ='0'/>\n         <Pedestal MyX='-5.1' MyZ='5.1'/>\n\n         <Model\n            source={{\n                obj: asset('teapot2.obj'),\n                mtl: asset('teapot2_Mats.mtl'),\n                }}\n                lit\n                style={{\n                    transform: [{ translate: [ -5.1, -1, -5.1 ] }]\n                    }}\n            />\n\n        <Text\n            style={{\n                backgroundColor: '#777879',\n                fontSize: 0.1,\n                fontWeight: '400',\n                layoutOrigin: [0.0, 0.5],\n                paddingLeft: 0.2,\n                paddingRight: 0.2,\n                textAlign: 'center',\n                textAlignVertical: 'center',\n                transform: [ \n                    {translate: [-5.2, -1.4, -4.6] }]\n                    }}>\n            Utah Teapot\n        </Text>\n        <Text\n            style={{\n                backgroundColor: '#777879',\n                fontSize: 0.1,\n                fontWeight: '400',\n                layoutOrigin: [0.0, 0.5],\n                paddingLeft: 0.2,\n                paddingRight: 0.2,\n                textAlign: 'center',\n                textAlignVertical: 'center',\n                transform: [ \n                    {translate: [0, -1.3, -4.6] }]\n                    }}>\n            Spinning Pot\n        </Text> \n\n         <Text\n         style={{\n             backgroundColor: '#777879',\n             fontSize: 0.2,\n             fontWeight: '400',\n             layoutOrigin: [0.0, 0.5],\n             paddingLeft: 0.2,\n             paddingRight: 0.2,\n             textAlign: 'center',\n             textAlignVertical: 'center',\n             transform: [ \n                {translate: [0, 1, -6] }]\n         }}>\n    Space Gallery\n  </Text>\n  <TurningPot/>\n\n</View>\n);\n    }\n};\n\nAppRegistry.registerComponent('SpaceGallery', () => SpaceGallery);\n```", "```jsx\n <View>\n    <Model\n       source={{\n        obj: asset('teapot2.obj'),\n        mtl: asset('teapot2_Mats.mtl'),\n        }}\n        lit\n        style={{\n            transform: [{ translate: [ -5.1, -1, -5.1 ] }]\n            }}\n    >\n    </Model>\n <Sound \n        loop\n        source={{wav: asset('sounds/211491__abrez__boiling-water.mp3') }}\n        />\n    </View>\n```", "```jsx\n<View\n    style={{\n transform: [{ translate: [-5.1, -1, -5.1] }]\n }}\n>\n    <Model\n        source={{\n            obj: asset('teapot2.obj'),\n            mtl: asset('teapot2_Mats.mtl'),\n        }}\n        lit\n    >\n    </Model>\n    <Sound\n        loop\n        source={{ wav: asset('sounds/211491__abrez__boiling-water.mp3') }} />\n</View>\n```"]