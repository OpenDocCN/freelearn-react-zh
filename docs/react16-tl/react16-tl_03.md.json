["```jsx\ncd my-react-app/ \n```", "```jsx\nnpm start \n```", "```jsx\nCompiled successfully!\n\nYou can now view my-react-app in the browser.\n\n  Local:            http://localhost:3000/\n  On Your Network:  http://192.168.86.101:3000/\n\nNote that the development build is not optimized.\nTo create a production build, use npm run build. \n```", "```jsx\nimport React from 'react'; \n\nconst Heading = ({ children }) => ( \n  <h1>{children}</h1> \n); \n\nexport default Heading; \n```", "```jsx\nimport React, { Component } from 'react'; \nimport './App.css'; \nimport Heading from './Heading';\n\nclass App extends Component { \n  render() { \n    return ( \n      <div className=\"App\"> \n        <Heading> \n          My App \n        </Heading> \n      </div> \n    ); \n  } \n} \n\nexport default App; \n```", "```jsx\n<Heading> \n  My App Heading \n</Heading> \n```", "```jsx\nimport React, { Component } from 'react'; \n\nclass Button extends Component { \n  style = {} \n\n  state = { \n    count: 0 \n  } \n\n  onClick = () => this.setState(state => ({ \n    count: state.count + 1 \n  })); \n\n  render() { \n    const { count } = this.state; \n    const { \n      onClick, \n      style \n    } = this; \n\n    return ( \n      <button {...{ onClick, style }}> \n        Clicks: {count} \n      </button> \n    ); \n  } \n} \n\nexport default Button;\n```", "```jsx\nimport React, { Component } from 'react'; \nimport './App.css'; \nimport Heading from './Heading'; \nimport Button from './Button'; \n\nclass App extends Component { \n  render() { \n    return ( \n      <div className=\"App\"> \n        <Heading> \n          My App Heading \n        </Heading> \n        <Button/> \n      </div> \n    ); \n  } \n} \n\nexport default App; \n```", "```jsx\nclass Button extends Component { \n  style = { fontWeight: 'bold' } \n\n  ... \n\n  render() { \n    const { count } = this.state; \n    const { \n      onClick, \n      style \n    } = this; \n\n    return ( \n      <button {...{ onClick, style }}> \n        Clicks: {count} \n      </button> \n    ); \n  } \n} \n\nexport default Button; \n```", "```jsx\nnpm run eject\n```", "```jsx\nnpm install react-hot-loader --save-dev\n```", "```jsx\n      require.resolve('react-dev-utils/webpackHotDevClient'), \n```", "```jsx\n      require.resolve('webpack-dev-server/client') + '?/', \n      require.resolve('webpack/hot/dev-server'), \n```", "```jsx\n      { \n        test: /\\.(js|jsx|mjs)$/, \n        include: paths.appSrc, \n        loader: require.resolve('babel-loader'), \n        options: { \n          cacheDirectory: true, \n        }, \n      }\n```", "```jsx\n      { \n        test: /\\.(js|jsx|mjs)$/, \n        include: paths.appSrc, \n        use: [ \n          require.resolve('react-hot-loader/webpack'), \n          { \n            loader: require.resolve('babel-loader'), \n            options: { \n              cacheDirectory: true, \n            }, \n          } \n        ] \n      }, \n```", "```jsx\nimport React from 'react'; \nimport ReactDOM from 'react-dom'; \nimport './index.css'; \nimport App from './App'; \nimport registerServiceWorker from './registerServiceWorker'; \n\nReactDOM.render(<App />, document.getElementById('root')); \nregisterServiceWorker(); \n```", "```jsx\nimport 'react-hot-loader/patch'; \nimport React from 'react'; \nimport ReactDOM from 'react-dom'; \nimport { AppContainer } from 'react-hot-loader'; \n\nimport './index.css'; \nimport App from './App'; \nimport registerServiceWorker from './registerServiceWorker'; \n\nconst render = Component => { \n  ReactDOM.render( \n    <AppContainer> \n      <Component /> \n    </AppContainer>, \n    document.getElementById('root') \n  ) \n};\n```", "```jsx\nrender(App); \n\nif (module.hot) { \n  module.hot.accept('./App', () => { \n    render(App); \n  }); \n} \n\nregisterServiceWorker(); \n```", "```jsx\nconst style = { \n  fontWeight: 'bold' \n}; \n```"]