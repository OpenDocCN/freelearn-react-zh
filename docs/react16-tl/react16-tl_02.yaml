- en: Efficiently Bootstrapping React Applications with Create React App
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Create React App高效引导React应用程序
- en: 'The first React tool you''ll learn about in this book is *Create React App*.
    It is a command-line utility that helps you, surprisingly, create a React application.
    This might sound like something that you shouldn''t need much help doing, but
    when you use this tool, there''s a lot of configuration that you no longer have
    to think about. In this chapter, you''ll learn:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中您将学习的第一个React工具是*Create React App*。它是一个命令行实用程序，帮助您惊人地创建一个React应用程序。这可能听起来像是您不需要太多帮助的事情，但当您使用这个工具时，您不再需要考虑很多配置。在本章中，您将学习：
- en: Installing the *Create React App* tool on your system
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在系统上安装*Create React App*工具
- en: Bootstraping the creation of your React app
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引导创建您的React应用程序
- en: What packages are installed when you create a new application
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建新应用程序时安装了哪些包
- en: The directory organization and files created with your application
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序的目录组织和文件
- en: Installing Create React App
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Create React App
- en: 'The first step is installing *Create React App*, which is an npm package: `create-react-app`.
    This package should be installed globally because it installs a command on your
    system that''s used to create your React projects. In other words, `create-react-app`
    isn''t actually part of your React project—it''s used to initialize your React
    project.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是安装*Create React App*，这是一个npm包：`create-react-app`。这个包应该全局安装，因为它在您的系统上安装了一个用于创建React项目的命令。换句话说，`create-react-app`实际上并不是您的React项目的一部分，它用于初始化您的React项目。
- en: 'Here''s how you can install *Create React App* globally:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是您可以全局安装*Create React App*的方法：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Notice the `-g` flag in the command—this makes sure that the `create-react-app`
    command is installed globally. Once the installation is complete, you can make
    sure that the command is good to go by running the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 注意命令中的`-g`标志—这确保`create-react-app`命令被全局安装。安装完成后，您可以通过运行以下命令来确保该命令可以正常运行：
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now you're ready to use this tool to create your first React app!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经准备好使用这个工具来创建您的第一个React应用程序了！
- en: Creating your first app
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建您的第一个应用程序
- en: We'll spend the remainder of the chapter creating your first React application
    with *Create React App*. Don't worry, this is super easy to do, so it'll be a
    short chapter. The goal of *Create React App* is to start building features for
    your application as soon as possible. You cannot do this if you're sinking time
    into configuring your system.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章的剩余部分使用*Create React App*创建您的第一个React应用程序。别担心，这很容易做到，所以这将是一个简短的章节。*Create
    React App*的目标是尽快开始为您的应用程序构建功能。如果您花费时间配置系统，就无法做到这一点。
- en: '*Create React App* provides what''s called a **zero configuration app**. This
    means that we supply the name of the app, then it''ll go install the dependencies
    that we need, and create the boilerplate directory structure and files for us.
    Let''s get started.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*Create React App*提供了所谓的**零配置应用程序**。这意味着我们提供应用程序的名称，然后它将安装我们需要的依赖项，并为我们创建样板目录结构和文件。让我们开始吧。'
- en: Specifying a project name
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 指定项目名称
- en: 'The only configuration value that you need to supply to *Create React App*
    so that it can bootstrap your project is the name. This is specified as an argument
    to the `create-react-app` command:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要向*Create React App*提供的唯一配置值是名称，以便它可以引导您的项目。这作为参数传递给`create-react-app`命令：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This will create a `my-react-app` directory in your current directory, if it
    doesn''t already exist. If it already exists, the directory will be used. This
    is where you''ll find everything to do with your application. Once the directory
    is created, it installs package dependencies and creates project directories and
    files. Here''s a shortened version of what the `create-react-app` command output
    might look like:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果当前目录中不存在`my-react-app`目录，它将在其中创建一个，如果已经存在，则将使用该目录。这是你将找到与你的应用程序有关的一切。一旦目录创建完成，它将安装包依赖项并创建项目目录和文件。这是`create-react-app`命令输出的缩短版本可能看起来像：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This output shows you a number of interesting things. First, it shows which
    things were installed. Second, it shows you the commands available for you to
    run in your project. You'll learn how to use each of these commands throughout
    this book, starting with the next chapter. For now, let's take a look at the project
    that you just created and see what it contains.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这个输出向你展示了一些有趣的东西。首先，它显示了安装了哪些东西。其次，它向你展示了在你的项目中可以运行的命令。你将在本书的后续章节中学习如何使用这些命令。现在，让我们看看你刚刚创建的项目，并看看它包含了什么。
- en: Automatic dependency handling
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动依赖处理
- en: 'Let''s take a look at the dependencies that were installed as part of the bootstrapping
    process. You can list your projects packages by running `npm ls --depth=0`. The
    `--depth=0` option means that you only want to see the top-level dependencies:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看在引导过程中安装的依赖项。你可以通过运行`npm ls --depth=0`来列出你的项目包。`--depth=0`选项意味着你只想看到顶层依赖项：
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: There isn't much here, just the two core React libraries that you need, and
    something called `react-scripts`. This latter package contains the scripts that
    you'll want to run with this project such as starting the development server and
    making a production build.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这里没有太多东西，只有你需要的两个核心React库，还有一个叫做`react-scripts`的东西。后者包含了你想要在这个项目中运行的脚本，比如启动开发服务器和生成生产版本。
- en: 'Next, let''s look at the `package.json` file that was created by *Create React
    App*:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看*Create React App*创建的`package.json`文件：
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Here is where dependencies are tracked, so that you can install your app on
    different machines that don't have *Create React App* on them. You can see that
    the `dependencies` section matches the output of the `npm ls --depth=0` command.
    The `scripts` section specifies the commands available to run with this project.
    These are all `react-scripts` commands—`react-scripts` is installed as a dependency.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是跟踪依赖关系的地方，这样你就可以在没有*Create React App*的不同机器上安装你的应用程序。你可以看到`dependencies`部分与`npm
    ls --depth=0`命令的输出相匹配。`scripts`部分指定了在这个项目中可用的命令。这些都是`react-scripts`命令——`react-scripts`被安装为一个依赖项。
- en: One of the more powerful aspects of *Create React App* is that it simplifies
    this `package.json` configuration for you. Instead of having dozens of dependencies
    that you have to maintain yourself, you have less than a handful of dependencies.
    The `react-scripts` package handles the dynamic configuration aspect for you.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*Create React App*的一个更强大的方面是，它为你简化了`package.json`的配置。你不再需要维护几十个依赖项，而是只有少数几个依赖项。`react-scripts`包为你处理了动态配置方面。'
- en: For example, when you run a React development server, you typically have to
    spend a lot of time messing around with Webpack configuration and making sure
    that the appropriate Babel plugins are installed. Since `react-scripts` creates
    a standard configuration for these things on the fly, you don't have to worry
    about it. Instead, you can start writing application code write away.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当您运行React开发服务器时，通常需要花费大量时间来处理Webpack配置，并确保适当的Babel插件已安装。由于`react-scripts`会动态创建这些内容的标准配置，您就不必担心了。相反，您可以立即开始编写应用程序代码。
- en: 'The `react-scripts` package also handles much of the dependencies that you
    would normally have to handle yourself. You can use `npm ls --depth=1` to get
    an idea of what dependencies this package takes care of for you:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`react-scripts`包还处理了许多通常需要自己处理的依赖关系。您可以使用`npm ls --depth=1`来了解这个包为您处理了哪些依赖关系：'
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Typically, you wouldn't interact with most of these packages in your application
    code. When you have to actively manage dependencies that you don't directly use,
    it can feel like a huge time sink. *Create React App* helps squash this feeling.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，您不会在应用程序代码中与大多数这些包进行交互。当您不得不积极管理自己没有直接使用的依赖关系时，会感觉像是在浪费大量时间。*Create React
    App*有助于消除这种感觉。
- en: Directory structure
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目录结构
- en: At this point, you have an understanding of the dependencies that are installed
    as part of your project when you create it using *Create React App*. In addition
    to the dependencies, *Create React App* sets up some other boilerplate files and
    directories. Let's go over these quickly so that you can start coding in the following
    chapter.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经了解了在使用*Create React App*创建项目时作为其一部分安装的依赖关系。除了依赖关系外，*Create React App*还设置了一些其他样板文件和目录。让我们快速地过一遍这些，这样您就可以在下一章开始编码了。
- en: Top-level files
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 顶层文件
- en: 'There are only two files created in the top level of your application that
    you need to worry about:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的应用程序的顶层只创建了两个文件，您需要关注：
- en: '`README.md`: This Markdown file is used to describe the project. It''s a great
    place to explain why your project exists and how people can get started with it,
    especially if you plan on making your app a GitHub project.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`README.md`：这个Markdown文件用于描述项目。如果您计划将您的应用程序作为GitHub项目，这是一个很好的地方来解释您的项目存在的原因以及人们如何开始使用它。'
- en: '`package.json`: This file is used to configure all aspects of distributing
    your application as an npm package. For example, this is where you can add new
    dependencies or remove obsolete dependencies. This file is key if you plan on
    publishing your app to the main npm registry.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package.json`：这个文件用于配置分发您的应用程序作为npm包的所有方面。例如，这是您可以添加新依赖项或删除过时依赖项的地方。如果您计划将您的应用程序发布到主npm注册表，这个文件就非常重要。'
- en: Static assets
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 静态资产
- en: '*Create React App* creates a public directory for you with a few files in it.
    This is where static application assets go. It contains the following by default:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '*Create React App*为您创建了一个public目录，并在其中放置了一些文件。这是静态应用程序资产的存放位置。默认情况下，它包含以下内容：'
- en: '`favion.ico`: This is the React logo that gets displayed in browser tabs. You''ll
    want to replace this with something representative of your application before
    you ship.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`favion.ico`：这是在浏览器标签中显示的React标志。在发布之前，您会希望用代表您的应用程序的东西替换它。'
- en: '`index.html`: This is the HTML file that''s served to browsers and the entry
    point of your React application.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index.html`：这是提供给浏览器的HTML文件，也是您的React应用程序的入口点。'
- en: '`manifest.json`: This is used by some mobile operating systems when the application
    is added to the home screen.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`manifest.json`：当应用程序添加到主屏幕时，一些移动操作系统会使用这个文件。'
- en: Source code
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 源代码
- en: 'The `src` directory created by `create-react-app` is the most important part
    of your application. This is where any React components you create will live.
    Out of the box, this directory has some source files in it to get you on your
    way, though you''ll obviously replace the majority of them as you move forward.
    Here''s what you''ll find by default:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`src`目录是由`create-react-app`创建的应用程序中最重要的部分。这是你创建的任何React组件的所在地。默认情况下，这个目录中有一些源文件，可以让你开始，尽管随着你的进展，你显然会替换大部分文件。以下是默认情况下你会找到的内容：'
- en: '`App.css`: This defines some simple CSS to style the `App` component'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`App.css`：这定义了一些简单的CSS来为`App`组件设置样式'
- en: '`App.js`: This is the default component that renders the application HTML'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`App.js`：这是渲染应用程序HTML的默认组件'
- en: '`App.test.js`: This is a basic test for the `App` component'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`App.test.js`：这是`App`组件的基本测试'
- en: '`index.css`: This defines application-wide styles'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index.css`：这定义了应用程序范围的样式'
- en: '`index.js`: This is the entry point into your application—renders the `App`
    component'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index.js`：这是你的应用程序的入口点—渲染`App`组件'
- en: '`logo.svg`: An animated React logo that''s rendered by the `App` component'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`logo.svg`：一个由`App`组件渲染的动画React标志'
- en: '`registerServiceWorker.js`: In production builds, this enables loading components
    from an offline cache'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`registerServiceWorker.js`：在生产构建中，这将使组件从离线缓存中加载'
- en: There are two benefits to having these default source files created for you.
    First, you can quickly start the application to make sure everything is working
    and that you didn't make any basic mistakes. Second, it sets a basic pattern for
    you to follow with your components. Throughout this book, you'll see how applying
    patterns to components actually aids with tooling.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 有这些默认源文件为你创建有两个好处。首先，你可以快速启动应用程序，确保一切正常运行，而且你没有犯任何基本错误。其次，它为你的组件设定了一个基本模式。在本书中，你将看到如何将模式应用到组件实际上有助于工具化。
- en: Summary
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: In this chapter, you learned how to install the *Create React App* tool on your
    system. *Create React App* is the tool of choice for bootstrapping modern React
    applications. The goal of *Create React App* is to have developers go from nothing
    to creating React components in minimal time.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学会了如何在你的系统上安装*Create React App*工具。*Create React App*是启动现代React应用程序的首选工具。*Create
    React App*的目标是让开发人员在最短的时间内从零开始创建React组件。
- en: Once this tool was installed, you created your first React app using it. The
    only piece of configuration you had to provide was the application name. Once
    the tool finished installing dependencies and creating boilerplate files and directories,
    you were ready to start writing code.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了这个工具后，你使用它创建了你的第一个React应用程序。你需要提供的唯一配置是应用程序名称。一旦工具完成安装依赖项并创建样板文件和目录，你就可以开始编写代码了。
- en: Then, we looked at `react-scripts` and the dependencies that this package takes
    care of for you. You were then taken on a whirlwind tour of the overall structure
    of the application that was created for you.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们看了`react-scripts`和这个包所处理的依赖项。然后，你被带领快速浏览了为你创建的应用程序的整体结构。
- en: In the following chapter, we'll start developing some React components. To do
    this, we'll fire up the development server. You'll also learn how to get up and
    running with a `create-react-app` development environment.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将开始开发一些React组件。为此，我们将启动开发服务器。你还将学习如何使用`create-react-app`开发环境快速上手。
