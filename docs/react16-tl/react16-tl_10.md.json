["```jsx\nnpm install gatsby-cli -g  \n```", "```jsx\ngatsby new your-first-gatsby-site\n```", "```jsx\ngatsby new your-first-gatsby-site https://github.com/gatsbyjs/gatsby-starter-default\n```", "```jsx\ninfo Creating new site from git: https://github.com/gatsbyjs/gatsby-starter-default.git\nCloning into 'your-first-gatsby-site'...\n```", "```jsx\nsuccess Created starter directory layout\ninfo Installing packages...\nadded 1540 packages from 888 contributors in 29.528s  \n```", "```jsx\ncd your-first-gatsby-site\ngatsby develop\n```", "```jsx\nsuccess delete html and css files from previous builds - 0.007 s\nsuccess open and validate gatsby-config.js - 0.004 s\nsuccess copy gatsby files - 0.014 s\nsuccess onPreBootstrap - 0.011 s\nsuccess source and transform nodes - 0.022 s\nsuccess building schema - 0.070 s\nsuccess createLayouts - 0.020 s\nsuccess createPages - 0.000 s\nsuccess createPagesStatefully - 0.014 s\nsuccess onPreExtractQueries - 0.000 s\nsuccess update schema - 0.044 s\nsuccess extract queries from components - 0.042 s\nsuccess run graphql queries - 0.024 s\nsuccess write out page data - 0.003 s\nsuccess write out redirect data - 0.001 s\nsuccess onPostBootstrap - 0.001 s\n\ninfo bootstrap finished - 1.901 s\n\nDONE  Compiled successfully in 3307ms                                          \n```", "```jsx\nWAIT  Compiling... \n\nDONE  Compiled successfully in 94ms \n```", "```jsx\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 gatsby-browser.js\n\u251c\u2500\u2500 gatsby-config.js\n\u251c\u2500\u2500 gatsby-node.js\n\u251c\u2500\u2500 gatsby-ssr.js\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 public\n\u2502   \u251c\u2500\u2500 index.html\n\u2502   \u251c\u2500\u2500 render-page.js.map\n\u2502   \u2514\u2500\u2500 static\n\u2514\u2500\u2500 src\n \u251c\u2500\u2500 components\n \u2502   \u2514\u2500\u2500 Header\n```", "```jsx\n \u2502       \u2514\u2500\u2500 index.js\n \u251c\u2500\u2500 layouts\n \u2502   \u251c\u2500\u2500 index.css\n \u2502   \u2514\u2500\u2500 index.js\n \u2514\u2500\u2500 pages\n \u251c\u2500\u2500 404.js\n \u251c\u2500\u2500 index.js\n \u2514\u2500\u2500 page-2.js  \n```", "```jsx\nimport React from 'react' \nimport Link from 'gatsby-link' \n\nconst Header = () => ( \n  <div \n    style={{ \n      background: 'rebeccapurple', \n      marginBottom: '1.45rem', \n    }} \n  > \n    <div \n      style={{ \n        margin: '0 auto', \n        maxWidth: 960, \n        padding: '1.45rem 1.0875rem', \n      }} \n    > \n      <h1 style={{ margin: 0 }}> \n        <Link \n          to=\"/\" \n          style={{ \n            color: 'white', \n            textDecoration: 'none', \n          }} \n        > \n          Gatsby \n        </Link> \n      </h1> \n    </div> \n  </div> \n) \n\nexport default Header \n```", "```jsx\nimport React from 'react' \nimport PropTypes from 'prop-types' \nimport Helmet from 'react-helmet' \n\nimport Header from '../components/Header' \nimport './index.css' \n\nconst TemplateWrapper = ({ children }) => ( \n  <div> \n    <Helmet \n      title=\"Gatsby Default Starter\" \n      meta={[ \n        { name: 'description', content: 'Sample' }, \n        { name: 'keywords', content: 'sample, something' }, \n      ]} \n    /> \n    <Header /> \n    <div \n      style={{ \n        margin: '0 auto', \n        maxWidth: 960, \n        padding: '0px 1.0875rem 1.45rem', \n        paddingTop: 0, \n      }} \n    > \n      {children()} \n    </div> \n  </div> \n) \n\nTemplateWrapper.propTypes = { \n  children: PropTypes.func, \n} \n\nexport default TemplateWrapper \n```", "```jsx\nimport React from 'react' \nimport Link from 'gatsby-link' \n\nconst IndexPage = () => ( \n  <div> \n    <h1>Hi people</h1> \n    <p>Welcome to your new Gatsby site.</p> \n    <p>Now go build something great.</p> \n    <Link to=\"/page-2/\">Go to page 2</Link> \n  </div> \n) \n\nexport default IndexPage \n```", "```jsx\nimport React from 'react' \nimport Link from 'gatsby-link' \n\nconst SecondPage = () => ( \n  <div> \n    <h1>Hi from the second page</h1> \n    <p>Welcome to page 2</p> \n    <Link to=\"/\">Go back to the homepage</Link> \n  </div> \n)\nexport default SecondPage \n```", "```jsx\nnpm install --save gatsby-source-filesystem\n```", "```jsx\nplugins: [ \n  // Other plugins... \n  { \n    resolve: 'gatsby-source-filesystem', \n    options: { \n      name: 'data', \n      path: '${__dirname}/src/data/', \n    }, \n  }, \n] \n```", "```jsx\n[ \n  { \"topic\": \"global\", \"title\": \"Global Article 1\" }, \n  { \"topic\": \"global\", \"title\": \"Global Article 2\" }, \n  { \"topic\": \"local\", \"title\": \"Local Article 1\" }, \n  { \"topic\": \"local\", \"title\": \"Local Article 2\" }, \n  { \"topic\": \"sports\", \"title\": \"Sports Article 1\" }, \n  { \"topic\": \"sports\", \"title\": \"Sports Article 2\" } \n]\n```", "```jsx\nnpm install --save gatsby-transformer-json\n```", "```jsx\nplugins: [ \n  // Other plugins... \n  'gatsby-transformer-json', \n], \n```", "```jsx\nimport React from 'react' \nimport Link from 'gatsby-link' \n\nexport default ({ data: { allArticlesJson: { edges } } }) => ( \n  <div>\n    <h1>Global Articles</h1> \n    <Link to=\"/\">Home</Link> \n    <ul> \n      {edges.map(({ node: { title } }) => ( \n        <li key={title}>{title}</li> \n      ))} \n    </ul> \n  </div> \n) \n\nexport const query = graphql' \n  query GlobalArticles { \n    allArticlesJson(filter: { topic: { eq: \"global\" } }) { \n      edges { \n        node { \n          topic \n          title \n        } \n      } \n    } \n  } \n'\n```", "```jsx\nimport React from 'react' \nimport Link from 'gatsby-link' \n\nexport default ({ data: { allArticlesJson: { edges } } }) => ( \n  <div> \n    <h1>Local Articles</h1> \n    <Link to=\"/\">Home</Link> \n    <ul> \n      {edges.map(({ node: { title } }) => ( \n        <li key={title}>{title}</li> \n      ))} \n    </ul> \n  </div> \n)\nexport const query = graphql' \n  query LocalArticles { \n    allArticlesJson(filter: { topic: { eq: \"local\" } }) { \n      edges { \n        node { \n          topic \n          title \n        } \n      } \n    } \n  } \n' \n```", "```jsx\nimport React from 'react' \nimport Link from 'gatsby-link' \n\nexport default ({ data: { allArticlesJson: { edges } } }) => ( \n  <div> \n    <h1>Sports Articles</h1> \n    <Link to=\"/\">Home</Link> \n    <ul> \n      {edges.map(({ node: { title } }) => ( \n        <li key={title}>{title}</li> \n      ))} \n    </ul> \n  </div> \n) \n\nexport const query = graphql' \n  query SportsArticles { \n    allArticlesJson(filter: { topic: { eq: \"sports\" } }) { \n      edges { \n        node { \n          topic \n          title \n        } \n      } \n    } \n  } \n' \n```", "```jsx\nimport React from 'react' \nimport Link from 'gatsby-link' \n\nexport default title => ({ data: { allArticlesJson: { edges } } }) => ( \n  <div> \n    <h1>{title}</h1> \n    <Link to=\"/\">Home</Link> \n    <ul> \n      {edges.map(({ node: { title } }) => ( \n        <li key={title}>{title}</li> \n      ))} \n    </ul> \n  </div> \n) \n```", "```jsx\nimport React from 'react' \nImport ArticleList from '../components/ArticleList' \n\nexport default ArticleList('Global Articles') \n\nexport const query = graphql' \n  query GlobalArticles { \n    allArticlesJson(filter: { topic: { eq: \"global\" } }) { \n      edges { \n        node { \n          topic \n          title \n        } \n      } \n    } \n  } \n'\n```", "```jsx\nimport React from 'react' \nimport Link from 'gatsby-link' \n\nconst IndexPage = () => ( \n  <div> \n    <h1>Home</h1> \n    <p>Choose an article category</p> \n    <ul> \n      <li> \n        <Link to=\"/global/\">Global</Link> \n      </li>\n      <li> \n        <Link to=\"/local/\">Local</Link> \n      </li>\n\n      <li> \n        <Link to=\"/sports/\">Sports</Link> \n      </li> \n    </ul> \n  </div> \n) \n\nexport default IndexPage \n```", "```jsx\ngit clone https://github.com/ajayns/gatsby-hacker-news.git\ncd gatsby-hacker-news\n```", "```jsx\nnpm install\n```", "```jsx\ngatsby develop\n```", "```jsx\nsuccess onPreBootstrap - 0.011 s\n![](Images/91b4b10e-2f9a-4b0b-8223-8f057f3c9f05.jpg) starting to fetch data from the Hacker News GraphQL API. Warning, this can take a long time e.g. 10-20 seconds\n![](Images/91b4b10e-2f9a-4b0b-8223-8f057f3c9f05.jpg) source and transform nodesfetch HN data: 10138.119ms\n```", "```jsx\nquery PageQuery { \n  allHnStory(sort: { fields: [order] }, limit: 10) { \n    edges { \n      node { \n        ...Story \n      } \n    } \n  } \n} \n```", "```jsx\nfragment Story on HNStory { \n  id \n  title \n  score \n  order \n  domain \n  url \n  by \n  descendants \n  timeISO(fromNow: true) \n} \n```", "```jsx\nimport React from 'react' \n\nimport StoryItem from '../components/story-item' \n\nconst IndexPage = ({ data, active }) => ( \n  <div> \n    <div> \n      {data.allHnStory.edges.map(({ node }) => ( \n        <StoryItem key={node.id} story={node} active={false} /> \n      ))} \n    </div> \n  </div> \n) \n\nexport default IndexPage \n```", "```jsx\nimport React, { Component } from 'react'; \nimport Link from 'gatsby-link'; \n\nimport './story-item.css'; \n\nconst StoryItem = ({ story, active }) => ( \n  <div \n    className=\"story\" \n    style={active ? { borderLeft: '6px solid #ff6600' } : {}} \n  > \n    <div className=\"header\"> \n      <a href={story.url}> \n        <h4>{story.title}</h4> \n      </a> \n      <span className=\"story-domain\"> \n        {' '}({story.domain}) \n      </span> \n    </div> \n    <div className=\"info\"> \n      <h4 className=\"score\">\u25b4 {story.score}</h4> \n      {' '} \n      by <span className=\"author\">{story.by}</span> \n      {' '} \n      <span className=\"time\">{story.timeISO}</span> \n      {' '} \n      {active ? ( \n        '' \n      ) : ( \n        <Link to={'/item/${story.id}'} className=\"comments\"> \n          {story.descendants} comments \n        </Link> \n      )} \n    </div> \n  </div> \n); \n\nexport default StoryItem; \n```", "```jsx\nconst path = require('path') \n\nexports.createPages = ({ graphql, boundActionCreators }) => { \n  const { createPage } = boundActionCreators \n  return new Promise((resolve, reject) => { \n    graphql(' \n      { \n        allHnStory(sort: { fields: [order] }, limit: 10) { \n          edges { \n            node { \n              id \n            } \n          } \n        } \n      } \n    ').then(result => { \n      if (result.errors) {\n```", "```jsx\n        reject(result.errors) \n      } \n\n      const template = path.resolve('./src/templates/story.js') \n\n      result.data.allHnStory.edges.forEach(({ node }) => { \n        createPage({ \n          path: '/item/${node.id}', \n          component: template, \n          context: { \n            id: node.id, \n          }, \n        }) \n      }) \n\n      resolve() \n    })\n  }) \n} \n```", "```jsx\ngraphql(' \n  { \n    allHnStory(sort: { fields: [order] }, limit: 10) { \n      edges { \n        node { \n          id \n        } \n      } \n    } \n  } \n') \n```", "```jsx\nconst template = path.resolve('./src/templates/story.js') \n\nresult.data.allHnStory.edges.forEach(({ node }) => { \n  createPage({ \n    path: '/item/${node.id}', \n    component: template, \n    context: { \n      id: node.id, \n    },\n```", "```jsx\n  }) \n}) \n```", "```jsx\nimport React from 'react' \n\nimport StoryItem from '../components/story-item' \nimport Comment from '../components/comment' \n\nconst Story = ({ data }) => ( \n  <div> \n    <StoryItem story={data.hnStory} active={true} /> \n    <ul> \n      {data.hnStory.children.map(comment => ( \n        <Comment key={comment.id} data={comment} /> \n      ))} \n    </ul> \n  </div> \n) \n\nexport default Story \n\nexport const pageQuery = graphql' \n  query StoryQuery($id: String!) { \n    hnStory(id: { eq: $id }) { \n      ...Story \n      children { \n        ...Comment \n      } \n    } \n  } \n' \n```"]