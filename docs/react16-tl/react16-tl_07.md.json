["```jsx\nnpm install @storybook/cli -g\n```", "```jsx\ngetstorybook\n```", "```jsx\ngetstorybook - the simplest way to add a storybook to your project. \n![](Images/4f10e203-ce18-4c2c-ae60-5c08079192da.jpg) Detecting project type. ![](Images/86ac4257-00f3-4fcb-92c0-73bde8dd7af4.png)\n![](Images/4f10e203-ce18-4c2c-ae60-5c08079192da.jpg) Adding storybook support to your \"Create React App\" based project. ![](Images/86ac4257-00f3-4fcb-92c0-73bde8dd7af4.png)![](Images/4f10e203-ce18-4c2c-ae60-5c08079192da.jpg) Preparing to install dependencies. ![](Images/86ac4257-00f3-4fcb-92c0-73bde8dd7af4.png)\n```", "```jsx\n ![](Images/4f10e203-ce18-4c2c-ae60-5c08079192da.jpg) Installing dependencies.\nTo run your storybook, type:\n npm run storybook \n```", "```jsx\n\"scripts\": { \n  \"start\": \"react-scripts start\", \n  \"build\": \"react-scripts build\", \n  \"test\": \"react-scripts test --env=jsdom\", \n  \"eject\": \"react-scripts eject\", \n  \"storybook\": \"start-storybook -p 9009 -s public\", \n  \"build-storybook\": \"build-storybook -s public\" \n} \n```", "```jsx\n.storybook/\n\u251c\u2500\u2500 addons.js\n\u2514\u2500\u2500 config.js\n```", "```jsx\nsrc/\n\u251c\u2500\u2500 App.css\n\u251c\u2500\u2500 App.js\n\u251c\u2500\u2500 App.test.js\n\u251c\u2500\u2500 index.css\n\u251c\u2500\u2500 index.js\n\u251c\u2500\u2500 logo.svg\n\u251c\u2500\u2500 registerServiceWorker.js\n\u2514\u2500\u2500 stories\n    \u2514\u2500\u2500 index.js\n```", "```jsx\nimport React from 'react'; \n\nimport { storiesOf } from '@storybook/react'; \nimport { action } from '@storybook/addon-actions'; \nimport { linkTo } from '@storybook/addon-links'; \n\nimport { Button, Welcome } from '@storybook/react/demo'; \n\nstoriesOf('Welcome', module).add('to Storybook', () => ( \n  <Welcome showApp={linkTo('Button')} /> \n)); \n\nstoriesOf('Button', module) \n  .add('with text', () => ( \n    <Button onClick={action('clicked')}>Hello Button</Button> \n  )) \n  .add('with some emoji', () => ( \n    <Button onClick={action('clicked')}></Button> \n  )); \n```", "```jsx\nnpm run storybook\n```", "```jsx\nStorybook started on => http://localhost:9009/\n```", "```jsx\nimport React from 'react'; \n\nconst MyComponent = ({ title, content, titleStyle, contentStyle }) => ( \n  <section> \n    <heading> \n      <h2 style={titleStyle}>{title}</h2> \n    </heading> \n    <article style={contentStyle}>{content}</article> \n  </section> \n); \n\nexport default MyComponent; \n```", "```jsx\nstoriesOf('MyComponent Properties', module) \n```", "```jsx\n.add('No Props', () => <MyComponent />) \n```", "```jsx\n.add('Just \"title\"', () => <MyComponent title=\"The Title\" />) \n```", "```jsx\n.add('Just \"Content\"', () => <MyComponent content=\"The Content\" />) \n```", "```jsx\n.add('Both \"title\" and \"content\"', () => ( \n  <MyComponent title=\"The Title\" content=\"The Content\" /> \n)) \n```", "```jsx\n.add('Just \"titleStyle\"', () => ( \n  <MyComponent \n    title=\"The Title\" \n    content=\"The Content\" \n    titleStyle={{ fontWeight: 'normal' }} \n  /> \n)) \n```", "```jsx\n.add('Just \"contentStyle\"', () => (\n  <MyComponent \n    title=\"The Title\" \n    content=\"The Content\" \n    contentStyle={{ fontFamily: 'arial', fontSize: '1.2em' }} \n  /> \n)) \n```", "```jsx\n.add('Both \"titleStyle\" and \"contentStyle\"', () => ( \n  <MyComponent \n    title=\"The Title\" \n    content=\"The Content\"\n```", "```jsx\n    titleStyle={{ fontWeight: 'normal' }} \n    contentStyle={{ fontFamily: 'arial', fontSize: '1.2em' }} \n  /> \n)); \n```", "```jsx\nimport React from 'react'; \nimport { storiesOf } from '@storybook/react'; \nimport MyComponent from '../MyComponent'; \n\nstoriesOf('MyComponent Properties', module) \n  .add('No Props', () => <MyComponent />) \n  .add('Just \"title\"', () => <MyComponent title=\"The Title\" />) \n  .add('Just \"Content\"', () => <MyComponent content=\"The Content\" />) \n  .add('Both \"title\" and \"content\"', () => ( \n    <MyComponent title=\"The Title\" content=\"The Content\" /> \n  )) \n  .add('Just \"titleStyle\"', () => ( \n    <MyComponent \n      title=\"The Title\" \n      content=\"The Content\" \n      titleStyle={{ fontWeight: 'normal' }} \n    /> \n  )) \n  .add('Just \"contentStyle\"', () => ( \n    <MyComponent \n      title=\"The Title\" \n      content=\"The Content\" \n      contentStyle={{ fontFamily: 'arial', fontSize: '1.2em' }} \n    /> \n  )) \n  .add('Both \"titleStyle\" and \"contentStyle\"', () => ( \n    <MyComponent \n      title=\"The Title\" \n      content=\"The Content\" \n      titleStyle={{ fontWeight: 'normal' }} \n      contentStyle={{ fontFamily: 'arial', fontSize: '1.2em' }} \n    /> \n  )); \n```", "```jsx\nnpm install @storybook/addon-knobs --save-dev\n```", "```jsx\nimport '@storybook/addon-knobs/register'; \n```", "```jsx\nimport { withKnobs, text, object } from '@storybook/addon-knobs/react';\n```", "```jsx\nstoriesOf('MyComponent Prop Knobs', module) \n  .addDecorator(withKnobs) \n  .add('default', () => ( \n    <MyComponent \n      title={text('Title', 'The Title')} \n      content={text('Content', 'The Content')} \n      titleStyle={object('Title Style', { fontWeight: 'normal' })} \n      contentStyle={object('Content Style', { \n        fontFamily: 'arial', \n        fontSize: '1.2em' \n      })} \n    />\n  )); \n```", "```jsx\nimport React from 'react'; \n\nconst MyButton = ({ onClick }) => ( \n  <button onClick={onClick}>My Button</button> \n); \n\nexport default MyButton; \n```", "```jsx\nimport React from 'react'; \nimport { storiesOf } from '@storybook/react'; \nimport { action } from '@storybook/addon-actions'; \nimport MyButton from '../MyButton'; \n\nstoriesOf('MyButton', module).add('clicks', () => ( \n  <MyButton onClick={action('my component clicked')} /> \n)); \n```", "```jsx\nimport React, { Component } from 'react'; \n\nclass MyRangeInput extends Component { \n  static defaultProps = { \n    onChange() {}, \n    onRender() {} \n  }; \n\n  state = { value: 25 }; \n\n  onChange = ({ target: { value } }) => { \n    this.setState({ value }); \n    this.props.onChange(value); \n  }; \n\n  render() { \n    const { value } = this.state; \n    this.props.onRender(value); \n    return ( \n      <input \n        type=\"range\" \n        min=\"1\" \n        max=\"100\" \n        value={value} \n        onChange={this.onChange} \n      /> \n    ); \n  } \n}\nexport default MyRangeInput; \n```", "```jsx\nimport React from 'react'; \nimport { storiesOf } from '@storybook/react'; \nimport { action } from '@storybook/addon-actions'; \nimport MyButton from '../MyButton'; \nimport MyRangeInput from '../MyRangeInput'; \n\nstoriesOf('MyButton', module).add('clicks', () => ( \n  <MyButton onClick={action('my component clicked')} /> \n)); \n\nstoriesOf('MyRangeInput', module).add('slides', () => ( \n  <MyRangeInput \n    onChange={action('range input changed')} \n    onRender={action('range input rendered')} \n  /> \n)); \n```", "```jsx\nonChange = ({ target: { value } }) => { \n  this.setState({ value }); \n  this.props.onChange(value); \n}; \n```", "```jsx\nimport React from 'react'; \n\nconst MyComponent = ({ headingText, children }) => ( \n  <section> \n    <header> \n      <h1>{headingText}</h1> \n    </header> \n    <article>{children}</article> \n  </section> \n); \n\nMyComponent.defaultProps = { \n  headingText: 'Heading Text' \n}; \n\nexport default MyComponent;\n```", "```jsx\nimport React from 'react'; \nimport { storiesOf } from '@storybook/react'; \nimport { linkTo } from '@storybook/addon-links'; \nimport LinkTo from '@storybook/addon-links/react'; \nimport MyComponent from '../MyComponent'; \n\nstoriesOf('MyComponent', module) \n  .add('default', () => ( \n    <section> \n      <MyComponent /> \n      <p> \n        This is the default. You can also change the{' '} \n        <LinkTo story=\"heading text\">heading text</LinkTo>. \n      </p> \n    </section> \n  )) \n  .add('heading text', () => ( \n    <section> \n      <MyComponent headingText=\"Changed Heading!\" /> \n      <p> \n        This time, a custom <code>headingText</code> prop \n        changes the heading text. You can also pass{' '} \n        <LinkTo story=\"children\">child elements</LinkTo> to{' '} \n        <code>MyComponent</code>. \n      </p> \n      <button onClick={linkTo('default')}>Default</button> \n    </section> \n  )) \n  .add('children', () => ( \n    <section> \n      <MyComponent> \n        <strong>Child Element</strong> \n      </MyComponent> \n      <p> \n        Passing a child component. You can also change the{' '} \n        <LinkTo story=\"headingText\">heading text</LinkTo> of{' '} \n        <code>MyComponent</code>. \n      </p> \n      <button onClick={linkTo('default')}>Default</button> \n    </section> \n  )); \n```", "```jsx\n<LinkTo story=\"children\">child elements</LinkTo>\n```", "```jsx\n<button onClick={linkTo('default')}>Default</button>\n```", "```jsx\nimport { configure } from '@storybook/react'; \n\nfunction loadStories() { \n  require('../src/stories/MyButton.story'); \n  require('../src/stories/MyList.story'); \n}\nconfigure(loadStories, module); \n```", "```jsx\nimport React from 'react'; \nimport PropTypes from 'prop-types'; \n\nconst MyButton = ({ onClick }) => ( \n  <button onClick={onClick}>My Button</button> \n); \n\nMyButton.propATypes = { \n  onClick: PropTypes.func \n}; \n\nexport default MyButton; \n```", "```jsx\nimport React from 'react'; \nimport PropTypes from 'prop-types'; \n\nconst Empty = ({ items, children }) => \n  items.length === 0 ? children : null; \n\nconst MyList = ({ items }) => ( \n  <section> \n    <Empty items={items}>No items found</Empty> \n    <ul>{items.map((v, i) => <li key={i}>{v}</li>)}</ul> \n  </section> \n); \n\nMyList.propTypes = { \n  items: PropTypes.array \n}; \n\nMyList.defaultProps = { \n  items: [] \n}; \nexport default MyList; \n```", "```jsx\nimport React from 'react'; \nimport { storiesOf } from '@storybook/react'; \nimport { withInfo } from '@storybook/addon-info'; \nimport { action } from '@storybook/addon-actions'; \nimport MyButton from '../MyButton'; \n\nstoriesOf('MyButton', module) \n  .add( \n    'basic usage', \n    withInfo(' \n      Without passing any properties \n    ')(() => <MyButton />) \n  ) \n  .add( \n    'click handler', \n    withInfo(' \n      Passing an event handler function that's called when \n      the button is clicked \n    ')(() => <MyButton onClick={action('button clicked')} />) \n  ); \n```", "```jsx\nimport React from 'react'; \nimport { storiesOf } from '@storybook/react'; \nimport { withInfo } from '@storybook/addon-info'; \nimport MyList from '../MyList'; \n\nstoriesOf('MyList', module) \n  .add( \n    'basic usage', \n    withInfo(' \n      Without passing any properties\n    ')(() => <MyList />) \n  ) \n  .add( \n    'passing an array of items', \n    withInfo(' \n      Passing an array to the items property \n    ')(() => <MyList items={['first', 'second', 'third']} />) \n  ); \n```", "```jsx\nnpm run build-storybook\n```", "```jsx\ninfo @storybook/react v3.3.13\ninfo \ninfo => Loading custom addons config.\ninfo => Using default webpack setup based on \"Create React App\".\ninfo => Copying static files from: public\ninfo Building storybook ...  \n```"]