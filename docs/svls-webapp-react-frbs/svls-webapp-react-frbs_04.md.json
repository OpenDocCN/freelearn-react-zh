["```jsx\nnpm init\nnpm install --save react react-dom\n```", "```jsx\nnpm install -g create-react-app\n```", "```jsx\ncreate-react-app seat-booking\n```", "```jsx\ncd seat-booking\nnpm start\n```", "```jsx\nnpm init\nnpm install --save react react-dom\n```", "```jsx\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Seat = ({ number, price, status }) => (\n  <li className={'seatobj ' + status} key={number.toString()}>\n   <input type=\"checkbox\" disabled={status === \"booked\" ? true : false} id={number.toString()} onClick={handleClick}/>\n   <label htmlFor={number.toString()}>{number}</label>\n  </li>\n)\nconst handleClick = (event) => {\n  console.log(\"seat selected \" + event.target.checked);\n}\n\nSeat.propTypes = {\n   number:PropTypes.number,\n   price:PropTypes.number,\n   status:PropTypes.string\n}\n\nexport default Seat;\n```", "```jsx\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Seat from './Seat';\nconst SeatRow = ({ seats, rowNumber }) => (\n   <div>\n      <li className=\"row\">\n        <ol className=\"seatrow\">\n           {seats.map(seat =>\n             <Seat key={seat.number} number={seat.number}\n                   price={seat.price}\n                   status={seat.status}\n             />\n           )}\n        </ol>\n      </li>\n    </div>\n)\nSeatRow.propTypes = {\n   seats: PropTypes.arrayOf(PropTypes.shape({\n      number: PropTypes.number,\n      price: PropTypes.number,\n      status: PropTypes.string\n   }))\n}\nexport default SeatRow;\n```", "```jsx\nimport React from 'react'\nimport PropTypes from 'prop-types'\nconst SeatList = ({ title, children }) => (\n\n  <div>\n    <h3>{title}</h3>\n    <ol className=\"list\">\n         {children}\n    </ol>\n  </div>\n\n)\nSeatList.propTypes = {\nchildren: PropTypes.node,\ntitle: PropTypes.string.isRequired\n}\nexport default SeatList;\n```", "```jsx\nconst Cart = () => {\n return (\n    <div>\n       <h3>No. of Seats selected: </h3>\n       <button>\n         Checkout\n       </button>\n    </div>\n )\n}\nexport default Cart;\n```", "```jsx\n{\n  \"seats\" : {\n    \"seat-1\" : {\n      \"number\" : 1,\n      \"price\" : 400,\n      \"rowNo\" : 1,\n      \"status\" : \"booked\"\n    },\n    \"seat-2\" : {\n      \"number\" : 2,\n      \"price\" : 400,\n      \"rowNo\" : 1,\n      \"status\" : \"booked\"\n    },\n    \"seat-3\" : {\n      \"number\" : 3,\n      \"price\" : 400,\n      \"rowNo\" : 1,\n      \"status\" : \"booked\"\n    },\n   \"seat-4\" : {\n      \"number\" : 4,\n      \"price\" : 400,\n      \"rowNo\" : 1,\n      \"status\" : \"available\"\n    },\n    ...\n  }\n}\n```", "```jsx\nnpm install firebase\n```", "```jsx\nimport firebase from 'firebase';\n```", "```jsx\nimport firebase from 'firebase'\nvar config = { /* COPY THE ACTUAL CONFIG FROM FIREBASE CONSOLE */\napiKey:\"AIzaSyBkdkAcHdNpOEP_W9NnOxpQy4m1deMbG5Vooo\",\nauthDomain:\"seat-booking.firebaseapp.com\",\ndatabaseURL:\"https://seat-booking.firebaseio.com\",\nprojectId:\"seat-booking\",\nstorageBucket:\"seat-booking.appspot.com\",\nmessagingSenderId:\"248063178000\"\n};\nvar fire = firebase.initializeApp(config);\nexport default fire;\n```", "```jsx\n\nimport fire from './firebase.js';\n\nexport function getSeats() {\n    let seatArr = [];\n    let rowArray = [];\n    const noOfSeatsInARow = 5;\n\n    return new Promise((resolve, reject) => {\n        //iterate through seat array and create row wise groups/array\n        const seatsRef = fire.database().ref('seats/').orderByChild(\"number\");\n        seatsRef.once('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                var childData = childSnapshot.val();\n                seatArr.push({\n                    number: childData.number,\n                    price: childData.price,\n                    status: childData.status,\n                    rowNo: childData.rowNo\n                });\n            });\n\n            var groups = [], i;\n            for (i = 0; i < seatArr.length; i += noOfSeatsInARow) {\n                groups = seatArr.slice(i, i + noOfSeatsInARow);\n                console.log(groups);\n                rowArray.push({\n                    id: i,\n                    seats: groups\n                })\n            }\n            console.log(rowArray);\n            resolve(rowArray);\n        }).catch(error => { reject(error) });\n    })\n\n}\n\nexport function bookSelSeats(seats) {\n    console.log(\"book seats\", seats);\n    return new Promise((resolve, reject) => {\n        //write logic for payment \n        seats.forEach(obj => {\n            fire.database().ref('seats/').child(\"seat-\" + obj.number)\n                .update({ status: \"booked\" }).then(resolve(true)).catch(error => { reject(error) });\n        })\n    });\n\n}\n```", "```jsx\nimport React, { Component } from 'react';\nimport './App.css';\nimport SeatList from './components/SeatList';\nimport Cart from './components/Cart';\nimport { getSeats } from './api/service.js';\nimport SeatRow from './components/SeatRow';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      seatrows: [],\n    }\n  }\n\n  componentDidMount() {\n    let _this = this;\n    getSeats().then(function (list) {\n      console.log(list);\n      _this.setState({\n        seatrows: list,\n      });\n    });\n\n  }\n\n  render() {\n    return (\n      <div className=\"layout\">\n        <SeatList title=\"Seats\">\n          {this.state.seatrows.map((row, index) =>\n            <SeatRow\n              seats={row.seats}\n              key={index}\n            />\n          )}\n\n        </SeatList>\n        <hr />\n        <Cart />\n      </div>\n    )\n\n  }\n}\n\nexport default App;\n```", "```jsx\n.layout {\n  margin: 19px auto;\n  max-width: 350px;\n}\n*, *:before, *:after {\n  box-sizing: border-box;\n}\n.list {\n  border-right: 4px solid grey;\n  border-left: 4px solid grey;\n}\n\nhtml {\n  font-size: 15px;\n}\n\nol {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.seatrow {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n}\n.seatobj {\n  display: flex;\n  flex: 0 0 17.28571%;\n  padding: 5px;\n  position: relative;\n}\n\n.seatobj label {\n  display: block;\n  position: relative;\n  width: 100%;\n  text-align: center;\n  font-size: 13px;\n  font-weight: bold;\n  line-height: 1.4rem;\n  padding: 4px 0;\n  background:#bada60;\n  border-radius: 4px;\n  animation-duration: 350ms;\n  animation-fill-mode: both;\n}\n\n.seatobj:nth-child(2) {\n  margin-right: 14.28571%;\n}\n.seatobj input[type=checkbox] {\n  position: absolute;\n  opacity: 0;\n}\n.seatobj input[type=checkbox]:checked + label {\n  background: #f42530;\n}\n\n.seatobj input[type=checkbox]:disabled + label:after {\n  content: \"X\";\n  text-indent: 0;\n  position: absolute;\n  top: 4px;\n  left: 49%;\n  transform: translate(-49%, 0%);\n}\n.seatobj input[type=checkbox]:disabled + label:hover {\n  box-shadow: none;\n  cursor: not-allowed;\n}\n\n.seatobj label:before {\n  content: \"\";\n  position: absolute;\n  width: 74%;\n  height: 74%;\n  top: 1px;\n  left: 49%;\n  transform: translate(-49%, 0%);\n  border-radius: 2px;\n}\n.seatobj label:hover {\n  cursor: pointer;\n  box-shadow: 0 0 0px 3px yellowgreen;\n}\n.seatobj input[type=checkbox]:disabled + label {\n  background: #dde;\n  text-indent: -9999px;\n  overflow: hidden;\n}\n```", "```jsx\nconst fetchSeats = rows => ({\n    type: GET_SEATS,\n    rows\n})\n```", "```jsx\n(previousState, action) =>newState\n```", "```jsx\nnpm install --save react-redux\n```", "```jsx\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport SeatBookingApp from './containers/SeatBookingApp'\nimport { Provider } from 'react-redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers'\nimport { getAllSeats } from './actions'\n\nconst middleware = [thunk];\n//middleware will print the logs for state changes\nif (process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n}\n\nconst store = createStore(\n    reducer,\n    applyMiddleware(...middleware)\n)\n\nstore.dispatch(getAllSeats())\n\nrender(\n    <Provider store={store}>\n        <SeatBookingApp />\n    </Provider>,\n    document.getElementById('root')\n)\n```", "```jsx\nimport React from 'react'\nimport PropTypes from 'prop-types'\nconst Cart = ({seats,total, onCheckoutClicked}) => {\n\n  const hasSeats = seats.length > 0\n  const nodes = hasSeats ? (\n\n    seats.map(seat =>\n      <div>\n        Seat Number: {seat.number} - Price: {seat.price}\n      </div>\n    )\n\n  ) : (\n    <em>No seats selected</em>\n  )\n\n  return (\n    <div>\n    <b>Selected Seats</b> <br/>\n      {nodes} <br/>\n    <b>Total</b> <br/>\n      {total}\n      <br/>\n      <button onClick={onCheckoutClicked}>\n        Checkout\n      </button>\n    </div>\n  )\n}\n\nCart.propTypes = {\n  seats: PropTypes.array,\n  total: PropTypes.string,\n  onCheckoutClicked: PropTypes.func\n}\nexport default Cart;\n```", "```jsx\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Seat = ({ number, price, status, rowNo, handleClick }) => {\n  return (\n\n    <li className={'seatobj ' + status} key={number.toString()}>\n      <input type=\"checkbox\" disabled={status === \"booked\" ? true : false} id={number.toString()} onClick={handleClick} />\n      <label htmlFor={number.toString()}>{number}</label>\n    </li>\n\n  )\n}\n\nSeat.propTypes = {\n  number: PropTypes.number,\n  price: PropTypes.number,\n  status: PropTypes.string,\n  rowNo: PropTypes.number,\n  handleClick: PropTypes.func\n}\n\nexport default Seat;\n```", "```jsx\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nconst SeatList = ({ title, children }) => (\n\n  <div>\n    <h3>{title}</h3>\n    <ol className=\"list\">\n      {children}\n    </ol>\n  </div>\n)\n\nSeatList.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string.isRequired\n}\n\nexport default SeatList;\n```", "```jsx\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Seat from './Seat';\n\nconst SeatRow = ({ seats, rowNumber, onAddToCartClicked }) => {\n  return (\n  <div>\n    <li className=\"row row--1\" key=\"1\">\n      <ol className=\"seatrow\">\n        {seats.map(seat =>\n          <Seat key={seat.number} number={seat.number}\n            price={seat.price}\n            status={seat.status}\n            rowNo={seat.rowNo} \n            handleClick={() => onAddToCartClicked(seat)}\n          />\n        )}\n\n      </ol>\n    </li>\n  </div>\n)\n}\nSeatRow.propTypes = {\n  seats: PropTypes.arrayOf(PropTypes.shape({\n    number: PropTypes.number,\n    price: PropTypes.number,\n    status: PropTypes.string,\n    rowNo: PropTypes.number\n  })),\n  rowNumber: PropTypes.number,\n  onAddToCartClicked: PropTypes.func.isRequired\n}\n\nexport default SeatRow;\n```", "```jsx\nimport React from 'react'\nimport SeatContainer from './SeatContainer'\nimport CartContainer from './SeatCartContainer'\nimport '../App.css';\n\nconst SeatBookingApp = () => (\n    <div className=\"layout\">\n        <h2>Ticket Booking App</h2>\n        <hr />\n        <SeatContainer />\n        <hr />\n        <CartContainer />\n    </div>\n)\nexport default SeatBookingApp; \n```", "```jsx\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bookSeats } from '../actions'\nimport { getTotal, getCartSeats } from '../reducers'\nimport Cart from '../components/Cart'\n\nconst CartContainer = ({ seats, total, bookSeats }) => {\n\n    return (\n\n    <Cart\n        seats={seats}\n        total={total}\n        onCheckoutClicked={() => bookSeats(seats)}\n    />\n)\n}\nCartContainer.propTypes = {\n    seats: PropTypes.arrayOf(PropTypes.shape({\n        number: PropTypes.number.isRequired,\n        rowNo: PropTypes.number.isRequired,\n        price: PropTypes.number.isRequired,\n        status: PropTypes.string.isRequired\n    })).isRequired,\n    total: PropTypes.string,\n    bookSeats: PropTypes.func.isRequired\n}\nconst mapStateToProps = (state) => ({\n    seats: getCartSeats(state),\n    total: getTotal(state)\n})\n\nexport default connect(mapStateToProps, {bookSeats})(CartContainer)\n```", "```jsx\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addSeatToCart } from '../actions'\nimport SeatRow from '../components/SeatRow'\nimport SeatList from '../components/SeatList'\nimport { getAllSeats } from '../reducers/seats';\n\nconst SeatContainer = ({ seatrows, addSeatToCart }) => {\n    return (\n\n    <SeatList title=\"Seats\">\n        {seatrows.map((row, index) =>\n            <SeatRow key={index}\n                seats={row.seats}\n                rowNumber={index}\n                onAddToCartClicked={addSeatToCart} />\n\n        )}\n\n    </SeatList>\n\n)\n}\nSeatContainer.propTypes = {\n    seatrows: PropTypes.arrayOf(PropTypes.shape({\n        number: PropTypes.number,\n        price: PropTypes.number,\n        status: PropTypes.string,\n        rowNo: PropTypes.number\n    })).isRequired,\n    addSeatToCart: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    seatrows: getAllSeats(state.seats)\n})\n\nexport default connect(mapStateToProps,  { addSeatToCart })(SeatContainer)\n```", "```jsx\n//get the list of seats\nexport const GET_SEATS = 'GET_SEATS'\n//add seats to cart on selection\nexport const ADD_TO_CART = 'ADD_TO_CART'\n//book seats\nexport const CHECKOUT = 'CHECKOUT'\n```", "```jsx\nimport { getSeats,bookSelSeats } from '../api/service';\nimport { GET_SEATS, ADD_TO_CART, CHECKOUT } from '../constants/ActionTypeConstants';\n\n//action creator for getting seats\nconst fetchSeats = rows => ({\n    type: GET_SEATS,\n    rows\n})\n\n//action getAllSeats\nexport const getAllSeats = () => dispatch => {\n    getSeats().then(function (rows) {\n        dispatch(fetchSeats(rows));\n    });\n}\n\n//action creator for add seat to cart\nconst addToCart = seat => ({\n    type: ADD_TO_CART,\n    seat\n})\n\nexport const addSeatToCart = seat => (dispatch, getState) => {\n    dispatch(addToCart(seat))\n\n}\n\nexport const bookSeats = seats => (dispatch, getState) => {\n    const { cart } = getState()\n    bookSelSeats(seats).then(function() {\n        dispatch({\n            type: CHECKOUT,\n            cart\n        })\n    });\n\n}\n```", "```jsx\nimport { GET_SEATS } from \"../constants/ActionTypeConstants\";\nimport { combineReducers } from 'redux'\n\nconst seatRow = (state = {}, action) => {\n    switch (action.type) {\n        case GET_SEATS:\n            return {\n                ...state,\n                ...action.rows.reduce((obj, row) => {\n                    obj[row.id] = row\n                    return obj\n                }, {})\n            }\n        default:\n            return state\n    }\n}\n\nconst rowIds = (state = [], action) => {\n    switch (action.type) {\n        case GET_SEATS:\n            return action.rows.map(row => row.id)\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    seatRow,\n    rowIds\n})\n\nexport const getRow = (state, number) =>\n    state.seatRow[number]\n\nexport const getAllSeats = state =>\n    state.rowIds.map(number => getRow(state, number))\n```", "```jsx\nimport {\n    ADD_TO_CART,\n    CHECKOUT\n} from '../constants/ActionTypeConstants'\n\nconst initialState = {\n    addedSeats: []\n}\n\nconst addedSeats = (state = initialState.addedSeats, action) => {\n    switch (action.type) {\n        case ADD_TO_CART:\n        //if it is already there, remove it from cart\n        if (state.indexOf(action.seat) !== -1) {\n            return state.filter(seatobj=>seatobj!=action.seat);\n          }\n        return [...state, action.seat]\n        default:\n            return state\n    }\n}\n\nexport const getAddedSeats = state => state.addedSeats\n\nconst cart = (state = initialState, action) => {\n    switch (action.type) {\n        case CHECKOUT:\n            return initialState\n        default:\n            return {\n                addedSeats: addedSeats(state.addedSeats, action)\n            }\n    }\n}\n\nexport default cart\n```", "```jsx\nimport { combineReducers } from 'redux'\nimport seats from './seats'\nimport cart, * as cartFunc from './cart'\n\nexport default combineReducers({\n    cart,\n    seats\n})\n\nconst getAddedSeats = state => cartFunc.getAddedSeats(state.cart)\n\nexport const getTotal = state =>\n    getAddedSeats(state)\n        .reduce((total, seat) =>\n            total + seat.price,\n        0\n        )\n        .toFixed(2)\n\nexport const getCartSeats = state =>\n    getAddedSeats(state).map(seat => ({\n        ...seat\n    }))\n```"]