["```jsx\nconstructor(props) {\n super(props);\n this.state = {\n value: props.initialValue\n };\n }\n```", "```jsx\n<section>\n<h2>My First Example</h2>\n</section>\n<script>\n var root = document.querySelector('section').createShadowRoot();\n root.innerHTML = '<style>h2{ color: red; }</style>' +'<h2>Hello World!</h2>';\n</script>\n```", "```jsx\nvar sectionStyle = {\n color: 'red'\n};\nvar MyFirstExample = React.createClass({\nrender: function() {\n return (<section><h2 style={sectionStyle}>\n Hello World!</h2></section>\n )}\n})\nReactDOM.render(<MyFirstExample />, renderedNode);\n```", "```jsx\n{\n\"rules\": {\n\".write\": true,\n\"ticket\": {\n// a valid ticket must have attributes \"email\" and \"status\"\n\".validate\": \"newData.hasChildren(['email', 'status'])\",\n\"status\": {\n// the value of \"status\" must be a string and length greater then 0 and less then 10\n\".validate\": \"newData.isString() && newData.val().length > 0 && newData.val().length < 10\"\n},\n\"email\": {\n// the value of \"email\" must valid with \"@\"\n\".validate\": \"newData.val().contains('@')\"\n}\n}\n}\n}\n```", "```jsx\n{\n \"rules\": {\n \".read\": \"auth != null\",\n \".write\": \"auth != null\"\n }}\n```", "```jsx\n{\n \"rules\": {\n \".read\": true,\n \".write\": true\n }}\n```", "```jsx\n{\n \"rules\": {\n   \"users\": {\n       \"$uid\": {\n             \".read\": \"$uid === auth.uid\",\n             \".write\": \"$uid === auth.uid\"\n         }\n       }\n    }\n}\n```", "```jsx\n{\n \"rules\": {\n    \".read\": false,\n    \".write\": false\n  }\n}\n```", "```jsx\nservice cloud.firestore {\n    match /databases/{database}/documents {\n           match /{document=**} {\n           allow read, write;\n        }\n    }\n}\n```", "```jsx\nservice cloud.firestore {\n    match /databases/{database}/documents {\n        match /users/{userId} {\n           allow read, write: if request.auth.uid == userId;\n        }\n    }\n}\n```", "```jsx\nservice cloud.firestore {\n    match /databases/{database}/documents {\n       match /{document=**} {\n          allow read, write: if false;\n       }\n    }\n}\n```", "```jsx\nexports.makeUppercase = functions.database.ref('/messages/{pushId}/original')\n .onWrite(event => {\n // Grab the current value of what was written to the Realtime Database.\n const original = event.data.val();\n console.log('Uppercasing', event.params.pushId, original);\n const uppercase = original.toUpperCase();\n // You must return a Promise when performing asynchronous tasks inside a Functions such as\n // writing to the Firebase Realtime Database.\n // Setting an \"uppercase\" sibling in the Realtime Database returns a Promise.\n return event.data.ref.parent.child('uppercase').set(uppercase);\n });\n```", "```jsx\n// Configuration for your app\n // TODO: Replace with your project's config object\n var config = {\n apiKey: '<your-api-key>',\n authDomain: '<your-auth-domain>',\n databaseURL: '<your-database-url>',\n storageBucket: '<your-storage-bucket>'\n };\n firebase.initializeApp(config);\n  // Get a reference to the storage service\n var storage = firebase.storage();\n```", "```jsx\n// Points to the root reference  var storageRef = storage.ref(); // Points to 'images'  var imagesRef = storageRef.child('images');  // Points to 'images/sprite.jpg'  // Note that you can use variables to create child values  var fileName =  'sprite.jpg';  var spaceRef = imagesRef.child(fileName);  // File path is 'images/sprite.jpg'  var path = spaceRef.fullPath // File name is 'sprite.jpg'  var name = spaceRef.name // Points to 'images'  var imagesRef = spaceRef.parent; \n```", "```jsx\n// Retrieve Firebase Messaging object.\nconst messaging = firebase.messaging();\nmessaging.requestPermission()\n.then(function() {\n console.log('Notification permission granted.');\n // Retrieve the Instance ID token for use with FCM.\n // ...\n})\n.catch(function(err) {\n console.log('Unable to get permission to notify.', err);\n});\n```", "```jsx\n<!doctype html>\n<html class=\"no-js\" lang=\"\">\n<head>\n <meta charset=\"utf-8\">\n <title>Chapter 1</title>\n</head>\n<body>\n <!--[if lt IE 8]>\n<p class=\"browserupgrade\">You are using an\n<strong>outdated</strong> browser.\nPlease <a href=\"http://browsehappy.com/\">\nupgrade your browser</a> to improve your\nexperience.</p>\n<![endif]-->\n <!-- Add your site or application content here -->\n <p>Hello world! This is HTML5 Boilerplate.</p>\n <script src=\"https://www.gstatic.com/firebasejs/4.6.1/firebase.js\"></script>\n <script>\n // Initialize Firebase\n var config = {\n apiKey: \"<PROJECT API KEY>\",\n authDomain: \"<PROJECT AUTH DOMAIN>\",\n databaseURL: \"<PROJECT DATABASE AUTH URL>\",\n projectId: \"<PROJECT ID>\",\n storageBucket: \"\",\n messagingSenderId: \"<MESSANGING ID>\"\n };\n firebase.initializeApp(config);\n </script>\n</body>\n</html>\n```", "```jsx\n//HTML Code to show the message\n<p id=\"message\">Hello world! This is HTML5 Boilerplate.</p>\n<script>\n//Firebase script to get the value from database and replace the \"message\".\nvar messageLabel = document.getElementById('message');\n var db = firebase.database();\n db.ref().on(\"value\", function(snapshot) {\n console.log(snapshot.val());\n var object = snapshot.val();\n messageLabel.innerHTML = object.chapter1.example;\n });\n</script>\n\n```", "```jsx\n<!doctype html> <html  class=\"no-js\"  lang=\"\"> <head> <meta  charset=\"utf-8\"> <title>Chapter 1</title><script  src=\"</span>https://www.gstatic.com/firebasejs/4.6.1/firebase.js\"></script> </head> <body><!--[if lt IE 8]> <p class=\"browserupgrade\">You are using an<strong>outdated</strong> browser.Please <a href=\"http://browsehappy.com/\">upgrade your browser</a> to improve yourexperience.\n</p> <![endif]--> <!-- Add your site or application content here -->\n<p  id=\"message\">Hello world! This is HTML5 Boilerplate.</p> <script> // Initialize Firebase var  config  =  {\n apiKey: \"<PROJECT API KEY>\",\n authDomain: \"<PROJECT AUTH DOMAIN>\",\n databaseURL: \"<PROJECT DATABASE AUTH URL>\",\n projectId: \"<PROJECT ID>\",\n storageBucket: \"\",\n messagingSenderId: \"<MESSANGING ID>\"  }; firebase.initializeApp(config); var  messageLabel  =  document.getElementById('message'); var  db  =  firebase.database(); db.ref().on(\"value\",  function(snapshot)  {\n console.log(snapshot.val());\n var object  =  snapshot.val();\n messageLabel.innerHTML  =  object.chapter1.example; });</script> </body> </html>\n```", "```jsx\n<input type=\"text\" id=\"messageInput\" />\n <button type=\"button\" onclick=\"addData()\">Send message</button>\n<h2>Messages</h2>\n <p id=\"list\">sdfdf</p>\n```", "```jsx\n // Save data to firebase\n function addData() {\n var message = messageInput.value;\n   db.ref().child('users').push({\n    field: message\n  });\n  messageInput.value = '';\n }\n```", "```jsx\n// Update list of messages when data is added\ndb.ref().on('child_added', function(snapshot) {\nvar data = snapshot.val();\nconsole.log(\"New Message Added\", data);\n  snapshot.forEach(function(childSnap) {\n    console.log(childSnap.val());\n    var message = childSnap.val();\n    messages.innerHTML = '\\n' + message.field;\n  });\n});\n```", "```jsx\n<!doctype html>\n<html class=\"no-js\" lang=\"\">\n<head>\n <meta charset=\"utf-8\">\n <title>Chapter 1</title>\n <script src=\"https://www.gstatic.com/firebasejs/4.6.1/firebase.js\"></script>\n</head>\n<body>\n <!-- Add your site or application content here -->\n <p id=\"message\">Hello world! This is HTML5 Boilerplate.</p>\n <input type=\"text\" id=\"messageInput\" />\n <button type=\"button\" onclick=\"addData()\">Send message</button> \n <h2>Messages</h2>\n <p id=\"list\"></p>\n<script>\n // Initialize Firebase\n var config = {\n   apiKey: \"<PROJECT API KEY>\",\n   authDomain: \"<PROJECT AUTH DOMAIN>\",\n   databaseURL: \"<PROJECT DATABASE AUTH URL>\",\n   projectId: \"<PROJECT ID>\",\n   storageBucket: \"\",\n   messagingSenderId: \"<MESSANGING ID>\"\n };\n firebase.initializeApp(config);\n\n var messageLabel = document.getElementById('message');\n var messageInput = document.getElementById('messageInput');\n var messages = document.getElementById('list'); \n var db = firebase.database();\n db.ref().on(\"value\", function(snapshot) {\n     var object = snapshot.val();\n     messageLabel.innerHTML = object.chapter1.example;\n    //console.log(object);\n });\n// Save data to firebase\n function addData() {\n   var message = messageInput.value;\n   db.ref().child('messages').push({\n   field: message\n });\n   messageInput.value = '';\n }\n// Update results when data is added\n db.ref().on('child_added', function(snapshot) {\n   var data = snapshot.val();\n   console.log(\"New Message Added\", data);\n   snapshot.forEach(function(childSnap) {\n   console.log(childSnap.val());\n   var message = childSnap.val();\n   messages.innerHTML = '\\n' + message.field;\n  });\n });\n </script>\n</body>\n</html>\n```"]