["```jsx\n<script crossorigin src=\"https://unpkg.com/react@16/umd/react.development.js\"></script>\n<script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-dom.development.js\"></script>\n```", "```jsx\n<script crossorigin src=\"https://unpkg.com/react@16/umd/react.production.min.js\"></script>\n<script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\"></script>\n```", "```jsx\n<!doctype html>\n<html class=\"no-js\" lang=\"\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>ReactJs and Firebase - Chapter 2</title>\n    <script crossorigin  \n     src=\"https://unpkg.com/react@16/umd/react.development.js\">\n    </script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-\n     dom.development.js\"></script>\n</head>\n<body>\n    <!-- Add your site or application content here -->\n    <p>Hello world! This is Our First React App with Firebase.</p>\n</body>\n</html>\n```", "```jsx\nReactDOM.render( ReactElement element, DOMElement container,[function callback] )\n```", "```jsx\n<script src=\"https://unpkg.com/babel-standalone@6.15.0/babel.min.js\"></script>\n```", "```jsx\n<script type=\"text/babel\">\nReactDOM.render(\n<h1>Hello, world!</h1>,\ndocument.getElementById('hello')\n);\n</script>\n```", "```jsx\nvar myReactElement = <div className=\"hello\" />;\nReactDOM.render(myReactElement, document.getElementById('example'));\n```", "```jsx\nvar ReactComponent = React.createClass({/*...*/});\nvar myReactElement = <ReactComponent someProperty={true} />;\nReactDOM.render(myReactElement, document.getElementById('example'));\n```", "```jsx\nrender: function () {\nreturn React.DOM.div({className:\"title\"},\n\"Page Title\",\nReact.DOM.hr()\n);\n}\n```", "```jsx\nrender: function () {\nreturn <div className=\"title\">\nPage Title<hr />\n</div>;\n}\n```", "```jsx\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>Add ticket form with JSX</title>\n    <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\n</head>\n<body>\n    <script crossorigin \n    src=\"https://unpkg.com/react@16/umd/react.development.js\"></script>\n    <script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-\n    dom.development.js\"></script>\n    <script src=\"https://unpkg.com/babel-\n    standalone@6.15.0/babel.min.js\"></script>\n</body>\n</html>\n```", "```jsx\n <div class=\"container\">\n   <div class=\"row\">\n     <nav class=\"navbar navbar-inverse navbar-static-top\" role=\"navigation\">\n   <div class=\"container\">\n    <div class=\"navbar-header\">\n     <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n     <span class=\"sr-only\">Toggle navigation</span>\n     <span class=\"icon-bar\"></span>\n     <span class=\"icon-bar\"></span>\n     <span class=\"icon-bar\"></span>\n </button>\n <a class=\"navbar-brand\" href=\"#\">HelpDesk</a>\n </div>\n <div class=\"navbar-collapse collapse\">\n <ul class=\"nav navbar-nav\">\n    <li class=\"active\"><a href=\"#\">Add Ticket</a></li>\n </ul>\n </div>\n </div>\n </nav>\n <div class=\"col-lg-12\">\n <h2>Add Ticket</h2>\n <hr/> \n <div id=\"form\">\n    <!-- Here we'll load load our AddTicketForm component with help of \"form\" id -->\n </div>\n </div>\n </div>\n </div>\n```", "```jsx\nclass AddTicketForm extends React.Component {\n    constructor() {\n        super();\n        this.handleSubmitEvent = this.handleSubmitEvent.bind(this);\n    }\n    handleSubmitEvent(event) {\n        event.preventDefault();\n    }\n    render() {\n        var style = {color: \"#ffaaaa\"};\n        return ( <form onSubmit = {this.handleSubmitEvent}>\n   <div className = \"form-group\">\n      <label htmlFor = \"email\"> Email <span style = {style}> * </span></label>\n      <input type = \"text\" id = \"email\" className = \"form-control\" placeholder = \"Enter your email address\" required />\n   </div>\n   <div className = \"form-group\">\n      <label htmlFor = \"issueType\"> Issue Type <span style = {style}> * </span></label>\n      <select className = \"form-control\" id = \"issueType\" required>\n         <option value = \"\"> -- -- - Select-- -- < /option> \n         <option value = \"Access Related Issue\"> Access Related Issue </option>\n         <option value = \"Email Related Issues\"> Email Related Issues </option>\n         <option value = \"Hardware Request\"> Hardware Request</option>\n         <option value = \"Health & Safety\"> Health & Safety </option>\n         <option value = \"Network\"> Network </option> \n         <option value = \"Intranet\"> Intranet </option> \n         <option value = \"Other\"> Other </option> \n      </select>\n   </div>\n   <div className = \"form-group\">\n      <label htmlFor = \"department\"> Assign Department \n      <span style = {style} > * </span>\n      </label>\n      <select className=\"form-control\" id=\"department\" required>\n         <option value = \"\"> -- -- - Select-- -- </option> \n         <option value = \"Admin\" > Admin </option>\n         <option value = \"HR\"> HR </option>\n         <option value = \"IT\"> IT </option> \n         <option value = \"Development\"> Development </option>\n      </select>\n   </div>\n   <div className = \"form-group\">\n      <label htmlFor = \"comments\"> Comments \n      <span style = {style}> * </span>\n      </label>\n      ( <span id = \"maxlength\"> 200 </span> characters max)\n      <textarea className = \"form-control\" rows = \"3\" id = \"comments\" required> </textarea> \n   </div>\n   <div className = \"btn-group\">\n      <button type = \"submit\" className = \"btn btn-primary\"> Submit </button> \n      <button type = \"reset\" className = \"btn btn-default\"> cancel </button> \n   </div>\n</form>\n            );\n        }\n    });\nReactDOM.render( <AddTicketForm /> ,\n    document.getElementById('form')\n);\n```", "```jsx\n<script src=\"js/react-form.js\" type=\"text/babel\"></script>\n```", "```jsx\nconst TextInput = ({\n    type,\n    name,\n    label,\n    onChange,\n    placeholder,\n    value,\n    required\n}) => {\n    return ( <div className = \"form-group\">\n        <label htmlFor = {name} > {label} </label> \n        <div className = \"field\">\n        <input type = {type}  name = {name} className =\"form-control\" placeholder = {         placeholder} value = {value} onChange = {onChange} required = {required}/> \n</div> \n</div>\n    )\n}\n```", "```jsx\n<TextInput\n type=\"email\"\n name=\"email\"\n label=\"Email\"\n placeholder=\"Enter your email address\"\n required={true}/>\n```", "```jsx\n<form>\n    <FieldGroup id=\"formControlsEmail\" type=\"email\" label=\"Email \n    address\" placeholder=\"Enter email\" />\n    <FormGroup controlId=\"formControlsSelect\">\n        <ControlLabel>Issue Type</ControlLabel>\n        <FormControl componentClass=\"select\" placeholder=\"select\">\n            <option value=\"select\">select</option>\n            <option value=\"other\">...</option>\n        </FormControl>\n    </FormGroup>\n    <FormGroup controlId=\"formControlsSelect\">\n        <ControlLabel>Assign Department</ControlLabel>\n        <FormControl componentClass=\"select\" placeholder=\"select\">\n            <option value=\"select\">select</option>\n            <option value=\"other\">...</option>\n        </FormControl>\n    </FormGroup>\n    <FormGroup controlId=\"formControlsTextarea\">\n        <ControlLabel>Textarea</ControlLabel>\n        <FormControl componentClass=\"textarea\" placeholder=\"textarea\" \n        />\n    </FormGroup>\n</form>\n```", "```jsx\n<!--Firebase Config -->\n<script src=\"js/firebase-config.js\"></script>\n<!--ReactJS Form -->\n<script type=\"text/babel\" src=\"js/react-form.js\"></script>\n```", "```jsx\n // Initialize Firebase\n var config = {\n apiKey: \"<PROJECT API KEY>\",\n authDomain: \"<PROJECT AUTH DOMAIN>\",\n databaseURL: \"<PROJECT DATABASE AUTH URL>\",\n projectId: \"<PROJECT ID>\",\n storageBucket: \"\",\n messagingSenderId: \"<MESSANGING ID>\"\n };\n firebase.initializeApp(config);\n var firebaseDb = firebase.database();\n```", "```jsx\nclass AddTicketForm extends React.Component {\n    constructor() {\n        super();\n        this.handleSubmitEvent = this.handleSubmitEvent.bind(this);\n    }\n    handleSubmitEvent(event) {\n            event.preventDefault();\n            console.log(\"Email--\" + this.refs.email.value.trim());\n            console.log(\"Issue Type--\" + \n            this.refs.issueType.value.trim());\n            console.log(\"Department--\" + \n            this.refs.department.value.trim());\n            console.log(\"Comments--\" + this.refs.comment.value.trim());\n        },\n        render() {\n            return ();\n        }\n};\n```", "```jsx\n<div>\n   <form ref = \"form\" onSubmit = {this.handleSubmitEvent}>\n      <div className = \"form-group\">\n         <label htmlFor= \"email\"> Email <span style = {style} > * </span></label>\n         <input type = \"text\" id = \"email\" className = \"form-control\" placeholder = \"Enter your email address\" required ref = \"email\" />\n      </div>\n      <div className = \"form-group\">\n         <label htmlFor = \"issueType\"> Issue Type <span style = {style}> * </span></label>\n         <select className = \"form-control\" id = \"issueType\" required ref = \"issueType\">\n            <option value = \"\" > -- -- - Select-- -- </option>\n            <option value = \"Access Related Issue\"> Access Related \n               Issue \n            </option>\n            <option value = \"Email Related Issues\"> Email Related \n               Issues \n            </option>\n            <option value = \"Hardware Request\"> Hardware Request </option>\n            <option value = \"Health & Safety\"> Health & Safety </option>\n            <option value = \"Network\" > Network < /option> \n            <option value = \"Intranet\"> Intranet </option>\n            <option value = \"Other\"> Other </option>\n         </select>\n      </div>\n      <div className = \"form-group\">\n         <label htmlFor = \"department\"> Assign Department <span style = {style} > * </span></label>\n         <select className = \"form-control\" id = \"department\" required ref = \"department\">\n            <option value = \"\"> -- -- - Select-- -- </option>\n            <option value = \"Admin\"> Admin </option> \n            <option value = \"HR\"> HR </option>\n            <option value = \"IT\"> IT </option>\n            <option value = \"Development\"> Development </option>\n         </select>\n      </div>\n      <div className = \"form-group\">\n         <label htmlFor = \"comments\"> Comments <span style = {style\n            } > * </span></label>\n         ( <span id = \"maxlength\"> 200 </span> characters max) <textarea className = \"form-control\" rows = \"3\" id = \"comments\" required ref = \"comment\"> </textarea> \n      </div>\n      <div className = \"btn-group\"><button type = \"submit\" className = \"btn btn-primary\"> Submit </button> <button type = \"reset\" className = \"btn btn-default\"> cancel </button> </div>\n   </form>\n</div>\n```", "```jsx\n//React form data object\nvar data = {\n   date: Date(),\n   email:this.refs.email.value.trim(),\n   issueType:this.refs.issueType.value.trim(),\n   department:this.refs.department.value.trim(),\n   comments:this.refs.comment.value.trim()\n }\n```", "```jsx\n firebaseDb.ref().on('child_added', function(snapshot) {\n var data = snapshot.val();\n  snapshot.forEach(function(childSnap) {\n    console.log(childSnap.val());\n     this.refs.form.reset();\n    console.log(\"Ticket submitted successfully\");\n  });\n });\n```", "```jsx\n firebaseDb.ref().once('value').then(function(snapshot){\n });\n```", "```jsx\nconstructor(){\n    super();\n    this.state = {\n      tickets:[]\n    }\n  }\n```", "```jsx\ncomponentDidMount()  {\n  var  itemsRef  =  firebaseDb.ref('/helpdesk/tickets');\n  console.log(itemsRef);\n  itemsRef.on('value',  (snapshot)  =>  {\n  let  tickets  =  snapshot.val();\n  console.log(tickets);\n  let  newState  = [];\n  for (let  ticket  in  tickets) {\n  newState.push({\n id:tickets[ticket],\n email:tickets[ticket].email,\n issueType:tickets[ticket].issueType,\n department:tickets[ticket].department,\n comments:tickets[ticket].comments,\n date:tickets[ticket].date\n  });\n  }\n  this.setState({\n tickets:  newState\n  });\n  }); },\n```", "```jsx\nrender() {\n  return (<table className=\"table\">\n<thead>\n<tr> \n    <th>Email</th>\n    <th>Issue Type</th> \n    <th>Department</th> \n    <th>Comments</th> \n    <th>Date</th> \n</tr>\n</thead>\n<tbody>\n {\n   this.state.tickets.map((ticket) => \n    { return ( \n    <tr key={ticket.id}> \n        <td>{ticket.email}</td> \n        <td>{ticket.issueType}</td> \n        <td>{ticket.department}</td> \n        <td>{ticket.comments}</td> \n        <td>{ticket.date}</td> \n</tr> )})\n } \n</tbody>\n</table>\n)}\n```", "```jsx\n <div class=\"col-lg-10\">\n <h2>View Tickets</h2>\n <hr>\n    <div id=\"table\" class=\"table-responsive\">\n      <!-- React Component will render here -->\n    </div>\n </div>\n </div>\n </div>\n```"]