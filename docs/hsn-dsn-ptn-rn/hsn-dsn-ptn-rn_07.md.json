["```jsx\nyarn add react-navigation\n```", "```jsx\n// src / Chapter 7 / Example 2 / src / screens / TaskListScreen.js export const TaskListScreen = () => (\n    <View>\n **<AddTaskContainer />    // Please note slight refactor** **<TaskListContainer />   // to two separate containers** </View> );   export default withGeneralLayout(TaskListScreen);\n```", "```jsx\n// src / Chapter 7 / Example 2 / src / screens / index.js\n\nexport default createStackNavigator({\n    TaskList: {\n        screen: TaskListScrn,\n  path: 'project/task/list', // later on: 'project/:projectId/task/list'\n  navigationOptions: { header: null }\n    },\n  ProjectList: {\n        screen: () => <View><Text>Under construction.</Text></View>,\n  path: 'project/:projectId'\n  },\n // ...\n}, {\n    initialRouteName: 'TaskList',\n  initialRouteParams: {}\n}); \n```", "```jsx\n// src / Chapter 7 / Example 3 / src / screens / index.js\n// ...\nTask: {\n    screen: () => <View><Text>Under construction.</Text></View>,\n  path: 'project/task/:taskId',\n  navigationOptions: ({ navigation }) => ({\n        title: `Task ${navigation.state.params.taskId} details`  })\n},\n// ...\n```", "```jsx\n// src / Chapter 7 / Example 3 / src / components / NavigateButton.js\n// ...\nexport const NavigateButton = ({\n    navigation, to, data, text\n}) => (\n    <Button\n  onPress={() => navigation.navigate(to, data)}\n        title={text}\n    /> );\n// ...\nexport default withNavigation(NavigateButton);\n```", "```jsx\n// src / Chapter 7 / Example 3 / src / features / tasks / views / TaskList.js\n// ...\n<View style={styles.taskText}>\n <Text style={styles.taskName}>\n  {task.name}\n    </Text>\n <Text>{task.description}</Text> </View> <View style={styles.taskActions}>\n <NavigateButton  data={{ taskId: task.id }}\n to=\"Task\"\n  text=\"Details\" **/>** </View>\n// ... \n```", "```jsx\n// src / Chapter 7 / Example 4 / src / screens / index.js\nexport default createBottomTabNavigator(\n    {\n        Home: createStackNavigator({\n            TaskList: {\n                // ...\n            },\n            // ...\n        }, {\n            // ...\n        }),\n  Search: () => (\n            <View>\n <Text>Search placeholder. Under construction.</Text>\n </View>  ),\n  Notifications: () => (\n            <View>\n <Text>Notifications placeholder. Under construction.</Text>\n </View>  )\n    },\n  {\n        initialRouteName: 'Home',\n  initialRouteParams: {}\n    }\n); \n```", "```jsx\n// src / Chapter 7 / Example 4 / src / screens / index.js\n// ...\n{\n    initialRouteName: 'Home',\n  initialRouteParams: {},\n  navigationOptions: () => ({\n tabBarVisible: false\n  })\n}\n// ...\n```", "```jsx\n// src / Chapter 7 / Example 4 / src / components / NavigateIcon.js export const NavigateIcon = ({\n    navigation, to, data, ...iconProps\n}) => (\n    <Ionicons\n  {...iconProps}\n        onPress={() => navigation.navigate(to, data)}\n    /> ); // ... export default withNavigation(NavigateIcon); \n```", "```jsx\n// src / Chapter 7 / Example 4 / src / layout / views / GeneralAppView.js\nimport NavIonicons from '../../components/NavigateIcon';\n<View style={styles.footer}>\n <NavIonicons  to**=\"Home\"**\n // ...   />\n <NavIonicons  to**=\"Search\"**\n        // ...   />\n <NavIonicons  to**=\"Notifications\"**\n        // ...   /> </View>\n```", "```jsx\n// src / Chapter 7 / Example 4 / src / screens / index.js\n// ...\nSearch: withGeneralLayout(() => (\n    <View>\n <Text>Search placeholder. Under construction.</Text>\n </View> )), Notifications: withGeneralLayout(() => (\n    <View>\n <Text>Notifications placeholder. Under construction.</Text>\n </View> )) // ...\n```", "```jsx\n// src / Chapter 7 / Example 5 / src / screens / index.js\n// ...\nexport default createDrawerNavigator({\n    Home: TabNavigation,\n  Profile: withGeneralLayout(() => (\n        <View>\n <Text>Profile placeholder. Under construction.</Text>\n </View>  )),\n  Settings: withGeneralLayout(() => (\n        <View>\n <Text>Settings placeholder. Under construction.</Text>\n </View>  ))\n}); \n```", "```jsx\n// src / Chapter 7 / Example 5 / src / layout / views / MenuView.js\nconst Hamburger = props => (<Ionicons\n  onPress={() => props.navigation.toggleDrawer()}\n    name=\"md-menu\"\n  size={32}\n    color=\"black\" />); // ...   const MenuView = withNavigation(Hamburger); \n```", "```jsx\n// src / Chapter 7 / Example 5 / src / layout / views / GeneralAppView.js\n<View style={styles.header}>\n // ...  <View style={styles.headerMenuIcon}>\n <MenuView /> </View> </View> \n```", "```jsx\n// src / Chapter 7 / Example 7 / src / screens / index.js\nimport { Navigation } from 'react-native-navigation';\n// ...\nexport default () => Navigation.events().registerAppLaunchedListener(() => {\n    Navigation.setRoot({\n        // ...\n    });\n});\n```", "```jsx\nimport start from './src/screens/index';   export default start();\n```", "```jsx\n// src / Chapter 7 / Example 7 / src / screens / index.js\n// ...\nNavigation.setRoot({\n    root: {\n        bottomTabs: {\n            children: [\n            ],\n  options: {\n                topBar: {\n                    visible: false**,**\n  drawBehind: true,\n  animate: false\n  },\n  bottomTabs: {   animate: true\n  }   }\n        }\n    }\n});\n```", "```jsx\n// src / Chapter 7 / Example 7 / src / screens / index.js\n// ...\nNavigation.registerComponent(\n    'HDPRN.TabNavigation.TaskList',\n  () => TaskStackNavigator, store, Provider\n); Navigation.registerComponent(\n    'HDPRN.TabNavigation.SearchScreen',\n  () => SearchScreen, store, Provider\n); Navigation.registerComponent(\n    'HDPRN.TabNavigation.NotificationsScreen',\n  () => NotificationsScreen, store, Provider\n); \n```", "```jsx\n// src / Chapter 7 / Example 7 / src / screens / index.js\n// ...\nchildren: [\n    {\n        stack: {\n            id: 'HDPRN.TabNavigation.TaskListStack',\n            // TODO: Check below, let's handle this separately\n        }\n    },\n  {\n        component: {\n            id: 'HDPRN.TabNavigation.**SearchScreen**',\n  name: 'SearchScreen',\n  options: {\n                bottomTab: {\n                    text: 'Search',\n                    // Check sources if you want to know\n                    // how to get this icon variable\n  icon: search \n                }\n            }\n        }\n    },\n // Notifications config object omitted: similar as for Search\n]\n```", "```jsx\nstack: {\n    id: 'HDPRN.TabNavigation.TaskListStack',\n  children: [{\n        component: {\n            id: 'HDPRN.TabNavigation.**TaskList**',\n  name: 'HDPRN.TabNavigation.TaskList',\n  }\n    }],\n  options: {\n        bottomTab: {\n            text: 'Tasks',\n  icon: home\n        }\n    }\n}\n```"]