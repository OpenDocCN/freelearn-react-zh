["```jsx\nRoute.propTypes  = { computedMatch:  PropTypes.object, // private, from <Switch> path:  PropTypes.string, exact:  PropTypes.bool, strict:  PropTypes.bool, sensitive:  PropTypes.bool, component:  PropTypes.func, render:  PropTypes.func, children:  PropTypes.oneOfType([PropTypes.func, PropTypes.node]), location:  PropTypes.object };\n```", "```jsx\n<div className=\"container\">\n     <Route\n         path=\"/\"\n         component={HomeComponent} \n     />\n     <Route\n         path=\"/dashboard\"\n         component={DashboardComponent} \n     />\n </div>\n```", "```jsx\nInside Home route\nInside Dashboard route\n```", "```jsx\n..\n <Route\n     path=\"/\"\n     component={HomeComponent}\n     exact\n />\n ..\n```", "```jsx\n<Route\n    path=\"/dashboard/\"\n    component={DashboardComponent}\n    strict\n/>\n```", "```jsx\n<Route\n path=\"/Dashboard\" component={DashboardComponent} **sensitive** />\n```", "```jsx\n<Route\n path=**\"/Dashboard\"** component={DashboardComponent} **sensitive** /> <Route path=**\"/dashboard\"** component={StockListComponent} **sensitive** />\n```", "```jsx\n<Route\n    path=\"/user\"\n    render={() => (\n <div> Inside User Route </div>\n )}\n/>\n```", "```jsx\n<Route\n    path=\"/sidenav\"\n    children={() => (\n <div> Inside Sidenav route </div>\n )}\n/>\n```", "```jsx\n<Route\n path=\"/sidenav\"\n children={() => ( <div> Inside Sidenav route </div>\n )} /> <Route path=\"/user\" render={() => ( <div> Inside User route </div> )} />\n```", "```jsx\n<Route\n path=\"/user\" render={({ match }) => { console.log(match);\n        return ( <div> Inside User route </div> ); }} />\n```", "```jsx\nurl - '/user'\npath - '/user'\nparams - {}\nisExact - true\n```", "```jsx\n<Route\n path=\"/sidenav\" children={({ match }) => { console.log(match) return ( <div> Inside Sidenav route </div> ); }} />\n```", "```jsx\n<Route\n to='/github/**:githubID**'\n    component={GitHubComponent}  />\n```", "```jsx\nexport  class  GitHubComponent  extends  Component { render() { const { match: { params } } =  this.props; return ( <div> In GitHubComponent <br  /> GitHub ID - {params.githubID} </div> ) } }\n```", "```jsx\nIn GitHubComponent\nGitHub ID - mjackson\n```", "```jsx\n<Route\n path=\"/github/**:githubID**/**:twitterID**\" component={GitHubComponent} />\n```", "```jsx\n<Route\n path=\"/github/:githubID/**:twitterID?**\" component={GitHubComponent} />\n```", "```jsx\n...\n<Route\n path=\"/github/**:githubID(\\w+)**\" component={GitHubComponent} /> <Route path=\"/user/**:userID(\\d+)**\" component={UserComponent} />\n...\n```", "```jsx\n<Router>\n    <Route path='/' component={Container}>\n        <IndexRoute component={Home} />\n        <Route path='user' component={User}>\n            <IndexRoute component={Twitter} />\n            <Route path='instagram' component={Instagram} />\n        </Route>\n    </Route>\n</Router>\n```", "```jsx\n<Route\n path=\"/category\" component={CategoryComponent} />\n```", "```jsx\nexport  const  CategoryComponent  = ({ match }) => { return ( <div  className=\"nested-route-container\"> <div  className=\"root-info\"> <h4> Root: </h4> <h5> path: {match.path}, isExact: {match.isExact.toString()}</h5> </div> <Route path={`${match.url}/pictures`} render={({ match }) => { return ( <div> <h4> Viewing pictures: </h4> <h5> path: {match.path}, \n                                 isExact: {match.isExact.toString**()}** </h5> </div>  ) }} /> <Route path={`${match.url}/books`} render={({ match }) => { return ( <div> <h4> Viewing books: </h4> <h5> path: {match.path},\n                                 isExact: {match.isExact.toString()**}** </h5> <Route path={`${match.url}/popular`} render={({ match }) => ( <div> Inside popular, \n                                          path: {match.path} </div> )}  /> </div>  ) }} /> </div> ) }\n```", "```jsx\n         Root:\n         path: /category, isExact: true\n```", "```jsx\n            Root:\n            path: /category, isExact: false\n            Viewing pictures:\n           path: /category/pictures, isExact: true\n```", "```jsx\n              Root:path: /category, \n              isExact: false\n              Viewing books:\n             path: /category/books, isExact: false\n             Inside popular, \n             path: /category/books/popular\n```", "```jsx\nconst  STOCK_ROUTES  = [ { path:  'stats', component:  StatsComponent, }, { path:  'news', component:  NewsComponent }, { path:  'trending', component:  TrendingComponent  } ];\n```", "```jsx\n...\nrender() {\n const { match } =  this.props; return ( <div> Inside Stocks, try /stocks/stats or /stocks/news or /stocks/trending { STOCK_ROUTES.map((route, index) => { return ( <Route key={index} path={`${match.url}/${route.path}`} component={route.component} /> ) **})** } </div> ); }\n...\n```"]