["```jsx\nnpm install --save react-router\n```", "```jsx\nimport { Router } from 'react-router'\n```", "```jsx\nimport  createBrowserHistory  from  'history/createBrowserHistory'; const customHistory = createBrowserHistory()\n```", "```jsx\nReactDOM.render(\n **<**Router  history={customHistory}**>** <App  /> </Router>, document.getElementById('root'));\n```", "```jsx\nclass  App  extends  Component { state  = { customHistory:  createBrowserHistory() } componentDidMount() { this.setState({ customHistory:  createBrowserHistory() **});** } render() { return ( <Router  history={**this**.state.customHistory}> <Route path=\"/\" render={() =>  <div> In Home </div>}  /> </Router> ); } }\n```", "```jsx\nexport MemoryRouter from \"./MemoryRouter\";\nexport Prompt from \"./Prompt\";\nexport Redirect from \"./Redirect\";\nexport Route from \"./Route\";\nexport Router from \"./Router\";\nexport StaticRouter from \"./StaticRouter\";\nexport Switch from \"./Switch\";\nexport generatePath from \"./generatePath\";\nexport matchPath from \"./matchPath\";\nexport withRouter from \"./withRouter\";\n```", "```jsx\nexport BrowserRouter from \"./BrowserRouter\";\nexport HashRouter from \"./HashRouter\";\nexport Link from \"./Link\";\nexport MemoryRouter from \"./MemoryRouter\";\nexport NavLink from \"./NavLink\";\nexport Prompt from \"./Prompt\";\nexport Redirect from \"./Redirect\";\nexport Route from \"./Route\";\nexport Router from \"./Router\";\nexport StaticRouter from \"./StaticRouter\";\nexport Switch from \"./Switch\";\nexport generatePath from \"./generatePath\";\nexport matchPath from \"./matchPath\";\nexport withRouter from \"./withRouter\";\n```", "```jsx\nimport { Route } from \"react-router\";\nexport default Route;\n```", "```jsx\nstatic propTypes = {\n    basename: PropTypes.string,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number,\n    children: PropTypes.node\n};\n```", "```jsx\nimport { createBrowserHistory as createHistory } from \"history\";\nimport Router from \"./Router\";\n\nclass  BrowserRouter  extends  React.Component {    ...\n    history = createHistory(this.props);\n    ...\n    render() {\n        return <Router \n                   history={this.history}\n                   children={this.props.children}\n               />;\n    }\n}\n```", "```jsx\n<BrowserRouter basename=\"/admin\">\n    <App />\n</BrowerRouter>\n```", "```jsx\n<BrowserRouter  basename=\"/admin\">\n <div  className=\"component\">\n <nav> <Link  to=\"/\">Home</Link**>** <Link  to=\"/dashboard\">Dashboard</Link**>** </nav>\n    </div> </BrowserRouter>\n```", "```jsx\n<a href='/admin'>Home</a>\n<a href='/admin/dashboard'>Dashboard</a>\n```", "```jsx\n<BrowserRouter forceRefresh={true}>\n    <Link to=\"/dashboard\">Dashboard</Link>\n</BrowserRouter>\n```", "```jsx\n<BrowserRouter keyLength={10}>\n    <div  className=\"container\"> <nav> <Link  to=\"/dashboard\">Dashboard</Link> <Link  to=\"/user\">User</Link> </nav> <Route path=\"/dashboard\" render={({ location }) => <div> In Dashboard, Location Key: {location.key}  </div> }\n        />\n        <Route path=\"/user\" render={({ location }) => <div> In User, Location Key: {location.key}  </div> }\n        />\n    </div>\n</BrowserRouter>\n```", "```jsx\n<BrowserRouter getUserConfirmation={this.userConfirmationFunc**}**>\n    <div className=\"container\">\n        <nav>  <Link  to=\"/dashboard\">Dashboard</Link> <Link  to=\"/user\">User</Link> </nav>\n        <Route path=\"/dashboard\" render={({ location }) => <div> In Dashboard, Location Key: {location.key}  </div> }\n        />\n        <Route path=\"/user\" render={({ location }) => <div> In User, Location Key: {location.key} <Prompt  message=\"This is shown in a confirmation \n                     window\" **/>** </div> }\n        />\n    </div>\n</BrowserRouter>\n```", "```jsx\nuserConfirmationFunc  = (message, callback) => { const  status  =  window.confirm(message); callback(status**);** }\n```", "```jsx\nnpm install --save @material-ui/core\n```", "```jsx\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from  '@material-ui/core'; export  class **ConfirmationDialog** extends  Component { render() { const { message, handleClose, isOpen } =  this.props; return ( <Dialog open={isOpen**}**> <DialogTitle>Custom Prompt</DialogTitle> <DialogContent>{message}</DialogContent> <DialogActions> <Button onClick={handleClose.bind(this, true)}> OK\n                    </Button> <Button  onClick={handleClose.bind(this, false)}> CANCEL\n                    </Button> </DialogActions> </Dialog> )\n    }\n}\n```", "```jsx\nclass  App  extends  Component {    state  = { showConfirmationDialog:  false, message:  '', callback:  null }\n    ...\n```", "```jsx\n... userConfirmationFunc  = (message, callback) => { this.setState({ showConfirmationDialog:  true, message:  message, callback:  callback });\n    }\n```", "```jsx\n    ...\n handleClose(status) { this.state.callback(status**)**; this.setState({ showConfirmationDialog:  false, message:  '', callback:  null })\n    }\n```", "```jsx\n    ...\n    render() { return ( <BrowserRouter getUserConfirmation={this.userConfirmationFunc**}**> ...\n                <Route path=\"/user\" render={({ location }) => {\n                        return ( <div> In User, Location Key: {location.key} <Prompt  message=\"This is shown in a \n                             confirmation modal\" **/>** </div>\n                        ); }}\n                />\n                <ConfirmationDialog isOpen={this.state.showConfirmationDialog} message={this.state.message} handleClose={this.handleClose.bind(this)} />\n                ...\n            </BrowserRouter>\n        )\n    }\n}\n```", "```jsx\nwww.packtpub.com/react-router\n```", "```jsx\nwww.packtpub.com/#/react-router\n```", "```jsx\nimport { createHashHistory  as  createHistory } from  \"history\";  class  HashRouter  extends  React.Component {    ...\n    history =  createHistory(this.props**)**; ...\n    render() {\n        return **<Router \n                  history={this.history}\n                  children={this.props.children} \n               />**;\n    } }\n```", "```jsx\nstatic propTypes = {\n    basename: PropTypes.string,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"]),\n    children: PropTypes.node\n};\n```", "```jsx\n<HashRouter hashType=\"slash\">\n    <App />\n</HashRouter>\n```", "```jsx\n<HashRouter hashType=\"noslash\">\n```", "```jsx\n<HashRouter  hashType=\"hashbang\">\n```"]