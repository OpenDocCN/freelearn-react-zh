["```jsx\nimport { Redirect } from 'react-router-dom';\n\nexport class HomeComponent extends Component {\n    render() {\n        return (\n            <Redirect to='/dashboard' />\n        )\n    }\n}\n```", "```jsx\n<Redirect \n    to={{\n        pathname: '/dashboard',\n        search: '?q=1',\n        hash: '#hash',\n        state: { from: match.url }\n      }} \n/>\n```", "```jsx\nexport class DashboardComponent extends Component {\n    render() {\n        const { location } = this.props;\n        return (\n            <div>\n                In DashboardComponent <br />\n                From : {location.state.from}\n            </div>\n        )\n    }\n}\n```", "```jsx\n<Redirect to=\"/dashboard\" push />\n```", "```jsx\nexport class UserComponent extends Component {\n    render() {\n        const { location } = this.props;\n        return (\n            <div>\n                Username: {location && location.state ? location.state.userName \n                 : ''} <br />\n                From: {location && location.state ? location.state.from : ''} \n                 <br />\n                <button onClick={this.logout}>LOGOUT</button>\n            </div>\n        )\n    }\n}\n```", "```jsx\nexport class UserComponent extends Component {\n    state = {\n       isUserLoggedIn: false\n    }\n    componentWillMount() {\n        const isUserLoggedIn = localStorage.getItem('isUserLoggedIn');\n        this.setState({isUserLoggedIn});\n    }\n    render() {\n    ...\n    }\n}\n```", "```jsx\nexport class UserComponent extends Component {\n    ...\n    render() {\n        const { location } = this.props;\n        if (!this.state.isUserLoggedIn) {\n            return (\n                <Redirect to=\"/login\" />\n            );\n        }\n        ...\n    }\n}\n```", "```jsx\nexport class UserComponent extends Component {\n    logout = (event) => {\n        localStorage.removeItem('isUserLoggedIn');\n        this.setState({ isUserLoggedIn: false });\n    }\n    ...\n}\n```", "```jsx\nexport class StocksComponent extends Component {\n    ...\n    render() {\n        const {match } = this.props;\n        if (!this.state.isUserLoggedIn) {\n            return (\n                <Redirect \n                    to={{\n                        pathname: \"/login\",\n                        state: { callbackURL: match.url }\n                    }}\n                />\n            )\n        }\n\n        return (\n            <div>\n                In StocksComponent\n            </div>\n        )\n    }\n}\n```", "```jsx\nexport class LoginComponent extends Component {\n    ...\n    render() {\n        const { location: { state } } = this.props;\n        if (this.state.isUserLoggedIn) {\n            return (\n                <Redirect \n                    to={{\n                        pathname: state && \n                        state.callbackURL || \"/user\",\n                        state: {\n                            from: this.props.match.url,\n                            userName: this.state.userName\n                        }\n                    }} \n                />\n            )\n        }\n        ...\n    }\n}\n```", "```jsx\n<Route\n    path=\"/login\"\n    component={LoginComponent}\n/>\n<Route\n    path=\"/:id\"\n    render={({ match }) => \n        <div> Route with path {match.url}</div>\n    }\n/>\n```", "```jsx\n<Switch>\n    <Route\n        path=\"/login\"\n        component={LoginComponent}\n    />\n    <Route\n        path=\"/:id\"\n```", "```jsx\n        render={({ match }) =>\n            <div> Route with path {match.url}</div>\n        }\n    />\n</Switch>\n```", "```jsx\n<Switch>\n    <Route\n        path=\"/\"\n        component={LoginComponent}\n    />\n    <Route\n        path=\"/dashboard\"\n        component={DashboardComponent}\n    />\n</Switch>\n```", "```jsx\n<Switch>\n    <Route\n        path=\"/github\"\n        component={LoginComponent}\n    />\n    <Route\n        path=\"/github/:userId\"\n        component={DashboardComponent}\n    />\n</Switch>\n```", "```jsx\n<Switch>\n    <Route\n        path=\"/login\"\n        component={LoginComponent}\n    />\n    <Route\n        path=\"/user\"\n        render={({ match }) =>\n            <div> Route with path {match.url}</div>\n        }\n    />\n    <Route\n        render={({ location }) =>\n            <div> 404 - {location.pathname} not \n            found</div>\n        }\n    />\n</Switch>\n```", "```jsx\n<Switch>\n    ...\n    <Route\n        path=\"*\"\n        render={({ location }) =>\n            <div> 404 - {location.pathname} not \n            found</div>\n        }\n    />\n</Switch>\n```", "```jsx\n<Switch>\n    <Route\n        path=\"/login\"\n        component={LoginComponent}\n    />\n    <Route\n        path=\"/user\"\n        render={({ match }) =>\n            <div> Route with path {match.url}</div>\n        }\n    />\n    <Redirect to=\"/home\" />\n</Switch>\n```", "```jsx\n<Switch>\n    <Route\n        path=\"/login\"\n        component={LoginComponent}\n    />\n    <Route\n        path=\"/user\"\n        render={({ match }) =>\n            <div> Route with path {match.url}</div>\n        }\n    />\n    <Redirect\n        from=\"/home\"\n        to=\"/login\"\n    />\n    <Redirect to=\"/home\" />\n</Switch>\n```"]