["```jsx\n<div class=\"alert alert-info alert-dismissible fade in\" role=\"alert\">\n\u00a0\u00a0\u00a0 <button type=\"button\" class=\"close\" data-dismiss=\"alert\"\n    aria-label=\"Close\">\n\u00a0\u00a0\u00a0 <span aria-hidden=\"true\">&times;</span>\n\u00a0\u00a0\u00a0 </button>\n</div>\n\n```", "```jsx\nvar BootstrapAlert = React.createClass({  \n    render: function() { \n        return ( \n            <div className={(this.props.className) + ' alert'}\n            role=\"alert\" ref=\"alertMsg\"> \n                <button type=\"button\" className=\"close\"\n                data-dismiss=\"alert\" aria-label=\"Close\" onClick=\n                {this.handleClose}> \n                <span aria-hidden=\"true\">\u00d7</span></button> \n                <strong>Ooops!</strong> You reached the max limit  \n            </div>     \n        ); \n    } \n}); \n\n```", "```jsx\ncomponentDidMount: function() { \n    // When the component is mount into the DOM \n    $(this.refs.alertMsg).hide(); \n          // Bootstrap's alert events \n// functionality. Lets hook into one of them: \n    $(this.refs.alertMsg).on('closed.bs.alert', this.handleClose); \n  }, \n  componentWillUnmount: function() {  \n      $(this.refs.alertMsg).off('closed.bs.alert', this.handleClose); \n  }, \n  show: function() { \n      $(this.refs.alertMsg).show(); \n  }, \n  close: function() { \n      $(this.refs.alertMsg).alert('close'); \n  }, \n  hide: function() { \n      $(this.refs.alertMsg).hide(); \n  }, \n  render: function() { \n      return ( \n      <div className={(this.props.className) + ' alert'} role=\"alert\"\n      ref=\"alertMsg\"> \n          <button type=\"button\" className=\"close\" data-dismiss=\"alert\"\n          aria-label=\"Close\" onClick={this.handleClose}> \n          <span aria-hidden=\"true\">x</span></button> \n          <strong>Oh snap!</strong> You reached the max limit  \n      </div>      \n    ); \n  }, \n}); \n\n```", "```jsx\nvar Teaxtarea = React.createClass({ \n    getInitialState: function() { \n        return {value: 'Controlled!!!', char_Left: max_Char}; \n    }, \n    handleChange: function(event) { \n        var input = event.target.value; \n        this.setState({value: input.substr(0, max_Char),char_Left:   \n        max_Char - input.length}); \n        if (input.length == max_Char){ \n            this.refs.alertBox.show(); \n        } \n        else{ \n        this.refs.alertBox.hide(); \n        } \n    }, \n    handleClose: function() { \n        this.refs.alertBox.close(); \n    }, \n\n    render: function() { \n \u00a0\u00a0  \u00a0\u00a0 var alertBox = null; \n     \u00a0\u00a0 alertBox = ( \n     \u00a0\u00a0  \u00a0\u00a0 <BootstrapAlert className=\"alert-warning fade in\" \n\u00a0\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 ref=\"alertBox\" onClose={this.handleClose}/> \n     \u00a0\u00a0 ); \n  \u00a0\u00a0  \u00a0 return ( \n   \u00a0\u00a0    \u00a0\u00a0 <div className=\"example\"> \n \u00a0\u00a0  \u00a0\u00a0  \u00a0  {alertBox} \n     \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 <div className=\"form-group\"> \n       \u00a0\u00a0  \u00a0 \u00a0\u00a0  \u00a0\u00a0 <label htmlFor=\"comments\">Comments <span style=\n\u00a0\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 {style}>*</span></label(<span{this.state.char_Left}\n                    </span> characters left) \n                    <textarea className=\"form-control\" value=\n                    {this.state.value} maxLength={max_Char} onChange=\n                    {this.handleChange} /> \n                </div> \n            </div> \n        ); \n    } \n}); \nReactDOM.render( \n    <Teaxtarea />, \n    document.getElementById('alert') \n); \n\n```", "```jsx\n'use strict'; \nvar max_Char='140'; \nvar style = {color: \"#ffaaaa\"}; \n\nvar BootstrapAlert = React.createClass({  \n    componentDidMount: function() { \n        // When the component is added \n        $(this.refs.alertMsg).hide();  \n        // Bootstrap's alert class exposes a few events for hooking \n        into modal \n        // functionality. Lets hook into one of them: \n        $(this.refs.alertMsg).on('closed.bs.alert', this.handleClose); \n    }, \n    componentWillUnmount: function() { \n        $(this.refs.alertMsg).off('closed.bs.alert', this.\n        handleClose); \n    }, \n    show: function() { \n        $(this.refs.alertMsg).show(); \n    }, \n    close: function() { \n     \u00a0\u00a0 $(this.refs.alertMsg).alert('close'); \n    }, \n    hide: function() { \n     \u00a0\u00a0 $(this.refs.alertMsg).hide(); \n    },  \n    render: function() { \n     \u00a0\u00a0 return ( \n     \u00a0\u00a0  \u00a0\u00a0 <div className={(this.props.className) + ' alert'}\n            role=\"alert\" ref=\"alertMsg\"> \n       \u00a0\u00a0  \u00a0 \u00a0\u00a0 <button type=\"button\" className=\"close\" \n\u00a0\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 data-dismiss=\"alert\" aria-label=\"Close\" onClick=\n\u00a0\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 {this.handleClose}> \n        \u00a0\u00a0  \u00a0\u00a0  <span aria-hidden=\"true\">\u00d7</span></button> \n         \u00a0\u00a0  \u00a0\u00a0 <strong>oops!</strong> You reached the max limit  \n     \u00a0\u00a0  \u00a0\u00a0 </div> \n\n     \u00a0\u00a0 ); \n    } \n}); \n\nvar Teaxtarea = React.createClass({ \n    getInitialState: function() { \n     \u00a0\u00a0 return {value: '', char_Left: max_Char}; \n    }, \n    handleChange: function(event) { \n     \u00a0\u00a0 var input = event.target.value; \n     \u00a0\u00a0 this.setState({value: input.substr(0, max_Char),char_Left: \n\u00a0\u00a0\u00a0  \u00a0\u00a0 max_Char - input.length}); \n   \u00a0\u00a0  \u00a0if (input.length == max_Char){ \n         \u00a0\u00a0 this.refs.alertBox.show(); \n     \u00a0  } \n   \u00a0\u00a0   else{ \n     \u00a0\u00a0  \u00a0\u00a0 this.refs.alertBox.hide(); \n   \u00a0\u00a0   } \n    }, \n    handleClose: function() { \n        this.refs.alertBox.close(); \n    }, \n\n \u00a0\u00a0 render: function() { \n \u00a0\u00a0  \u00a0\u00a0 var alertBox = null; \n    \u00a0\u00a0  alertBox = ( \n     \u00a0\u00a0  \u00a0\u00a0 <BootstrapAlert className=\"alert-warning fade in\"\n\u00a0\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 ref=\"alertBox\"/> \n        ); \n  \u00a0\u00a0    return ( \n   \u00a0\u00a0  \u00a0 \u00a0\u00a0 <div className=\"example\"> \n   \u00a0\u00a0  \u00a0\u00a0  \u00a0{alertBox} \n     \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 <div className=\"form-group\"> \n       \u00a0\u00a0  \u00a0\u00a0  \u00a0 \u00a0\u00a0 <label htmlFor=\"comments\">Comments <span style=\n\u00a0\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 {style}>*</span></label>(<span\n\u00a0\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 {this.state.char_Left}</span> characters left) \n       \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0<textarea className=\"form-control\" value=\n\u00a0\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 {this.state.value} maxLength={max_Char} onChange=\n\u00a0\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 {this.handleChange} /> \n     \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 </div> \n   \u00a0\u00a0  \u00a0\u00a0   </div> \n        ); \n    } \n}); \nReactDOM.render( \n    <Teaxtarea />, \n    document.getElementById('alert') \n);\n```", "```jsx\n// Bootstrap's button to open the modal \nvar BootstrapButton = React.createClass({ \n    render: function() { \n     \u00a0\u00a0 return ( \n \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 <button {...this.props} \n         \u00a0\u00a0 role=\"button\" \n     \u00a0\u00a0  \u00a0\u00a0 type=\"button\" \n         \u00a0\u00a0 className={(this.props.className || '') + ' btn'} /> \n     \u00a0\u00a0 ); \n    } \n}); \n\n```", "```jsx\nvar BootstrapModal = React.createClass({ \n    componentDidMount: function() { \n        // When the component is mount into the DOM \n        $(this.refs.root).modal({keyboard: true, show: false}); \n\n    \u00a0\u00a0  // capture the Bootstrap's modal events \n     \u00a0\u00a0 $(this.refs.root).on('hidden.bs.modal', this.handleHidden); \n   \u00a0}, \n    componentWillUnmount: function() { \n     \u00a0\u00a0 $(this.refs.root).off('hidden.bs.modal', this.handleHidden); \n    }, \n    close: function() { \n     \u00a0\u00a0 $(this.refs.root).modal('hide'); \n    }, \n    open: function() { \n        $(this.refs.root).modal('show'); \n    }, \n    render: function() { \n     \u00a0\u00a0 var confirmButton = null; \n     \u00a0\u00a0 var cancelButton = null; \n\n    if (this.props.confirm) { \n        confirmButton = ( \n \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 <BootstrapButton \n           \u00a0 \u00a0\u00a0 onClick={this.handleConfirm} \n           \u00a0\u00a0  \u00a0className=\"btn-primary\"> \n           \u00a0\u00a0  \u00a0{this.props.confirm} \n \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 </BootstrapButton> \n        ); \n    } \n    if (this.props.cancel) { \n        cancelButton = ( \n            <BootstrapButton onClick={this.handleCancel} className=\n            \"btn-default\"> \n            {this.props.cancel} \n            </BootstrapButton> \n        ); \n    } \n\n    return ( \n \u00a0\u00a0  \u00a0\u00a0 <div className=\"modal fade\" ref=\"root\"> \n \u00a0\u00a0  \u00a0\u00a0 <div className=\"modal-dialog\"> \n \u00a0\u00a0  \u00a0\u00a0 <div className=\"modal-content\"> \n \u00a0\u00a0  \u00a0\u00a0 <div className=\"modal-header\"> \n \u00a0\u00a0  \u00a0\u00a0 <button \n            type=\"button\" \n            className=\"close\" \n            onClick={this.handleCancel}> \n            &times; \n        </button> \n        <h3>{this.props.title}</h3> \n        </div> \n        <div className=\"modal-body\"> \n            {this.props.children} \n        </div> \n        <div className=\"modal-footer\"> \n            {cancelButton} \n            {confirmButton} \n</div> \n</div> \n</div> \n</div> \n    ); \n  }, \n  handleCancel: function() { \n      if (this.props.onCancel) { \n          this.props.onCancel(); \n      } \n  }, \n  handleConfirm: function() { \n      if (this.props.onConfirm) { \n          this.props.onConfirm(); \n      } \n  }, \n  handleHidden: function() { \n      if (this.props.onHidden) { \n          this.props.onHidden(); \n      } \n  } \n}); \n\n```", "```jsx\nvar ReactBootstrapModalDialog = React.createClass({ \n    handleCancel: function() { \n        if (confirm('Are you sure you want to cancel the dialog \n        info?')) { \n       \u00a0\u00a0   this.refs.modal.close(); \n     \u00a0\u00a0 } \n    }, \n    render: function() { \n     \u00a0\u00a0 var modal = null; \n     \u00a0\u00a0 modal = ( \n \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 <BootstrapModal \n         \u00a0\u00a0  \u00a0\u00a0 ref=\"modal\" \n         \u00a0\u00a0  \u00a0\u00a0 confirm=\"OK\" \n         \u00a0\u00a0  \u00a0\u00a0 cancel=\"Cancel\" \n         \u00a0\u00a0  \u00a0\u00a0 onCancel={this.handleCancel} \n         \u00a0\u00a0  \u00a0\u00a0 onConfirm={this.closeModal} \n         \u00a0\u00a0  \u00a0\u00a0 onHidden={this.handleModalDidClose} \n         \u00a0\u00a0  \u00a0\u00a0 > \n           \u00a0\u00a0  \u00a0This is a React component powered by jQuery and  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  Bootstrap! \n \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 </BootstrapModal> \n        ); \n     \u00a0\u00a0 return ( \n         \u00a0\u00a0 {modal} \n            <BootstrapButton onClick={this.openModal} className=\"btn-\n\u00a0\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 default\"> \n           \u00a0Open modal \n \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 </BootstrapButton> \n    \u00a0\u00a0  ); \n    }, \n    openModal: function() { \n        this.refs.modal.open(); \n    }, \n    closeModal: function() { \n        this.refs.modal.close(); \n    }, \n    handleModalDidClose: function() { \n        alert(\"The modal has been dismissed!\"); \n    } \n}); \n\n```", "```jsx\nReactDOM.render(<ReactBootstrapModalDialog />, \ndocument.getElementById('modal')); \n\n```", "```jsx\nreturn ( \n    <div className=\"modalbtn\"> \n        {modal} \n    <BootstrapButton onClick={this.openModal} className=\"btn-default\"> \n        Open modal \n    </BootstrapButton> \n    </div> \n); \n\n```", "```jsx\nvar ReactBootstrapModalDialog = React.createClass({ \n    handleCancel: function() { \n     \u00a0\u00a0 if (confirm('Are you sure you want to cancel?')) { \n         \u00a0\u00a0 this.refs.modal.close(); \n     \u00a0\u00a0 } \n    }, \n    render: function() { \n     \u00a0\u00a0 var modal = null; \n     \u00a0\u00a0 modal = ( \n \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 <BootstrapModal \n         \u00a0\u00a0  \u00a0\u00a0 ref=\"modal\" \n         \u00a0\u00a0  \u00a0\u00a0 confirm=\"OK\" \n        \u00a0\u00a0   \u00a0\u00a0 cancel=\"Cancel\" \n         \u00a0 \u00a0\u00a0 \u00a0 onCancel={this.handleCancel} \n        \u00a0\u00a0 \u00a0\u00a0   onConfirm={this.closeModal} \n        \u00a0\u00a0 \u00a0\u00a0   onHidden={this.handleModalDidClose} \n        \u00a0\u00a0   \u00a0\u00a0 > \n           \u00a0 \u00a0\u00a0 This is a React component powered by jQuery and\n\u00a0\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 Bootstrap! \n \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 </BootstrapModal> \n        ); \n     \u00a0\u00a0 return ( \n \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 <div className=\"modalbtn\"> \n         \u00a0\u00a0  \u00a0\u00a0 {modal} \n \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 <BootstrapButton onClick={this.openModal} \n\u00a0\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 className=\"btn-default\"> \n             \u00a0\u00a0  \u00a0\u00a0 Open modal \n \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 \u00a0\u00a0  </BootstrapButton> \n \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 </div> \n        ); \n    }, \n    openModal: function() { \n     \u00a0\u00a0 this.refs.modal.open(); \n    }, \n   \u00a0closeModal: function() { \n     \u00a0\u00a0 this.refs.modal.close(); \n    }, \n    handleModalDidClose: function() { \n        alert(\"The modal has been dismissed!\"); \n    } \n}); \n\nReactDOM.render(<ReactBootstrapModalDialog />, document.getElementById('modal')); \n\n```", "```jsx\n<!DOCTYPE html>\n<html>\n\u00a0\u00a0\u00a0 <head>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <meta charset=\"UTF-8\" />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <title>J-Query Bootstrap Component with React</title>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\n\u00a0\u00a0\u00a0 </head>\n\u00a0\u00a0\u00a0 <body>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <div class=\"container\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <div class=\"row\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <div class=\"col-sm-6\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <h2>jQuery Bootstrap Modal with React</h2>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <hr/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <div id=\"modal\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 </div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 </div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 </div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 </div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <script type=\"text/javascript\" src=\"js/jquery-1.10.2.min.js\">\n        </script>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <script type=\"text/javascript\" src=\"js/bootstrap.min.js\">\n        </script>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <script type=\"text/javascript\" src=\"js/react.min.js\"></script>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <script type=\"text/javascript\" src=\"js/react-dom.min.js\">\n        </script>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <script src=\"js/browser.min.js\"></script>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <script src=\"component/modal.js\" type=\"text/babel\"></script>\n\u00a0\u00a0\u00a0 </body>\n</html>\n\n```"]