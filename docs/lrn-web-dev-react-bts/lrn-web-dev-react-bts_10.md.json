["```jsx\nexport default function users(state = initialState, action) { \n    switch (action.type) { \n        case types.ADD_USER: \n         \u00a0\u00a0 constnewId = state.users[state.users.length-1] + 1; \n       \u00a0\u00a0   return { \n       \u00a0\u00a0    \u00a0\u00a0 ...state, \n         \u00a0\u00a0  \u00a0\u00a0 users: state.users.concat(newId), \n \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 usersById: { \n           \u00a0\u00a0    \u00a0\u00a0 ...state.usersById, \n           \u00a0\u00a0  \u00a0\u00a0  \u00a0[newId]: { \n             \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 id: newId, \n            \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  name: action.name \n           \u00a0\u00a0  \u00a0\u00a0  \u00a0} \n                }, \n            } \n\n     \u00a0\u00a0  \u00a0\u00a0 case types.DELETE_USER: \n       \u00a0\u00a0  \u00a0return { \n        \u00a0\u00a0  \u00a0\u00a0  ...state, \n         \u00a0\u00a0  \u00a0\u00a0 users: state.users.filter(id => id !== action.id), \n \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 usersById: omit(state.usersById, action.id) \n  \u00a0\u00a0        } \u00a0\u00a0  \n\n     \u00a0\u00a0  \u00a0\u00a0 default: \n       \u00a0\u00a0   return state; \n    } \n} \n\n```", "```jsx\nconst data = normalize(response,arrayOf(schema.user)) \nstate= _.merge(state,data.entities) \n\n```", "```jsx\nshouldComponentUpdate(nexProps){ \n    // instead of object deep comparsion \n    returnthis.props.immutableFoo!==nexProps.immutableFoo \n} \n\n```", "```jsx\nreturn{ \n    ...state, \n    foo \n} \n\nreturn arr1.concat(arr2) \n\n```", "```jsx\nimport{fromJS} from 'immutable' \n\nconst state =fromJS({ bar:'biz'}) \nconstnewState=foo.set('bar','baz')  \n\n```", "```jsx\nrequire.ensure([],()=>{ \n    const Profile = require('./Profile.js') \n    this.setState({ \n     \u00a0\u00a0 currentComponent: Profile \n \u00a0\u00a0 }) \n}) \n\n```", "```jsx\nrender: function () { \n    returnReact.DOM.div({className:\"divider\"}, \n        \"Label Text\", \n        React.DOM.hr() \n    ); \n}  \n\n```", "```jsx\nrender: function () { \n    return<div className=\"divider\"> \n        Label Text<hr /> \n    </div>; \n} \n\n```", "```jsx\n<div className=\"divider\"> \n    <h2>Questions</h2><hr /> \n</div>\n\n```", "```jsx\n<Divider> Questions </Divider> \n\n```", "```jsx\nclassHelloMessage extends React.Component{\n    render(){ \n        return<div>Hello {this.props.name}</div> \n    } \n}\n```", "```jsx\nMyComponent.propTypes={ \n    isLoading:PropTypes.bool.isRequired, \n    items:ImmutablePropTypes.listOf( \n        ImmutablePropTypes.contains({ \n            name:PropTypes.string.isRequired, \n        }) \n    ).isRequired \n} \n\n```", "```jsx\nPassData({ foo:'bar'})(MyComponent) \n\n```", "```jsx\nrequireAuth({ role: 'admin' })(MyComponent)  \n\n```", "```jsx\n@navbar-default-bg: # 962D91; \n\n```", "```jsx\n@navbar-default-color: #008bd1;  \n@navbar-default-link-color: #008bd1;  \n@navbar-default-link-hover-color: # 962D91;  \n@navbar-default-link-active-color: #008bd1; \n\n```", "```jsx\n@navbar-default-toggle-hover-bg: darken(@navbar-default-bg, 10%);  \n@navbar-default-toggle-icon-bar-bg: #008bd1;  \n@navbar-default-toggle-border-color: #008bd1;\n\n```", "```jsx\n@navbar-height: 50px;  \n@navbar-border-radius: 5px; \n\n```", "```jsx\n@input-border-radius: 2px;\n\n```", "```jsx\n@input-border-focus: #002D64; \n\n```", "```jsx\n.form-control-focus(@color: @input-border-focus) {  \n    @color-rgba: rgba(red(@color), green(@color), blue(@color), .3);  \n    &:focus {  \n     \u00a0\u00a0 border-color: @color;  \n \u00a0\u00a0  \u00a0\u00a0 outline: 1;  \n \u00a0\u00a0  \u00a0\u00a0 .box-shadow(~\"inset 1px0 1px rgba(0,0,0,.055), 0 0 6px \n        @{color-rgba}\");  \n \u00a0\u00a0 }  \n}  \n\n```", "```jsx\n//.box-shadow(~\"inset 1px 0 1px rgba(0,0,0,.055), 0 0 6px @{color-rgba}\"); \n\n```", "```jsx\n.btn-default \n.btn-primary \n.btn-success \n.btn-info \n.btn-warning \n.btn-danger \n.btn-link \n\n```", "```jsx\n<button type=\"button\" class=\"btnbtn-default\">Default</button> \n<button type=\"button\" class=\"btnbtn-primary\">Primary</button> \n<button type=\"button\" class=\"btnbtn-success\">Success</button> \n<button type=\"button\" class=\"btnbtn-info\">Info</button> \n<button type=\"button\" class=\"btnbtn-warning\">Warning</button> \n<button type=\"button\" class=\"btnbtn-danger\">Danger</button> \n<button type=\"button\" class=\"btnbtn-link\">Link</button>\n\n```", "```jsx\n<button type=\"button\" class=\"btnbtn-primary\">Agree</button> \n\n```"]