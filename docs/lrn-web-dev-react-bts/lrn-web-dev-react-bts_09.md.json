["```jsx\n**node --version // will result something like v0.12.10**\n```", "```jsx\n**Npm init**\n```", "```jsx\n{ \n    \"name\": \"react-node\", \n    \"version\": \"1.0.0\", \n    \"description\": \"ReactJS Project with Nodejs\", \n    \"scripts\": { \n        \"start\": \"node server.js\", \n        \"lint\": \"eslint src\" \n    }, \n    \"author\": \"Harmeet Singh <harmeetsingh090@gmail.com>\", \n    \"license\": \"MIT\", \n    \"bugs\": { \n        \"url\": \"\" \n    }, \n\n```", "```jsx\n**npm install <package name> --save**\n```", "```jsx\n**npm install**\n```", "```jsx\n**npm update**\n```", "```jsx\n\"devDependencies\": { \n    \"babel-core\": \"^6.0.20\", \n    \"babel-eslint\": \"^4.1.3\", \n    \"babel-loader\": \"^6.0.1\", \n    \"babel-preset-es2015\": \"^6.0.15\", \n    \"babel-preset-react\": \"^6.0.15\", \n    \"babel-preset-stage-0\": \"^6.0.15\", \n    \"body-parser\": \"^1.15.2\", \n    \"eslint\": \"^1.10.3\", \n    \"eslint-plugin-react\": \"^3.6.2\", \n    \"express\": \"^4.13.4\", \n    \"react-hot-loader\": \"^1.3.0\", \n    \"webpack\": \"^1.12.2\", \n    \"webpack-dev-middleware\": \"^1.6.1\", \n    \"webpack-hot-middleware\": \"^2.10.0\" \n    }, \n    \"dependencies\": { \n        \"mongodb\": \"^2.2.11\", \n        \"mongoose\": \"^4.6.8\", \n        \"react\": \"^0.14.6\", \n        \"react-dom\": \"^0.14.6\", \n        \"react-router\": \"^1.0.0-rc1\", \n        \"style-loader\": \"^0.13.1\", \n        \"url-loader\": \"^0.5.7\", \n        \"css-loader\": \"^0.26.0\",a \n        \"file-loader\": \"^0.9.0\" \n    } \n\n```", "```jsx\n<!doctype html> \n<html>\n\u00a0\u00a0\u00a0 <head>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <title>React Application - EIS</title>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <script src=\"//ajax.googleapis.com/ajax/libs/jquery/\n        1.11.1/jquery.min.js\"></script> \n\u00a0\u00a0\u00a0 </head>\n\u00a0\u00a0\u00a0 <body>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <div id='root'> \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 </div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <script src=\"/static/bundle.js\"></script> \n\u00a0\u00a0\u00a0 </body>\n</html> \n\n```", "```jsx\nvar path = require('path'); \nvar webpack = require('webpack'); \nvar express = require('express'); \nvar config = require('./webpack.config'); \nvar app = express(); \nvar compiler = webpack(config); \n\napp.use(require('webpack-dev-middleware')(compiler, { \n    publicPath: config.output.publicPath \n})); \napp.use(require('webpack-hot-middleware')(compiler));\n```", "```jsx\napp.get('*', function(req, res) { \n    res.sendFile(path.join(__dirname, 'index.html')); \n}); \n\napp.listen(3000, function(err) { \n    if (err) { \n        return console.error(err); \n    } console.log('Listening at http://localhost:3000/'); \n}) \n\n```", "```jsx\nmodule.exports = { \n    devtool: 'cheap-module-eval-source-map', \n    entry: [ \n        'webpack-hot-middleware/client', \n        './src/index' \n    ], \n    output: { \n        path: path.join(__dirname, 'dist'), \n        filename: 'bundle.js', \n        publicPath: '/static/' \n    }, \n    plugins: [ \n        new webpack.HotModuleReplacementPlugin() \n    ], \n\n```", "```jsx\nmodule: { \n    loaders: [{ \n        test: /\\.js$/, \n        loaders: ['react-hot', 'babel'], \n        include: path.join(__dirname, 'src') \n    }, \n    { \n        test: /\\.css$/, \n        loader: 'style!css', \n        exclude: /node_modules/ \n        }, { \n            test: /\\.(woff|woff2|ttf|svg)$/, \n            loader: 'url?limit=100000', \n            exclude: /node_modules/ \n        }, \n        { \n            test: /\\.(eot|png)$/, \n            loader: 'file', \n            exclude: /node_modules/ \n        } \n        ] \n    } \n}; \n\n```", "```jsx\n{ \n    \"presets\": [\"es2015\", \"stage-0\", \"react\"] \n} \n\n```", "```jsx\n{ \n    \"ecmaFeatures\": { \n        \"jsx\": true, \n        \"modules\": true \n    }, \n    \"env\": { \n        \"browser\": true, \n        \"node\": true \n    }, \n    \"parser\": \"babel-eslint\", \n    \"rules\": { \n        \"quotes\": [2, \"single\"], \n        \"strict\": [2, \"never\"], \n        \"react/jsx-uses-react\": 2, \n        \"react/jsx-uses-vars\": 2, \n        \"react/react-in-jsx-scope\": 2 \n    }, \n    \"plugins\": [ \n        \"react\" \n    ] \n}\n```", "```jsx\nimport React from 'react'; \nimport ReactDOM from 'react-dom'; \nimport { Router, Route, Link, IndexRoute,IndexLink, browserHistory } \nfrom 'react-router' \n\n```", "```jsx\nimport '../css/custom.css'; \nimport '../vendor/css/base.css'; \nimport '../vendor/css/bootstrap.min.css'; \nimport '../vendor/js/bootstrap.min.js'; \n\n```", "```jsx\n**nodemon start**\n```", "```jsx\n**node server.js**\n```", "```jsx\nmodule.exports.PageLayout = React.createClass({ \n}) \n\n```", "```jsx\nrender: function() { \n    return ( \n        <main> \n        <div className=\"navbar navbar-default navbar-static-top\"\n        role=\"navigation\"> \n            <div className=\"container\"> \n                <div className=\"navbar-header\"> \n                    <button type=\"button\" className=\"navbar-toggle\"\n                    data-toggle=\"collapse\" data-target=\".navbar-collapse\"> \n                    <span className=\"sr-only\">Toggle navigation</span> \n                    <span className=\"icon-bar\"></span> \n                    <span className=\"icon-bar\"></span> \n                    <span className=\"icon-bar\"></span> \n                    </button> \n                    <Link className=\"navbar-brand\" to=\"/\">EIS</Link> \n                </div> \n            <div className=\"navbar-collapse collapse\"> \n            <ul className=\"nav navbar-nav\"> \n            <li><IndexLink activeClassName=\"active\" to=\"/\">\n            Home</IndexLink></li> \n            <li><Link to=\"/edit\" activeClassName=\"active\">\n            Edit Profile</Link></li> \n            <li className=\"dropdown\"> \n                <Link to=\"#\" className=\"dropdown-toggle\"\n                data-toggle=\"dropdown\">Help Desk <b className=\"caret\">\n                </b></Link> \n            <ul className=\"dropdown-menu\"> \n            <li><Link to=\"/alltickets\">View Tickets</Link></li> \n            <li><Link to=\"/newticket\">New Ticket</Link></li> \n            </ul> \n            </li> \n            </ul> \n        </div> \n    </div> \n</div> \n\n```", "```jsx\n<div className=\"container\"> \n    <h1>Welcome to EIS</h1> \n    <hr/> \n    <div className=\"row\"> \n    <div className=\"col-md-12 col-lg-12\"> \n    **{this.props.children}** \n    </div> \n    </div> \n    </div> \n</main> \n); \n}  \n\n```", "```jsx\nconst RightSection = React.createClass({ \n    render: function() { \n     \u00a0\u00a0 return (<div className=\"col-sm-9 profile-desc\" id=\"main\">  \n        <div className=\"results\">  \n        <PageTitle/> \n        <HomePageContent/> \n        </div> \n        </div>) \n    } \n}) \n// include Left section content in ColumnLeft component with the wrapper of bootstrap responsive classes classes    \n\nconst ColumnLeft = React.createClass({ \n    render: function() { \n     \u00a0\u00a0 return ( \n        ) \n    } \n}) \nconst LeftSection = React.createClass({ \n    render: function() { \n        return (  \n        //Left section content          \n        ) \n    } \n}) \nconst TwoColumnLayout = React.createClass({ \n    render: function() { \n     \u00a0\u00a0 return ( \n         \u00a0\u00a0 <div> \n        \u00a0\u00a0  <ColumnLeft/> \n        \u00a0\u00a0  <RightSection/> \n        \u00a0\u00a0  </div> \n        ) \n    } \n})  \n\n```", "```jsx\nconst PageTitle = React.createClass({ \n    render: function() { \n     \u00a0\u00a0 return ( \n     \u00a0\u00a0  \u00a0\u00a0 <h2>//page content</h2> \n     \u00a0\u00a0 ); \n    } \n}); \nconst HomePageContent = React.createClass({ \n    render: function() { \n     \u00a0\u00a0 return ( \n    \u00a0\u00a0   \u00a0\u00a0 <p>//page content</p> \n    \u00a0\u00a0  ); \n    } \n}); \n\n```", "```jsx\nReactDOM.render(( \n    <Router history={browserHistory}> \n    <Route path=\"/\" component={PageLayout}> \n    <IndexRoute component={TwoColumnLayout}/> \n    </Route> \n    </Router> \n), document.getElementById('root')); \n\n```", "```jsx\nimport React from 'react'; \nimport ReactDOM from 'react-dom'; \n\n```", "```jsx\nvar max_Char='140'; \nvar style = {color: \"#ffaaaa\"}; \n\nmodule.exports.AddTicket = React.createClass({ \n    getInitialState: function() { \n     \u00a0\u00a0 return {value: '', char_Left: max_Char}; \n    }, \n    handleChange: function(event) { \n     \u00a0\u00a0 var input = event.target.value; \n    \u00a0\u00a0  this.setState({value: input.substr(0, max_Char),char_Left:\n        max_Char - input.length}); \n    \u00a0\u00a0  if (input.length == max_Char){ \n    \u00a0\u00a0      alert(\"You have reached the max limit\") \n        } \n    }, \n\n```", "```jsx\nhandleSubmitEvent: function (event) { \n    event.preventDefault(); \n\nvar values   = { \n    date: new Date(), \n    email: this.refs.email.value.trim(), \n    issueType: this.refs.issueType.value, \n    department: this.refs.department.value, \n    comment: this.state.value \n}; \nthis.props.addTicketList(values); \nlocalStorage.setItem('Ticket', JSON.stringify(values)); \n}, \n\n```", "```jsx\nrender: function() { \n    return ( \n        <form onSubmit={this.handleSubmitEvent}> \n\n```", "```jsx\n<div className=\"form-group\"> \n    <label htmlFor=\"comments\">Comments <span style={style}>*</span>\n    </label>(<span>{this.state.char_Left}</span> characters left) \n        <textarea className=\"form-control\" value={this.state.value} \n        maxLength={max_Char} ref=\"comments\" onChange={this.handleChange} /> \n   </div> \n   <div className=\"btn-group\"> \n       <button type=\"submit\" className=\"btn btn-primary\">Submit</button> \n       <button type=\"reset\" className=\"btn btn-link\">cancel</button> \n   </div> \n   </form> \n   ); \n} \n}); \n\n```", "```jsx\n<AddTicket addTicketList={this.addTicketList} /> \n\n```", "```jsx\nimport { AddTicket } from \"./addTicketForm.js\";\nimport { List } from \"./listView.js\";\n```", "```jsx\nmodule.exports.AddTicketsForm = React.createClass({ \n    getInitialState: function () { \n        return { \n            list: {} \n        }; \n    }, \n    updateList: function (newList) { \n        this.setState({ \n            list: newList \n        }); \n    }, \n    addTicketList: function (item) { \n    var list = this.state.list; \n    list[item] = item; \n    this.updateList(list); \n    }, \n    render: function () { \n        var items = this.state.list; \n    return ( \n        <div className=\"container\"> \n        <div className=\"row\"> \n        <div className=\"col-sm-6\"> \n            <List items={items} /> \n            <AddTicket addTicketList={this.addTicketList} /> \n        </div> \n        </div> \n        </div> \n    ); \n\n```", "```jsx\n    } \n}); \nlistView.js \nimport { ListPanel } from \"./ListUI.js\"; \n\n```", "```jsx\nmodule.exports.List = React.createClass({ \n    getListOfIds: function (items) { \n    return Object.keys(items); \n    }, \n    createListElements: function (items) { \n        var item; \n        return ( \n            this \n         \u00a0\u00a0  \u00a0\u00a0 .getListOfIds(items) \n       \u00a0\u00a0  \u00a0\u00a0   .map(function createListItemElement(itemId,id) { \n       \u00a0\u00a0  \u00a0\u00a0    \u00a0\u00a0 item = items[itemId]; \n        \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  return (<ListPanel key={id} item={item} />); \n        \u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0  }.bind(this)) \n        \u00a0\u00a0  \u00a0\u00a0 .reverse() \n   \u00a0\u00a0   ); \n    }, \n    render: function () { \n     \u00a0\u00a0 var items = this.props.items; \n    \u00a0\u00a0  var listItemElements = this.createListElements(items); \n    \u00a0\u00a0  return ( \n            <div className={listItemElements.length > 0 ? \"\":\"\"}> \n        \u00a0\u00a0  {listItemElements.length > 0 ? listItemElements : \"\"} \n\n```", "```jsx\n        </div> \n    ); \n    } \n}); \n\n```", "```jsx\nmodule.exports.ListPanel =  \nReact.createClass({ \n    render: function () { \n        var item = this.props.item; \n    return ( \n        <div className=\"panel panel-default\"> \n        <div className=\"panel-body\"> \n        Emailid: {item.email}<br/> \n        IssueType: {item.issueType}<br/> \n        IssueType: {item.department}<br/> \n        Message: {item.comment} \n        </div> \n        <div className=\"panel-footer\"> \n       {item.date.toString()} \n       </div> \n       </div> \n    ); \n    } \n}); \n\n```", "```jsx\n<Route path=\"/newticket\" component={AddTicketsForm} />\n```", "```jsx\nmodule.exports.allTickets = React.createClass({ \n    getInitialState: function() { \n        return { \n            value :JSON.parse(localStorage.getItem( 'Ticket' )) || 1}; \n        }, \n\n```", "```jsx\ngetListOfIds: function (tickets) { \n    return Object.keys(tickets); \n    }, \n    createListElements: function (tickets) { \n    var ticket; \n    return ( \n        this \n        .getListOfIds(tickets) \n        .map(function createListItemElement(ticket,id) { \n        ticket = tickets[ticket]; \n        return (<ticketTable key={id} ticket={ticket}/>) \n        }.bind(this)) \n    ); \n}, \n\n```", "```jsx\nrender: function() { \n    var ticket = this.state.value;\n```", "```jsx\nvar listItemElements = this.createListElements(ticket); \nreturn ( \n    <div> \n        <div className={listItemElements.length > 0 ? \"\":\"bg-info\"}> \n            {listItemElements.length > 0 ? \"\" : \"You have not raised any ticket yet.\"} \n\n```", "```jsx\n</div> \n    <table className=\"table table-striped table-responsive\"> \n        <thead> \n            <tr> \n                <th>Date</th> \n                <th>Email ID</th> \n                <th>Issue Type</th> \n                <th>Department</th> \n                <th>Message</th> \n            </tr> \n        </thead> \n        <tbody> \n        <tr> \n            {listItemElements.length > 0 ? listItemElements : \"\"} \n        </tr> \n        </tbody> \n    </table> \n</div> \n// In the preceding code, we are creating the table header and appending the ticket list items.\n   ); \n   } \n}); \n\n```", "```jsx\nmodule.exports.ticketTable = React.createClass({ \n    render: function () { \n        var ticket = this.props.ticket; \n        return ( \n            <td>{ticket}</td> \n        ); \n    } \n}); \n\n```", "```jsx\nconst table = require(\"./ticketTable.js\"); \n\n```", "```jsx\nconst MY_CONST = 10; \n// This will throw an error because we have reassigned again. \nMY_CONST = 20; \n\n// will print 10 \nconsole.log(\"my favorite number is: \" + MY_CONST); \n\n// const also works on objects \nconst MY_OBJECT = {\"key\": \"value\"};  \n\n```", "```jsx\nReactDOM.render(( \n    <Router history={browserHistory}> \n    <Route path=\"/\" component={PageLayout}> \n    <IndexRoute component={TwoColumnLayout}/> \n    <Route path=\"/profile\" component={Profile} /> \n    <Route path=\"/alltickets\" component={allTickets} /> \n    <Route path=\"/newticket\" component={AddTicketsForm} /> \n    </Route> \n    <Route path=\"*\" component={NoMatch}/> \n    </Router> \n), document.getElementById('root')); \n\n```"]