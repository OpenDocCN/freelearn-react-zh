["```jsx\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst App = ({ items }) => (\n  <ul>{items.map(i => <li key={i}>{i}</li>)}</ul>\n);\n\nApp.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default App;\n```", "```jsx\nimport React from 'react';\n\n// The \"renderToString()\" function is like \"render()\",\n// except it returns a rendered HTML string instead of\n// manipulating the DOM.\nimport { renderToString } from 'react-dom/server';\nimport express from 'express';\n\n// The component that we're going to render as a string.\nimport App from './App';\n\n// The \"doc()\" function takes the rendered \"content\"\n// of a React component and inserts it into an\n// HTML document skeleton.\nconst doc = content =>\n  `\n  <!doctype html>\n  <html>\n    <head>\n      <title>Rendering to strings</title>\n    </head>\n    <body>\n      <div id=\"app\">${content}</div>\n    </body>\n  </html>\n  `;\n\nconst app = express();\n\n// The root URL of the APP, returns the rendered\n// React component.\napp.get('/', (req, res) => {\n  // Some properties to render...\n  const props = {\n    items: ['One', 'Two', 'Three']\n  };\n\n  // Render the \"App\" component using\n  // \"renderToString()\"\n  const rendered = renderToString(<App {...props} />);\n\n  // Use the \"doc()\" function to build the final\n  // HTML that is sent to the browser.\n  res.send(doc(rendered));\n});\n\napp.listen(8080, () => {\n  console.log('Listening on 127.0.0.1:8080');\n});\n```", "```jsx\nimport React from 'react';\nimport { Route, Link } from 'react-router-dom';\n\nimport FirstHeader from './first/FirstHeader';\nimport FirstContent from './first/FirstContent';\nimport SecondHeader from './second/SecondHeader';\nimport SecondContent from './second/SecondContent';\n\nexport default () => (\n  <section>\n    <header>\n      <Route exact path=\"/\" render={() => <h1>App</h1>} />\n      <Route exact path=\"/first\" component={FirstHeader} />\n      <Route exact path=\"/second\" component={SecondHeader} />\n    </header>\n    <main>\n      <Route\n        exact\n        path=\"/\"\n        render={() => (\n          <ul>\n            <li>\n              <Link to=\"first\">First</Link>\n            </li>\n            <li>\n              <Link to=\"second\">Second</Link>\n            </li>\n          </ul>\n        )}\n      />\n      <Route exact path=\"/first\" component={FirstContent} />\n      <Route exact path=\"/second\" component={SecondContent} />\n    </main>\n  </section>\n); \n```", "```jsx\nimport React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport { StaticRouter } from 'react-router';\nimport express from 'express';\n\nimport App from './App';\n\nconst app = express();\n\napp.get('/*', (req, res) => {\n  const context = {};\n  const html = renderToString(\n    <StaticRouter location={req.url} context={context}>\n      <App />\n    </StaticRouter>\n  );\n\n  if (context.url) {\n    res.writeHead(301, {\n      Location: context.url\n    });\n    res.end();\n  } else {\n    res.write(`\n      <!doctype html>\n      <div id=\"app\">${html}</div>\n    `);\n    res.end();\n  }\n});\n\napp.listen(8080, () => {\n  console.log('Listening on 127.0.0.1:8080');\n}); \n```", "```jsx\nimport React from 'react';\nimport { hydrate } from 'react-dom';\n\nimport App from './App';\n\nhydrate(<App />, document.getElementById('root')); \n```", "```jsx\nimport React, { Component } from 'react';\n\nexport default class App extends Component {\n  state = { clicks: 0 };\n\n  render() {\n    return (\n      <section>\n        <header>\n          <h1>Hydrating The Client</h1>\n        </header>\n        <main>\n          <p>Clicks {this.state.clicks}</p>\n          <button\n            onClick={() =>\n              this.setState(state => ({ clicks: state.clicks + 1 }))\n            }\n          >\n            Click Me\n          </button>\n        </main>\n      </section>\n    );\n  }\n}\n```", "```jsx\nimport fs from 'fs';\nimport React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport express from 'express';\n\nimport App from './App';\n\nconst app = express();\nconst doc = fs.readFileSync('./build/index.html');\n\napp.use(express.static('./build', { index: false }));\n\napp.get('/*', (req, res) => {\n  const context = {};\n  const html = renderToString(<App />);\n\n  if (context.url) {\n    res.writeHead(301, {\n      Location: context.url\n    });\n    res.end();\n  } else {\n    res.write(\n      doc\n        .toString()\n        .replace('<div id=\"root\">', `<div id=\"root\">${html}`)\n    );\n    res.end();\n  }\n});\n\napp.listen(8080, () => {\n  console.log('Listening on 127.0.0.1:8080');\n});\n```", "```jsx\nconst doc = fs.readFileSync('./build/index.html');\n```", "```jsx\napp.use(express.static('./build', { index: false }));\n```", "```jsx\napp.get('/*', (req, res) => {\n  const context = {};\n  const html = renderToString(<App />);\n\n  if (context.url) {\n    res.writeHead(301, {\n      Location: context.url\n    });\n    res.end();\n  } else {\n    res.write(\n      doc\n        .toString()\n        .replace('<div id=\"root\">', `<div id=\"root\">${html}`)\n    );\n    res.end();\n  }\n});\n```", "```jsx\n\u2514\u2500\u2500 pages\n \u251c\u2500\u2500 first.js \u251c\u2500\u2500 index.js \u2514\u2500\u2500 second.js\n```", "```jsx\nimport Layout from '../components/MyLayout.js';\n\nexport default () => (\n  <Layout>\n    <p>Fetching component data on the server and on the client...</p>\n  </Layout>\n);\n```", "```jsx\nimport Header from './Header';\n\nconst layoutStyle = {\n  margin: 20,\n  padding: 20,\n  border: '1px solid #DDD'\n};\n\nconst Layout = props => (\n  <div style={layoutStyle}>\n    <Header />\n    {props.children}\n  </div>\n);\n\nexport default Layout;\n```", "```jsx\nimport Link from 'next/link';\n\nconst linkStyle = {\n  marginRight: 15\n};\n\nconst Header = () => (\n  <div>\n    <Link href=\"/\">\n      <a style={linkStyle}>Home</a>\n    </Link>\n    <Link href=\"/first\">\n      <a style={linkStyle}>First</a>\n    </Link>\n    <Link href=\"/second\">\n      <a style={linkStyle}>Second</a>\n    </Link>\n  </div>\n);\n\nexport default Header;\n```", "```jsx\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/MyLayout.js';\nimport { fetchFirstItems } from '../api';\n\nconst First = ({ items }) => (\n  <Layout>{items.map(i => <li key={i}>{i}</li>)}</Layout>\n);\n\nFirst.getInitialProps = async () => {\n  const res = await fetchFirstItems();\n  const items = await res.json();\n\n  return { items };\n};\n\nexport default First;\n```", "```jsx\nexport default () =>\n  new Promise(resolve =>\n    setTimeout(() => {\n      resolve({\n        json: () => Promise.resolve(['One', 'Two', 'Three'])\n      });\n    }, 1000)\n  );\n```"]