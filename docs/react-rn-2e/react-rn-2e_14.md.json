["```jsx\nimport { Platform, StyleSheet, StatusBar } from 'react-native';\n\n// Exports a \"stylesheet\" that can be used\n// by React Native components. The structure is\n// familiar for CSS authors.\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'ghostwhite',\n    ...Platform.select({\n      ios: { paddingTop: 20 },\n      android: { paddingTop: StatusBar.currentHeight }\n    })\n  },\n\n  box: {\n    width: 100,\n    height: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'lightgray'\n  },\n\n  boxText: {\n    color: 'darkslategray',\n    fontWeight: 'bold'\n  }\n});\n\nexport default styles; \n```", "```jsx\n...Platform.select({\n  ios: { paddingTop: 20 },\n  android: { paddingTop: StatusBar.currentHeight }\n})\n```", "```jsx\nimport React from 'react';\nimport { Text, View } from 'react-native';\n\n// Imports the \"styles\" stylesheet from the\n// \"styles\" module.\nimport styles from './styles';\n\n// Renders a view with a square in the middle, and\n// some text in the middle of that. The \"style\" property\n// is passed a value from the \"styles\" stylesheet.\nexport default () => (\n  <View style={styles.container}>\n    <View style={styles.box}>\n      <Text style={styles.boxText}>I'm in a box</Text>\n    </View>\n  </View>\n); \n```", "```jsx\nimport React from 'react';\nimport { Text, View } from 'react-native';\n\nimport styles from './styles';\n\n// Renders three \"column\" sections. The \"container\"\n// view is styled so that it's children flow from\n// the top of the screen, to the bottom of the screen.\nexport default () => (\n  <View style={styles.container}>\n    <View style={styles.box}>\n      <Text style={styles.boxText}>#1</Text>\n    </View>\n    <View style={styles.box}>\n      <Text style={styles.boxText}>#2</Text>\n    </View>\n    <View style={styles.box}>\n      <Text style={styles.boxText}>#3</Text>\n    </View>\n  </View>\n); \n```", "```jsx\nimport { Platform, StyleSheet, StatusBar } from 'react-native';\n\n// Exports a \"stylesheet\" that can be used\n// by React Native components. The structure is\n// familiar for CSS authors.\nexport default StyleSheet.create({\n  // The \"container\" for the whole screen.\n  container: {\n    // Enables the flexbox layout model...\n    flex: 1,\n    // Tells the flexbox to render children from\n    // top to bottom...\n    flexDirection: 'column',\n    // Aligns children to the center on the container...\n    alignItems: 'center',\n    // Defines the spacing relative to other children...\n    justifyContent: 'space-around',\n    backgroundColor: 'ghostwhite',\n    ...Platform.select({\n      ios: { paddingTop: 20 },\n      android: { paddingTop: StatusBar.currentHeight }\n    })\n  },\n\n  box: {\n    width: 300,\n    height: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'lightgray',\n    borderWidth: 1,\n    borderStyle: 'dashed',\n    borderColor: 'darkslategray'\n  },\n\n  boxText: {\n    color: 'darkslategray',\n    fontWeight: 'bold'\n  }\n}); \n```", "```jsx\nimport { Platform, StyleSheet, StatusBar } from 'react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'ghostwhite',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    ...Platform.select({\n      ios: { paddingTop: 20 },\n      android: { paddingTop: StatusBar.currentHeight }\n    })\n  },\n\n  box: {\n    height: 100,\n    justifyContent: 'center',\n    // Instead of given the flexbox child a width, we\n    // tell it to \"stretch\" to fill all available space.\n    alignSelf: 'stretch',\n    alignItems: 'center',\n    backgroundColor: 'lightgray',\n    borderWidth: 1,\n    borderStyle: 'dashed',\n    borderColor: 'darkslategray'\n  },\n\n  boxText: {\n    color: 'darkslategray',\n    fontWeight: 'bold'\n  }\n});\n\nexport default styles; \n```", "```jsx\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { View, Text } from 'react-native';\n\nimport styles from './styles';\n\n// Exports a React Native component that\n// renders a \"<View>\" with the \"box\" style\n// and a \"<Text>\" component with the \"boxText\"\n// style.\nconst Box = ({ children }) => (\n  <View style={styles.box}>\n    <Text style={styles.boxText}>{children}</Text>\n  </View>\n);\n\nBox.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Box; \n```", "```jsx\nimport { Platform, StyleSheet, StatusBar } from 'react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // Tells the child elements to flex from left to\n    // right...\n    flexDirection: 'row',\n    backgroundColor: 'ghostwhite',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    ...Platform.select({\n      ios: { paddingTop: 20 },\n      android: { paddingTop: StatusBar.currentHeight }\n    })\n  },\n\n  box: {\n    width: 100,\n    justifyContent: 'center',\n    alignSelf: 'stretch',\n    alignItems: 'center',\n    backgroundColor: 'lightgray',\n    borderWidth: 1,\n    borderStyle: 'dashed',\n    borderColor: 'darkslategray'\n  },\n\n  boxText: {\n    color: 'darkslategray',\n    fontWeight: 'bold'\n  }\n});\n\nexport default styles; \n```", "```jsx\nimport React from 'react';\nimport { Text, View, StatusBar } from 'react-native';\n\nimport styles from './styles';\nimport Box from './Box';\n\n// Renders a single row with two boxes that stretch\n// from top to bottom.\nexport default () => (\n  <View style={styles.container}>\n    <Box>#1</Box>\n    <Box>#2</Box>\n  </View>\n); \n```", "```jsx\nimport { Platform, StyleSheet, StatusBar } from 'react-native';\n\nexport default StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    backgroundColor: 'ghostwhite',\n    alignItems: 'center',\n    ...Platform.select({\n      ios: { paddingTop: 20 },\n      android: { paddingTop: StatusBar.currentHeight }\n    })\n  },\n\n  box: {\n    height: 100,\n    width: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'lightgray',\n    borderWidth: 1,\n    borderStyle: 'dashed',\n    borderColor: 'darkslategray',\n    margin: 10\n  },\n\n  boxText: {\n    color: 'darkslategray',\n    fontWeight: 'bold'\n  }\n}); \n```", "```jsx\nimport React from 'react';\nimport { View, StatusBar } from 'react-native';\n\nimport styles from './styles';\nimport Box from './Box';\n\n// An array of 10 numbers, representing the grid\n// sections to render.\nconst boxes = new Array(10).fill(null).map((v, i) => i + 1);\n\nexport default () => (\n  <View style={styles.container}>\n    <StatusBar hidden={false} />\n    {/* Renders 10 \"<Box>\" sections */}\n    {boxes.map(i => <Box key={i}>#{i}</Box>)}\n  </View>\n); \n```", "```jsx\nimport React from 'react';\nimport { View, StatusBar } from 'react-native';\n\nimport styles from './styles';\nimport Row from './Row';\nimport Column from './Column';\nimport Box from './Box';\n\nexport default () => (\n  <View style={styles.container}>\n    <StatusBar hidden={false} />\n    {/* This row contains two columns. The first column\n        has boxes \"#1\" and \"#2\". They will be stacked on\n        top of one another. The next column has boxes \"#3\"\n        and \"#4\", which are also stacked on top of one\n        another */}\n    <Row>\n      <Column>\n        <Box>#1</Box>\n        <Box>#2</Box>\n      </Column>\n      <Column>\n        <Box>#3</Box>\n        <Box>#4</Box>\n      </Column>\n    </Row>\n    <Row>\n      <Column>\n        <Box>#5</Box>\n        <Box>#6</Box>\n      </Column>\n      <Column>\n        <Box>#7</Box>\n        <Box>#8</Box>\n      </Column>\n    </Row>\n    <Row>\n      <Column>\n        <Box>#9</Box>\n        <Box>#10</Box>\n      </Column>\n      <Column>\n        <Box>#11</Box>\n        <Box>#12</Box>\n      </Column>\n    </Row>\n  </View>\n); \n```", "```jsx\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { View } from 'react-native';\n\nimport styles from './styles';\n\n// Renders a \"View\" with the \"row\" style applied to\n// it. It's \"children\" will flow from left to right.\nconst Row = ({ children }) => (\n  <View style={styles.row}>{children}</View>\n);\n\nRow.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Row; \n```", "```jsx\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { View } from 'react-native';\n\nimport styles from './styles';\n\n// Renders a \"View\" with the \"column\" style applied\n// to it. It's children will flow from top-to-bottom.\nconst Column = ({ children }) => (\n  <View style={styles.column}>{children}</View>\n);\n\nColumn.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Column; \n```"]