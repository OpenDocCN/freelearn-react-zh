- en: Why React Native?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么选择React Native？
- en: Facebook created React Native to build its mobile applications. The motivation
    to do so originated from the fact that React for the web was so successful. If
    React is such a good tool for UI development, and you need a native application,
    then why fight it? Just make React work with native mobile OS UI elements!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Facebook创建了React Native来构建其移动应用程序。这样做的动机源于React在Web上非常成功的事实。如果React是如此适合UI开发的工具，并且您需要一个本机应用程序，那么为什么要反对呢？只需使React与本机移动操作系统UI元素配合工作即可！
- en: In this chapter, you'll learn about the motivations for using React Native to
    build native mobile web applications.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将了解使用React Native构建本机移动Web应用程序的动机。
- en: What is React Native?
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是React Native？
- en: Earlier in this book, I introduced the notion of a render target—the thing that
    React components render to. The render target is abstract as far as the React
    programmer is concerned. For example, in React, the render target can be a string
    or it could be the DOM. This is why your components never directly interface with
    the render target, because you can never make assumptions about where the rendering
    is taking place.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的前面，我介绍了渲染目标的概念-React组件渲染到的东西。就React程序员而言，渲染目标是抽象的。例如，在React中，渲染目标可以是字符串，也可以是DOM。这就是为什么您的组件从不直接与渲染目标进行交互的原因，因为您永远不能假设渲染发生的位置。
- en: A mobile platform has UI widget libraries that developers can leverage to build
    apps for that platform. On Android, developers implement Java apps, while on iOS,
    developers implement Swift apps. If you want a functional mobile app, you're going
    to have to pick one. However, you'll need to learn both languages, as supporting
    only one of two major platforms isn't realistic for success.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 移动平台具有开发人员可以利用的UI小部件库，以构建该平台的应用程序。在Android上，开发人员实现Java应用程序，而在iOS上，开发人员实现Swift应用程序。如果您想要一个功能齐全的移动应用程序，您将不得不选择一个。但是，您需要学习两种语言，因为仅支持两个主要平台中的一个对于成功来说是不现实的。
- en: For React developers, this isn't a problem. The same React components that you
    build work all over the place, even on mobile browsers! Having to learn two more
    programming languages to build and ship a mobile application is cost and time
    prohibitive. The solution to this is to introduce a new React that supports a
    new render target—native mobile UI widgets.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 对于React开发人员来说，这不是问题。您构建的相同React组件可以在各个地方使用，甚至可以在移动浏览器上使用！必须学习两种新编程语言来构建和发布移动应用程序是成本和时间上的障碍。解决此问题的方法是引入一个支持新渲染目标-本机移动UI小部件的新React。
- en: 'React Native uses a technique that makes asynchronous calls to the underlying
    mobile OS, which calls the native widget APIs. There''s a JavaScript engine, and
    the React API is mostly the same as React for the web. The difference is with
    the target; instead of a DOM, there are asynchronous API calls. The concept is
    visualized here:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: React Native使用一种技术，该技术对底层移动操作系统进行异步调用，该操作系统调用本机小部件API。有一个JavaScript引擎，React
    API与Web上的React大部分相同。不同之处在于目标；而不是DOM，这里有异步API调用。该概念在这里可视化：
- en: '![](Images/8a6ec01c-eda8-4eea-8f2e-683980afcb04.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/8a6ec01c-eda8-4eea-8f2e-683980afcb04.png)'
- en: 'This oversimplifies everything that''s happening under the covers, but the
    basic ideas are as follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这过于简化了底层发生的一切，但基本思想如下：
- en: The same React library that's used on the web is used by React Native and runs
    in JavaScriptCore
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Web上使用的React库与React Native使用的相同，并在JavaScriptCore中运行
- en: Messages that are sent to native platform APIs are asynchronous and batched
    for performance purposes
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送到本机平台API的消息是异步的，并且为了性能目的而批处理
- en: React Native ships with components implemented for mobile platforms, instead
    of components that are HTML elements
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: React Native附带了为移动平台实现的组件，而不是HTML元素的组件
- en: Much more on the history and the mechanics of React Native can be found at [https://code.facebook.com/posts/1014532261909640](https://code.facebook.com/posts/1014532261909640).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 有关React Native的历史和机制的更多信息，请访问[https://code.facebook.com/posts/1014532261909640](https://code.facebook.com/posts/1014532261909640)。
- en: React and JSX are familiar
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: React和JSX很熟悉
- en: Implementing a new render target for React is not straightforward. It's essentially
    the same thing as inventing a new DOM that runs on iOS and Android. So why go
    through all the trouble?
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为React实现一个新的渲染目标并不简单。这本质上就像在iOS和Android上发明一个新的DOM。那么为什么要经历这么多麻烦呢？
- en: First, there's a huge demand for mobile apps. The reason is that the mobile
    web browser user experience isn't as good as the native app experience. Second,
    JSX is a fantastic tool for building user interfaces. Rather than having to learn
    a new technology, it's much easier to use what you know.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，移动应用程序的需求非常大。原因是移动网络浏览器的用户体验不如原生应用程序体验好。其次，JSX是构建用户界面的绝佳工具。与其学习新技术，使用自己已经掌握的知识要容易得多。
- en: It's the latter point that's the most relevant to you. If you're reading this
    book, you're probably interested in using React for both web applications and
    native mobile applications. I can't put into words how valuable React is from
    a development resource perspective. Instead of having a team that does web UIs,
    a team that does iOS, a team that does Android, and so on, there's just the UI
    team that understands React.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 后一点对你来说最相关。如果你正在阅读这本书，你可能对在Web应用程序和原生移动应用程序中使用React感兴趣。我无法用言语表达React在开发资源方面有多么宝贵。与其有一个团队做Web
    UI，一个团队做iOS，一个团队做Android等等，只需要一个了解React的UI团队。
- en: The mobile browser experience
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动浏览器体验
- en: Mobile browsers lack many capabilities of mobile applications. This is due to
    the fact that browsers cannot replicate the same native platform widgets as HTML
    elements. You can try to do this, but it's often better to just use the native
    widget, rather than try to replicate it. Partly because this requires less maintenance
    effort on your part, and partly because using widgets that are native to the platform
    means that they're consistent with the rest of the platform. For example, if a
    date picker in your application looks different from all the date pickers the
    user interacts with on their phone, this isn't a good thing. Familiarity is key,
    and using native platform widgets makes familiarity possible.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 移动浏览器缺乏许多移动应用程序的功能。这是因为浏览器无法复制与HTML元素相同的本机平台小部件。你可以尝试这样做，但通常最好只使用本机小部件，而不是尝试复制它。部分原因是这样做需要更少的维护工作，部分原因是使用与平台一致的小部件意味着它们与平台的其他部分一致。例如，如果应用程序中的日期选择器看起来与用户在手机上与之交互的所有日期选择器不同，这不是一件好事。熟悉是关键，使用本机平台小部件使熟悉成为可能。
- en: User interactions on mobile devices are fundamentally different from the interactions
    that you typically design for the web. Web applications assume the presence of
    a mouse, for example, and that the click event on a button is just one phase.
    But, things become more complicated when the user uses their fingers to interact
    with the screen. Mobile platforms have what's called a gesture system to deal
    with these. React Native is a much better candidate for handling gestures than
    React for the web, because it handles these types of things that you don't have
    to think about much in a web app.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 移动设备上的用户交互与通常为Web设计的交互基本不同。例如，Web应用程序假设存在鼠标，并且按钮上的点击事件只是一个阶段。但是，当用户用手指与屏幕交互时，事情变得更加复杂。移动平台有所谓的手势系统来处理这些。React
    Native比Web上的React更适合处理手势，因为它处理了在Web应用程序中不必过多考虑的这些类型的事情。
- en: As the mobile platform is updated, you want the components of your app to stay
    updated too. This isn't a problem with React Native because they're using actual
    components from the platform. Once again, consistency and familiarity are important
    for a good user experience. So, when the buttons in your app look and behave in exactly
    the same way as the buttons in every other app on the device, your app feels like
    part of the device.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 随着移动平台的更新，您希望您的应用程序的组件也保持更新。这对于React Native来说并不是问题，因为它们使用的是来自平台的实际组件。一次，一致性和熟悉度对于良好的用户体验至关重要。因此，当您的应用程序中的按钮看起来和行为方式与设备上的其他每个应用程序中的按钮完全相同时，您的应用程序就会感觉像设备的一部分。
- en: Android and iOS, different yet the same
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android和iOS，不同但相同
- en: When I first heard about React Native, I automatically thought that it would
    be some cross-platform solution that lets you write a single React application
    that will run natively on any device. Do yourself a favor and get out of this
    mindset before you start working with React Native. iOS and Android are different
    on many fundamental levels. Even their user experience philosophies are different,
    so trying to write a single app that runs on both platforms is categorically misguided.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 当我第一次听说React Native时，我自动地认为它会是一种跨平台解决方案，可以让您编写一个单一的React应用程序，可以在任何设备上本地运行。在开始使用React
    Native之前，请摆脱这种思维方式。iOS和Android在许多基本层面上是不同的。甚至它们的用户体验理念也不同，因此试图编写一个可以在两个平台上运行的单一应用程序是完全错误的。
- en: Besides, this is not the goal of React Native. The goal is *React components
    everywhere*, not write once, run anywhere. In some cases, you'll want your app
    to take advantage of an iOS-specific widget or an Android-specific widget. This
    provides a better user experience for that particular platform and should trump
    the portability of a component library.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这并不是React Native的目标。目标是*React组件无处不在*，而不是一次编写，随处运行。在某些情况下，您可能希望您的应用程序利用iOS特定的小部件或Android特定的小部件。这为特定平台提供了更好的用户体验，并应该超越组件库的可移植性。
- en: In later chapters, you'll learn about different tactics for organizing platform-specific
    modules.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在后面的章节中，您将学习有关组织特定于平台的模块的不同策略。
- en: There are several areas that overlap between iOS and Android where the differences
    are trivial. The two widgets aim to accomplish the same thing for the user, in
    roughly the same way. In these cases, React Native will handle the difference
    for you and provide a unified component.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: iOS和Android之间有几个领域存在重叠，差异微不足道。这两个小部件旨在以大致相同的方式为用户完成相同的事情。在这些情况下，React Native将为您处理差异并提供统一的组件。
- en: The case for mobile web apps
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动Web应用的情况
- en: In the previous chapter, you learned how to implement mobile-first React components.
    Not every one of your users is going to be willing to install an app, especially
    if you don't yet have a high download count and rating. The barrier to entry is
    much lower with web applications—the user only needs a browser.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，您学会了如何实现移动优先的React组件。您的用户中并非每个人都愿意安装应用程序，特别是如果您的下载量和评分还不高的话。通过Web应用程序，用户的准入门槛要低得多——用户只需要一个浏览器。
- en: Despite not being able to replicate everything that native platform UIs have
    to offer, you can still implement awesome things in a mobile web UI. Maybe having
    a good web UI is the first step toward getting those download counts and ratings
    up for your mobile app.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管无法复制原生平台UI所提供的一切，但您仍然可以在移动Web UI中实现出色的功能。也许拥有一个良好的Web UI是提高移动应用程序下载量和评分的第一步。
- en: 'Ideally, what you should aim for is the following:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，您应该瞄准以下目标：
- en: Standard web (laptop/desktop browsers)
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准Web（笔记本/台式机浏览器）
- en: Mobile web (phone/tablet browsers)
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动Web（手机/平板浏览器）
- en: Mobile apps (phone/tablet native platform)
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动应用（手机/平板原生平台）
- en: Putting an equal amount of effort into all three of these spaces probably doesn't
    make much sense, as your users probably favor one area over another. Once you
    know, for example, that there's a really high demand for your mobile app compared
    to the web versions, that's when you allocate more effort there.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这三个领域中投入同样的努力可能并不明智，因为你的用户可能更偏爱其中一个领域。一旦你知道，例如，相对于Web版本，你的移动应用程序需求非常高，那么你就应该在那里投入更多的努力。
- en: Summary
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned that React Native is an effort by Facebook to reuse
    React to create native mobile applications. React and JSX are really good at declaring
    UI components, and since there's now a huge demand for mobile applications, it
    makes sense to use what you already know for the Web.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解到React Native是Facebook的一项努力，旨在重用React来创建本机移动应用程序。React和JSX非常擅长声明UI组件，而现在对移动应用程序的需求非常大，因此使用你已经了解的Web知识是有意义的。
- en: The reason there's such a demand for mobile applications over mobile browsers
    is that they just feel better. Web applications lack the ability to handle mobile
    gestures the same way apps can, and they generally don't feel like part of the
    mobile experience from a look and feel perspective.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用程序比移动浏览器更受欢迎的原因是它们的体验更好。Web应用程序缺乏处理移动手势的能力，而且通常在外观和感觉上不像移动体验的一部分。
- en: React Native isn't trying to implement a component library that lets you build
    a single React app that runs on any mobile platform. iOS and Android are fundamentally
    different in many important ways. Where there's overlap, React Native does try
    to implement common components. Will you do away with mobile web apps now that
    we can build natively using React? This will probably never happen, because the
    user can only install so many apps.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: React Native并不试图实现一个组件库，让你可以构建一个在任何移动平台上运行的单个React应用程序。iOS和Android在许多重要方面都有根本的不同。在有重叠的地方，React
    Native确实尝试实现共同的组件。现在我们可以使用React进行本地构建，那么我们是否会放弃移动Web应用程序？这可能永远不会发生，因为用户只能安装那么多应用程序。
- en: Now that you know what React Native is and what its strengths are, you'll learn
    how to get started with new React Native projects in the following chapter.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道了React Native的主要目标是什么以及它的优势，接下来你将在下一章学习如何开始新的React Native项目。
- en: Test your knowledge
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试你的知识
- en: What is the primary goal of React Native?
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: React Native的主要目标是什么？
- en: To remove the need to build mobile web apps.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 消除构建移动Web应用程序的需求。
- en: To make it easy for React developers to apply what they already know about building
    UI components to building native mobile apps.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使React开发人员能够轻松将他们已经了解的构建UI组件的知识应用于构建本机移动应用程序。
- en: To provide a unified user experience across all mobile platforms.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供统一的用户体验跨所有移动平台。
- en: Does React Native provide the exact same experience on iOS and Android?
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: React Native在iOS和Android上提供完全相同的体验吗？
- en: No, iOS and Android have fundamentally different user experiences.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，iOS和Android有根本不同的用户体验。
- en: Yes, you want your app to function identically on iOS and Android.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，你希望你的应用在iOS和Android上的功能完全相同。
- en: Does React Native remove the need for mobile web apps?
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: React Native是否消除了对移动Web应用程序的需求？
- en: Yes, there is no need for mobile web apps if you can build native mobile apps.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，如果你可以构建本机移动应用程序，就不需要移动Web应用程序。
- en: No, there will always be a need for mobile web apps. React Native is there for
    you when you have demand for a native mobile app.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，总会有移动Web应用程序的需求。当你需要本机移动应用程序时，React Native就在那里。
- en: Further reading
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Visit the following links for more information:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 访问以下链接以获取更多信息：
- en: '[https://facebook.github.io/react-native/](https://facebook.github.io/react-native/)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://facebook.github.io/react-native/](https://facebook.github.io/react-native/)'
- en: '[https://code.facebook.com/posts/1014532261909640](https://code.facebook.com/posts/1014532261909640)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://code.facebook.com/posts/1014532261909640](https://code.facebook.com/posts/1014532261909640)'
