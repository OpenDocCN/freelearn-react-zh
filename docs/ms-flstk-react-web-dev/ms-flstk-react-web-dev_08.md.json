["```jsx\n$ docker info\n\n```", "```jsx\n$ docker run hello-world\n\n```", "```jsx\n// source: https://github.com/docker-library/hello-world/blob/master/Dockerfile \n\nFROM scratch \n\nCOPY hello / \n\nCMD [\"/hello\"]\n\n```", "```jsx\nAWS_ACCESS_KEY_ID=<<___AWS_ACCESS_KEY_ID__>> \n\nAWS_SECRET_ACCESS_KEY=<<___AWS_SECRET_ACCESS_KEY__>> \n\nAWS_BUCKET_NAME=publishing-app \n\nAWS_REGION_NAME=eu-central-1 \n\nMONGO_USER=<<___your_mlab_mongo_user__>> \n\nMONGO_PASS=<<___your_mlab_mongo_pass__>> \n\nMONGO_PORT=<<___your_mlab_mongo_port__>> \n\nMONGO_ENV=publishingapp \n\nMONGO_HOSTNAME=<<___your_mlab_mongo_hostname__>>\n\n```", "```jsx\nvar env = require('node-env-file'); \n\n// Load any undefined ENV variables form a specified file.  \n\nenv(__dirname + '/.env'); \n\nrequire(\"babel-core/register\"); \n\nrequire(\"babel-polyfill\"); \n\nrequire('./server');\n\n```", "```jsx\n// this is old code from our codebase: \n\nimport mongoose from 'mongoose'; \n\nvar Schema = mongoose.Schema; \n\nconst conf = { \n\n  hostname: process.env.MONGO_HOSTNAME || 'localhost', \n\n  port: process.env.MONGO_PORT || 27017, \n\n  env: process.env.MONGO_ENV || 'local', \n\n}; \n\nmongoose.connect(&grave;mongodb://${conf.hostname}: \n\n ${conf.port}/${conf.env}&grave;);\n\n```", "```jsx\nimport mongoose from 'mongoose'; \n\nvar Schema = mongoose.Schema; \n\nconst conf = { \n\n  hostname: process.env.MONGO_HOSTNAME || 'localhost', \n\n  port: process.env.MONGO_PORT || 27017, \n\n  env: process.env.MONGO_ENV || 'local', \n\n}; \n\nlet dbUser \n\nif(process.env.MONGO_USER && process.env.MONGO_PASS) { \n\n  dbUser = {user: process.env.MONGO_USER, pass: \n\n   process.env.MONGO_PASS} \n\n} else { \n\n  dbUser = undefined; // on local dev not required \n\n} \n\nmongoose.connect(&grave;mongodb://${conf.hostname}:${conf.port}/${conf.env}&grave;, dbUser);\n\n```", "```jsx\nnpm start\n\n```", "```jsx\n[[your are in the project main directory]]\n\n$ touch Dockerfile\n\n```", "```jsx\nFROM centos:centos7 \n\nRUN yum update -y \n\nRUN yum install -y tar wget \n\nRUN wget -q https://nodejs.org/dist/v4.0.0/node-v4.0.0-linux-x64.tar.gz -O - | tar xzf - -C /opt/ \n\nRUN mv /opt/node-v* /opt/node \n\nRUN ln -s /opt/node/bin/node /usr/bin/node \n\nRUN ln -s /opt/node/bin/npm /usr/bin/npm \n\nCOPY . /opt/publishing-app/ \n\nWORKDIR /opt/publishing-app \n\nRUN npm install \n\nRUN yum clean all \n\nEXPOSE 80 \n\nCMD [\"npm\", \"start\"]\n\n```", "```jsx\n$ [[[in the main directory]]]\n\n$ touch .dockerignore\n\n```", "```jsx\n.git \n\nnode_modules \n\n.DS_Store\n\n```", "```jsx\ndocker login\n\n```", "```jsx\ndocker build -t przeor/pub-app-docker .\n\n```", "```jsx\n[[[striped from here for the sake of brevity]]]\n\nStep 12 : EXPOSE 80\n\n ---> Running in 081e0359cbd5\n\n ---> ce0433b220a0\n\nRemoving intermediate container 081e0359cbd5\n\nStep 13 : CMD npm start\n\n ---> Running in 581df04c8c81\n\n ---> 1970dde57fec\n\nRemoving intermediate container 581df04c8c81\n\nSuccessfully built 1910dde57fec\n\n```", "```jsx\n$ docker-machine env\n\n```", "```jsx\nexport DOCKER_TLS_VERIFY=\"1\"\n\nexport DOCKER_HOST=\"tcp://192.168.99.100:2376\"\n\nexport DOCKER_CERT_PATH=\"/Users/przeor/.docker/machine/machines/default\"\n\nexport DOCKER_MACHINE_NAME=\"default\"\n\n# Run this command to configure your shell: \n\n# eval $(docker-machine env)\n\n```", "```jsx\n$ docker run -d -p 80:80  przeor/pub-app-docker npm start\n\n```", "```jsx\ndocker ps\n\n```", "```jsx\ndocker run -i -t -p 80:80 przeor/pub-app-docker\n\n```", "```jsx\n.git \n\nnode_modules \n\n.DS_Store \n\n.env\n\n```", "```jsx\nif(!process.env.PORT) { \n\n  var env = require('node-env-file'); \n\n  // Load any undefined ENV variables form a specified file.  \n\n  env(__dirname + '/.env'); \n\n}\n\n```", "```jsx\ndocker build -t przeor/pub-app-docker\n\n```", "```jsx\n$ docker run -i -t -e PORT=80 -e AWS_ACCESS_KEY_ID='AKIMOCKED5JM4VUHA' -e AWS_SECRET_ACCESS_KEY='k3JxMOCKED0oRI6w3ZEmENE1I0l' -e AWS_BUCKET_NAME='publishing-app' -e AWS_REGION_NAME='eu-central-1' -e MONGO_USER='usermlab' -e MONGO_PASS='MOCKEDpassword' -e MONGO_PORT=25732 -e MONGO_ENV='publishingapp' -e MONGO_HOSTNAME='ds025761.mlab.com' -p 80:80 przeor/pub-app-docker\n\nnpm start\n\n```", "```jsx\nAWS_ACCESS_KEY_ID=<<___AWS_ACCESS_KEY_ID__>>\n\nAWS_SECRET_ACCESS_KEY=<<___AWS_SECRET_ACCESS_KEY__>>\n\nAWS_BUCKET_NAME=publishing-app\n\nAWS_REGION_NAME=eu-central-1\n\nMONGO_USER=<<___your_mlab_mongo_user__>>\n\nMONGO_PASS=<<___your_mlab_mongo_pass__>>\n\nMONGO_PORT=<<___your_mlab_mongo_port__>>\n\nMONGO_ENV=publishingapp\n\nMONGO_HOSTNAME=<<___your_mlab_mongo_hostname__>>\n\nPORT=80\n\n```", "```jsx\ndocker push przeor/pub-app-docker\n\n```", "```jsx\n docker images\n\n docker rm CONTAINER-ID\n\n```", "```jsx\n        docker ps\n\ndocker stop CONTAINER-ID\n\n```", "```jsx\n        docker tag przeor/pub-app-docker:latest przeor/pub-app-  \n\n        docker:0.1\n\ndocker images\n\n```", "```jsx\n        $ docker-machine env\n\n```", "```jsx\n        docker build -t przeor/pub-app-docker .\n\n```", "```jsx\n        $ docker run -d -p 80:80 przeor/pub-app-docker npm start\n\n```", "```jsx\n        docker run -i -t -p 80:80 przeor/pub-app-docker\n\n```", "```jsx\n$ docker run -d -p 80:80  przeor/pub-app-docker npm start\n\n```", "```jsx\n$ cd ~/Downloads/\n\n$ chmod 400 pubapp-ec2-key-pair.pem\n\n$ ssh -i pubapp-ec2-key-pair.pem ec2-user@52.29.107.244\n\n```", "```jsx\n[ec2-user@ip-172-31-26-81 ~]$ sudo yum update -y\n\n[ec2-user@ip-172-31-26-81 ~]$ sudo yum install -y docker\n\n[ec2-user@ip-172-31-26-81 ~]$ sudo service docker start\n\n```", "```jsx\n[ec2-user@ip-172-31-26-81 ~]$ sudo usermod -a -G docker ec2-user\n\n[ec2-user@ip-172-31-26-81 ~]$ exit\n\n> ssh -i pubapp-ec2-key-pair.pem ec2-user@52.29.107.244\n\n[ec2-user@ip-172-31-26-81 ~]$ docker info\n\n```", "```jsx\n    [ec2-user@ip-172-31-26-81 ~]$ docker run -d PORT=80 -e AWS_ACCESS_KEY_ID='AKIMOCKED5JM4VUHA' -e AWS_SECRET_ACCESS_KEY='k3JxMOCKED0oRI5w3ZEmENE1I0l' -e AWS_BUCKET_NAME='publishing-app' -e AWS_REGION_NAME='eu-central-1' -e MONGO_USER='usermlab' -e MONGO_PASS='MOCKEDpassword' -e MONGO_PORT=25732 -e MONGO_ENV='publishingapp' -e MONGO_HOSTNAME='ds025761.mlab.com' -p 80:80 przeor/pub-app-docker npm start\n\n```", "```jsx\nAWS_ACCESS_KEY_ID=<<___AWS_ACCESS_KEY_ID__>>\n\nAWS_SECRET_ACCESS_KEY=<<___AWS_SECRET_ACCESS_KEY__>>\n\nAWS_BUCKET_NAME=publishing-app\n\nAWS_REGION_NAME=eu-central-1\n\nMONGO_USER=<<___your_mlab_mongo_user__>>\n\nMONGO_PASS=<<___your_mlab_mongo_pass__>>\n\nMONGO_PORT=<<___your_mlab_mongo_port__>>\n\nMONGO_ENV=publishingapp\n\nMONGO_HOSTNAME=<<___your_mlab_mongo_hostname__>>\n\nPORT=80\n\n```", "```jsx\n[ec2-user@ip-172-31-26-81 ~]$ docker ps\n\n```", "```jsx\n[ec2-user@ip-172-31-26-81 ~]$ curl http://localhost\n\n```", "```jsx\n    DNS name: \n\nEC2Contai-EcsElast-1E4Y3WOGMV6S4-39378274.eu-central-\n\n    1.elb.amazonaws.com (A Record)\n\n```", "```jsx\nns-1276.awsdns-31.org.\n\nns-1775.awsdns-29.co.uk.\n\nns-763.awsdns-31.net.\n\nns-323.awsdns-40.com.\n\n```", "```jsx\nns-1276.awsdns-31.org\n\nns-1775.awsdns-29.co.uk\n\nns-763.awsdns-31.net\n\nns-323.awsdns-40.com\n\n```"]