["```jsx\nnode -v\n```", "```jsx\nnpm -v\n```", "```jsx\nnpm init -y\n```", "```jsx\n{\n    \"name\": \"movieList\",\n    \"version\": \"1.0.0\",\n    \"description\": \"\",\n    \"main\": \"index.js\",\n    \"scripts\": {\n        \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n    },\n    \"keywords\": [],\n    \"author\": \"\",\n    \"license\": \"ISC\"\n}\n```", "```jsx\nnpm install --save-dev webpack webpack-cli\n```", "```jsx\n{\n    \"name\": \"movieList\",\n    \"version\": \"1.0.0\",\n    \"description\": \"\",\n    \"main\": \"index.js\",\n    \"scripts\": {\n_       \"start\": \"webpack --mode development\",\n+       \"build\": \"webpack --mode production\",\n        \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n    },\n    \"keywords\": [],\n    \"author\": \"\",\n    \"license\": \"ISC\"\n}\n```", "```jsx\nconsole.log(\"movieList\")\n```", "```jsx\nnode dist/main.js\n```", "```jsx\nnpm install react react-dom\n```", "```jsx\nnpm install --save-dev @babel/core @babel/preset-env @babel/preset-react babel-loader\n```", "```jsx\nmodule.exports = {\n    module: {\n        rules: [\n            {\n                test: /\\.js$/,\n                exclude: /node_modules/,\n                use: {\n                    loader:'\"babel-loader',\n                },\n            },\n        ],\n    },\n}\n```", "```jsx\n{\n    \"presets\": [\n        [\n            \"@babel/preset-env\", \n            {\n                \"targets\": {\n                    \"node\": \"current\"\n                }\n            }\n        ],\n        \"@babel/react\"\n    ]\n}\n```", "```jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n    return <h1>movieList</h1>;\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n```", "```jsx\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>movieList</title>\n</head>\n<body>\n    <section id=\"root\"></section>\n</body>\n</html>\n```", "```jsx\nnpm install --save-dev html-webpack-plugin\n```", "```jsx\nconst HtmlWebPackPlugin = require('html-webpack-plugin');\n\nconst htmlPlugin = new HtmlWebPackPlugin({\n template: './src/index.html',\n filename: './index.html',\n});\n\nmodule.exports = {\n    module: {\n        rules: [\n            {\n                test: /\\.js$/,\n                exclude: /node_modules/,\n                use: {\n                    loader: 'babel-loader',\n                },\n            },\n        ],\n    },\n    plugins: [htmlPlugin],\n};\n```", "```jsx\nnpm install --save-dev webpack-dev-server\n```", "```jsx\n{\n    \"name\": \"movieList\",\n    \"version\": \"1.0.0\",\n    \"description\": \"\",\n    \"main\": \"index.js\",\n    \"scripts\": {\n-       \"start\": \"webpack --mode development\",\n+       \"start\": \"webpack-dev-server --mode development --open\",        \n        \"build\": \"webpack --mode production\"\n    },\n    \"keywords\": [],\n    \"author\": \"\",\n    \"license\": \"ISC\"\n\n    ...\n}\n```", "```jsx\nmovieList\n|-- dist\n    |-- index.html\n    |-- main.js\n|-- node_modules\n|-- src\n    |-- index.js\n    |-- index.html\n.babelrc\npackage.json\nwebpack.config.js\n```", "```jsx\nimport React, { Component } from 'react';\n\nclass List extends Component {\n    render() {\n        return <h1>movieList</h1>;\n    }\n};\n\nexport default List;\n```", "```jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n+ import List from './containers/List';\n\nconst App = () => {\n-   return <h1>movieList</h1>;\n+   return <List />;\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n```", "```jsx\nmovieList\n|-- dist\n    |-- index.html\n    |-- main.js\n|-- src\n |-- containers\n |-- List.js\n    |-- index.js\n    |-- index.html\n.babelrc\npackage.json\nwebpack.config.js\n```", "```jsx\nimport React from 'react';\n\nconst Card = () => {\n    return <h2>movie #1</h2>;\n};\n\nexport default Card;\n```", "```jsx\nimport React, { Component } from 'react';\n+ import Card from '../components/Card/Card';\n\nclass List extends Component {\n    render() {\n-       return <h1>movieList</h1>;\n+       return <Card />;\n    }\n};\n\nexport default List;\n```", "```jsx\nmovieList\n|-- dist\n    |-- index.html\n    |-- main.js\n|-- src\n |-- components\n |-- Card\n |-- Card.js\n    |-- containers\n        |-- List.js\n    |-- index.js\n    |-- index.html\n.babelrc\npackage.json\nwebpack.config.js\n```", "```jsx\n<App>\n    <List>\n        <Card>\n            <h1>movieList</h1>\n        </Card>\n    </List>\n</App>\n```", "```jsx\nmovieList\n|-- dist\n    |-- index.html\n    |-- main.js\n|-- src\n |-- assets\n |-- data.json\n    |-- components\n        |-- Card\n            |-- Card.js\n    |-- containers\n        |-- List.js\n |-- media\n |-- avatar.jpg\n |-- avengers_infinity_war.jpg\n |-- jurassic_world.jpg\n |-- star_wars_the_force_awakens.jpg\n |-- titanic.jpg\n    |-- index.js\n    |-- index.html\n.babelrc\npackage.json\nwebpack.config.js\n```", "```jsx\nimport React from 'react';\n\nconst Card = ({ movie }) => {\n     return (\n        <div>\n            <h2>{`#${movie.ranking} - ${movie.title} (${movie.year})`}</h2>\n            <img src={movie.img.src} alt={movie.img.alt} width='200' />\n            <p>{`Distributor: ${movie.distributor}`}</p>\n            <p>{`Amount: ${movie.amount}`}</p>\n        </div>\n    );\n};\n\nexport default Card;\n```", "```jsx\n...\n\nclass List extends Component {+\n+   constructor() {\n+       super()\n+       this.state = {\n+           data: [],\n+           loading: true,\n+       };\n+   }\n\n    return (\n      ...\n\n```", "```jsx\n...\n\nclass List extends Component {\n\n    ...\n\n +    async componentDidMount() {\n +        const movies = await fetch('../../assets/data.json');\n +        const moviesJSON = await movies.json();\n\n +        if (moviesJSON) {\n +            this.setState({\n +                data: moviesJSON,\n +                loading: false,\n +            });\n +        }\n +    }\n\n    return (\n      ...\n```", "```jsx\nclass List extends Component {\n\n    ...\n\n    render() {\n _     return <Card />\n +     const { data, loading } = this.state;\n\n+      if (loading) {\n+         return <div>Loading...</div>\n+      }\n\n+      return data.map(movie => <Card key={ movie.id } movie={ movie } />);\n    }\n}\n\nexport default List;\n```", "```jsx\nnpm install --save-dev bootstrap\n```", "```jsx\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport List from './containers/List';\n+ import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n    return <List />;\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n```", "```jsx\nnpm install --save-dev css-loader style-loader\n```", "```jsx\nconst HtmlWebPackPlugin = require('html-webpack-plugin');\n\nconst htmlPlugin = new HtmlWebPackPlugin({\n    template: './src/index.html',\n    filename: './index.html',\n});\n\nmodule.exports = {\n    module: {\n        rules: [\n            {\n                test: /\\.js$/,\n                exclude: /node_modules/,\n                use: {\n                    loader: \"babel-loader\"\n                }\n            },\n+           {\n+               test: /\\.css$/,\n+               use: ['style-loader', 'css-loader']\n+           }\n        ]\n    },\n    plugins: [htmlPlugin]\n};\n```", "```jsx\n...\n\nconst App = () => {\n    return (\n+        <div className='container-fluid'>\n            <List />\n </div>\n    );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n```", "```jsx\n...\n\nclass List extends Component {\n\n    ...\n\n    render() {\n        const { data, loading } = this.state;\n\n        if (loading) {\n            return <div>Loading...</div>;\n        }\n\n         return (\n +         <div class='row'>\n                {data.map(movie =>\n +                 <div class='col-sm-2'>\n                        <Card key={ movie.id } movie={ movie } />\n +                 </div>\n                )}\n +          </div>\n        );\n    }\n}\n\nexport default List;\n```", "```jsx\nimport React from 'react';\n\nconst Card = ({ movie }) => {\n    return (\n        <div className='card'>\n            <img src={movie.img.src} className='card-img-top' alt={movie.img.alt} />\n            <div className='card-body'>\n                <h2 className='card-title'>{`#${movie.ranking} - ${movie.title} (${movie.year})` }</h2>\n            </div>\n            <ul className='list-group list-group-flush'>\n                <li className='list-group-item'>{`Distributor: ${movie.distributor}`}</li>\n                <li className='list-group-item'>{`Amount: ${movie.amount}`}</li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Card;\n```", "```jsx\n...\n\nconst App = () => {\n    return (\n        <div className='container-fluid'>\n_            <h1>movieList</h1>\n+            <nav className='navbar sticky-top navbar-light bg-dark'>\n+               <h1 className='navbar-brand text-light'>movieList</h1>\n+           </nav>\n\n            <List />\n        </div>\n    );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n```", "```jsx\nnpm install --save-dev eslint eslint-loader eslint-plugin-react\n```", "```jsx\nmodule.exports = {\n    \"env\": {\n        \"browser\": true,\n        \"es6\": true\n    },\n    \"parserOptions\": {\n        \"ecmaFeatures\": {\n            \"jsx\": true\n        },\n        \"ecmaVersion\": 2018,\n        \"sourceType\": \"module\"\n    },\n    \"plugins\": [\n        \"react\"\n    ],\n    \"extends\": [\"eslint:recommended\", \"plugin:react/recommended\"]\n};       \n```", "```jsx\n...\n\nmodule.exports = {\n    module: {\n        rules: [\n            {\n                test: /\\.js$/,\n                exclude: /node_modules/,\n+               use: ['babel-loader', 'eslint-loader'] \n            },\n            {\n                test: /\\.css$/,\n                use: ['style-loader', 'css-loader']\n            }\n        ]\n    },\n    plugins: [htmlPlugin]\n};\n```", "```jsx\nmovieList/src/components/Card/Card.js\n 3:17  error 'movie' is missing in props validation  react/prop-types\n```", "```jsx\nnpm install --save prop-types\n```", "```jsx\nimport React from 'react';\n+ import PropTypes from 'prop-types';\n\nconst Card = ({ movie }) => {\n    ...\n};\n\n+ Card.propTypes = {\n+    movie: PropTypes.shape({}),\n+ };\n\nexport default Card;\n```", "```jsx\n...\n\nCard.propTypes = {\n_   movie: PropTypes.shape({}),\n+    movie: PropTypes.shape({\n+    title: PropTypes.string,\n+    distributor: PropTypes.string,\n+     year: PropTypes.number,\n+     amount: PropTypes.string,\n+     img: PropTypes.shape({\n+       src: PropTypes.string,\n+       alt: PropTypes.string\n+     }),\n+     ranking: PropTypes.number\n+   }).isRequired  \n};  \n```"]