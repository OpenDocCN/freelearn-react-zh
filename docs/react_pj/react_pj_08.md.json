["```jsx\nnpm install -g expo-cli\n```", "```jsx\nexpo init house-listing\n```", "```jsx\ncd house-listing\nnpm start\n```", "```jsx\nhouse-listing\n|-- .expo\n|-- assets\n    |-- icon.png\n    |-- splash.png\n|-- node_modules\n.gitignore\nApp.js\napp.json\nbabel.config.js\npackage.json\n```", "```jsx\nnpm install react-navigation react-navigation-stack react-navigation-tabs\n```", "```jsx\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n+ import { createAppContainer } from 'react-navigation';\n+ import { createStackNavigator } from 'react-navigation-stack';\n\nexport default function App() {\n    ...\n```", "```jsx\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\n\n- export default function App() {\n- return (\n+ const Home = () => (\n    <View style={styles.container}>\n        <Text>Open up App.js to start working on your app!</Text>\n    </View>\n  );\n- } const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}); + const StackNavigator = createStackNavigator({\n+  Home: {\n+    screen: Home,\n+  },\n+ });\n\n+ export default createAppContainer(StackNavigator);\n```", "```jsx\n...\n\nconst AppNavigator = createStackNavigator({\n  Home: {\n    screen: Home,\n+   navigationOptions: { title: 'Home' },\n  },\n});\n\nexport default createAppContainer(AppNavigator);\n```", "```jsx\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\n\nconst Home = () => (\n  <View style={styles.container}>\n    <Text>Open up App.js to start working on your app!</Text>\n  </View>\n);\n\n+ const Detail = () => (\n+  <View style={styles.container}>\n+    <Text>Open up App.js to start working on your app!</Text>\n+  </View>\n+ );\n\n...\n\nconst AppNavigator = createStackNavigator({\n  Home: {\n    screen: Home,\n    navigationOptions: { title: 'Home' },\n  },\n+ Detail: {\n+   screen: Detail,\n+   navigationOptions: { title: 'Detail' },\n+ },\n});\n\nexport default createAppContainer(AppNavigator);\n```", "```jsx\n...\n\nconst AppNavigator = createStackNavigator({\n  Home: {\n    screen: Home,\n    navigationOptions: { title: 'Home' },\n  },\n  Detail: {\n    screen: Detail,\n    navigationOptions: { title: 'Detail' },\n  },\n+ }, { initialRouteName: 'Home' });\n- });\n\nexport default createAppContainer(AppNavigator);\n```", "```jsx\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\n\n- const Home = () => (\n+ const Home = ({ navigation }) => (\n  <View style={styles.container}>\n    <Text>Open up App.js to start working on your app!</Text>\n  </View>\n);\n\n...\n```", "```jsx\nimport React from 'react';\n- import { StyleSheet, Text, View } from 'react-native';\n+ import { Button, StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\n\nconst Home = ({ navigation }) => (\n  <View style={styles.container}>\n    <Text>Open up App.js to start working on your app!</Text>\n+   <Button onPress={() => navigation.navigate('Detail')} title='Go to Detail' />\n  </View>\n);\n\n...\n```", "```jsx\n...\n\n- const Detail = () => (\n+ const Detail = ({ navigation }) => (\n  <View style={styles.container}>\n    <Text>Open up App.js to start working on your app!</Text>\n+    <Button onPress={() => navigation.goBack()} title='Go to back to Home' />\n  </View>\n);\n\n...\n```", "```jsx\nimport React from 'react';\nimport { Button, StyleSheet, Text, View } from 'react-native';\n\nconst Home = ({ navigation }) => (\n  <View style={styles.container}>\n    <Text>Open up App.js to start working on your app!</Text>\n    <Button onPress={() => navigation.navigate('Detail')} title='Go to Detail' />\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default Home;\n```", "```jsx\nimport React from 'react';\nimport { Button, StyleSheet, Text, View } from 'react-native';\n\nconst Detail = ({ navigation }) => (\n  <View style={styles.container}>\n    <Text>Open up App.js to start working on your app!</Text>\n    <Button onPress={() => navigation.goBack()} title='Go to back to Home' />\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default Detail;\n```", "```jsx\nimport React from 'react';\n- import { Button, StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack'; + import Home from './Screens/Home';\n+ import Detail from './Screens/Detail';\n\n- const Home = ({ navigation }) => (\n-   <View style={styles.container}>\n-     <Text>Open up App.js to start working on your app!</Text>\n-     <Button onPress={() => navigation.navigate('Detail')} title='Go to Detail' />\n-   </View>\n- );\n\n- const Detail = ({ navigation }) => (\n-   <View style={styles.container}>\n-     <Text>Open up App.js to start working on your app!</Text>\n-     <Button onPress={() => navigation.goBack()} title='Go to back to Home' />\n-   </View>\n- );\n\n- const styles = StyleSheet.create({\n-  container: {\n-   flex: 1,\n-   backgroundColor: '#fff',\n-   alignItems: 'center',\n-   justifyContent: 'center',\n-  },\n- });\n\nconst AppNavigator = createStackNavigator({\n  Home: {\n    screen: Home,\n    navigationOptions: { title: 'Home' },\n  },\n  Detail: {\n    screen: Detail,\n    navigationOptions: { title: 'Detail' },\n  },\n}, { initialRouteName: 'Home' });\n\nexport default createAppContainer(AppNavigator);\n```", "```jsx\nimport React from 'react';\nimport { Button, StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\n+ import { createBottomTabNavigator } from 'react-navigation-tabs'; \nimport Home from './Screens/Home';\nimport Detail from './Screens/Detail';\n\n...\n```", "```jsx\nimport React from 'react';\nimport { Button, StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation'; \nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport Home from './Screens/Home';\nimport Detail from './Screens/Detail';\n\n- const AppNavigator = createStackNavigator({\n+ const HomeStack = createStackNavigator({\n    Home: {\n      screen: Home,\n      navigationOptions: { title: 'Home' },\n    },\n    Detail: {\n      screen: Detail,\n      navigationOptions: { title: 'Detail' },\n    },\n-  }, { initialRouteName: 'Home' });\n+ });\n\n+ const AppNavigator = createBottomTabNavigator({\n+  Home: HomeStack\n+ }, { initialRouteName: 'Home' });\n\nexport default createAppContainer(AppNavigator);\n```", "```jsx\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nconst Settings = ({ navigation }) => (\n  <View style={styles.container}>\n    <Text>Open up App.js to start working on your app!</Text>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default Settings;\n```", "```jsx\nimport React from 'react';\nimport { Button, StyleSheet, Text, View } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport Home from './Screens/Home';\nimport Detail from './Screens/Detail';\n+ import Settings from './Screens/Settings';\n\n...\n\nconst AppNavigator = createBottomTabNavigator({\n   Home: HomeStack,\n+  Settings,\n}, { initialRouteName: 'Home' });\n\nexport default createAppContainer(AppNavigator);\n```", "```jsx\n...\n\n+ const SettingsStack = createStackNavigator({\n+  Settings: {\n+    screen: Settings,\n+    navigationOptions: { title: 'Settings' },\n+  },\n+ });\n\nconst AppNavigator = createBottomTabNavigator({\n   Home: HomeStack,\n-  Settings,\n+  Settings: SettingsStack,\n}, { initialRouteName: 'Home' });\n\nexport default createAppContainer(AppNavigator);\n```", "```jsx\n...\n\n- const Home = ({ navigation }) => (\n+ const Home = ({ navigation }) => {\n+  const [loading, setLoading] = React.useState(true);\n+  const [error, setError] = React.useState('');\n+  const [data, setData] = React.useState([]);\n\n+  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <Button onPress={() => navigation.navigate('Detail')} title='Go to Detail' />\n    </View>\n   )\n+ };\n```", "```jsx\n...\nconst Home = ({ navigation }) => {\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState('');\n  const [data, setData] = React.useState([]);\n\n+  const fetchAPI = async () => {\n+    try {\n+      const data = await fetch('https://my-json-server.typicode.com/PacktPublishing/React-Projects/listings');\n+      const dataJSON = await data.json();\n\n+      if (dataJSON) {\n+        setData(dataJSON);\n+        setLoading(false);\n+      }\n+    } catch(error) {\n+      setLoading(false);\n+      setError(error.message);\n+    }\n+  };\n\n+  React.useEffect(() => {\n+    fetchAPI();\n+  }, []);\n\n  return (\n    ...\n```", "```jsx\nimport React from 'react';\n- import { Button, StyleSheet, Text, View } from 'react-native';\n+ import { FlatList, StyleSheet, Text, View } from 'react-native';\n\nconst Home = ({ navigation }) => {\n\n  ...\n\n  return (\n    <View style={styles.container}>\n-     <Text>Open up App.js to start working on your app!</Text>\n-     <Button onPress={() => navigation.navigate('Detail')} title='Go to Detail' />\n+     {!loading && !error && <FlatList\n+       data={data}\n+       renderItem={({item}) => <Text>{item.title}</Text>}\n+     />}\n    </View>\n  )\n};\n\n...\n```", "```jsx\n  ...\n\n  return (\n    <View style={styles.container}>\n     {!loading && !error && <FlatList\n       data={data}\n+      keyExtractor={item => String(item.id)}\n       renderItem={({item}) => <Text>{item.title}</Text>}\n     />}\n    </View>\n  );\n};\n\n...\n```", "```jsx\nimport React from 'react';\n- import { FlatList, View, Text } from 'react-native';\n+ import { FlatList, View, Text, TouchableOpacity } from 'react-native';\n\nconst Home = ({ navigation }) => {\n  ...\n\n  return (\n    <View style={styles.container>\n      {!loading && !error && <FlatList\n        data={data}\n        keyExtractor={item => String(item.id)}\n-       renderItem={({item}) => <Text>{item.text}</Text>}\n+       renderItem={({item}) => (\n+         <TouchableOpacity onPress={() => navigation.navigate('Detail')}>\n+           <Text>{item.title}</Text>\n+         </TouchableOpacity>\n+       )}\n      />}\n    </View>\n  );\n};\n\n...\n```", "```jsx\n  ...\n\n  return (\n    <View style={styles.container>\n      {!loading && !error && <FlatList\n        data={data}\n        keyExtractor={item => String(item.id)}\n        renderItem={({item}) => (\n-         <TouchableOpacity onPress={() => navigation.navigate('Detail')}>\n+         <TouchableOpacity onPress={() => navigation.navigate('Detail', { item })}>\n           <Text>{item.title}</Text>\n         </TouchableOpacity>\n       )}\n      />}\n    </View>\n  );\n};\n\n...\n```", "```jsx\nimport React from 'react';\n- import { Button, StyleSheet, Text, View } from 'react-native';\n+ import { StyleSheet, Text, View } from 'react-native';\n\n- const Detail = ({ navigation }) => (\n+ const Detail = ({ navigation }) => {\n+   const item = navigation.getParam('item', {})\n\n+   return (\n      <View style={styles.container}>\n-       <Text>Open up - App.js to start working on your app!</Text>\n-       <Button onPress={() => navigation.goBack()} title='Go to back to Home' />\n+       <Text>{item.title}</Text>\n      </View>\n    );\n+ };\n\n...\n\nexport default Detail;\n```", "```jsx\nnpm install styled-components\n```", "```jsx\nimport React from 'react';\n- import { FlatList, StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n+ import { FlatList, Text, View, TouchableOpacity } from 'react-native';\n+ import styled from 'styled-components/native'; \nconst Home = ({ navigation }) => {\n  ...\n```", "```jsx\n... + const ListingsWrapper = styled(View)`\n+  flex: 1;\n+  background-color: #fff;\n+  align-items: center;\n+  justify-content: center;\n+ `\n\n- const styles = StyleSheet.create({\n-   container: {\n-     flex: 1,\n-     backgroundColor: '#fff',\n-     alignItems: 'center',\n-     justifyContent: 'center',\n-   },\n- }); \nconst Home = ({ navigation }) => {\n  ...\n  return (\n-    <View style={styles.container}>\n+    <ListingsWrapper>\n      {!loading && !error && <FlatList\n        data={data}\n        keyExtractor={item => String(item.id)}\n        renderItem={({item}) => (\n          <TouchableOpacity onPress={() => navigation.navigate('Detail', { item })}>\n            <Text>{item.title}</Text>\n          </TouchableOpacity>\n        )}\n      />}\n+    </ListingsWrapper>\n-    </View>\n  );\n};\n\nexport default Home;\n```", "```jsx\n...\n\nconst ListingsWrapper = styled(View)`\n  flex: 1;\n  background-color: #fff;\n  align-items: center;\n  justify-content: center;\n`\n\n+ const Listings = styled(FlatList)`\n+  width: 100%;\n+  padding: 5%;\n+ `; \nconst Home = ({ navigation }) => {\n  ...\n  return (\n    <ListingsWrapper>\n-     {!loading && !error && <FlatList\n+     {!loading && !error && <Listings\n        data={data}\n        keyExtractor={item => String(item.id)}\n        renderItem={({item}) => (\n          <TouchableOpacity onPress={() => navigation.navigate('Detail', { item })}>\n            <Text>{item.title}</Text>\n          </TouchableOpacity>\n        )}\n      />}\n    </ListingsWrapper>\n  );\n};\n\nexport default Home;\n```", "```jsx\nimport React from 'react';\nimport styled from 'styled-components/native';\nimport { Image, Text, View, TouchableOpacity } from 'react-native';\n\nconst ListingItemWrapper = styled(TouchableOpacity)`\n display: flex;\n flex-direction: row;\n padding: 2%;\n background-color: #eee;\n border-radius: 5px;\n margin-bottom: 5%;\n`;\n\nexport const Title = styled(Text)`\n flex-wrap: wrap;\n width: 99%;\n font-size: 20px;\n`\n\nexport const Price = styled(Text)`\n font-weight: bold;\n font-size: 20px;\n color: blue;\n`\n\nconst Thumbnail = styled(Image)`\n border-radius: 5px;\n margin-right: 4%;\n height: 200px;\n width: 200px;\n`\n\nconst ListingItem = ({ item, navigation }) => (\n <ListingItemWrapper onPress={() => navigation.navigate('Detail', { item })}>\n   <Thumbnail\n     source={{uri: item.thumbnail}}\n   />\n   <View>\n     <Title>{item.title}</Title>\n     <Price>{item.price}</Price>\n   </View>\n </ListingItemWrapper>\n);\n\nexport default ListingItem;\n```", "```jsx\nimport React from 'react';\n- import { FlatList, View, Text, TouchableOpacity } from 'react-native';\n+ import { FlatList, View } from 'react-native';\nimport styled from 'styled-components/native';\n+ import ListingItem from '../Components/Listing/ListingItem'\n\n...\nconst Home = ({ navigation }) => {\n  ...\n\n  return (\n    <ListingsWrapper>\n      {!loading && !error && <Listings\n        data={data}\n        keyExtractor={item => String(item.id)}\n-       renderItem={({item}) => (\n-         <TouchableOpacity onPress={() => navigation.navigate('Detail', { item })}>\n-           <Text>{item.title}</Text>\n-         </TouchableOpacity>\n-       )}\n+       renderItem={({item}) => <ListingItem item={item} />}\n      />}\n    </ListingsWrapper>\n  );\n};\n\nexport default Home;\n```", "```jsx\nimport React from 'react';\n+ import { Ionicons } from '@expo/vector-icons';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport Home from './Screens/Home';\nimport Detail from './Screens/Detail';\nimport Settings from './Screens/Settings';\n\nconst HomeStack = createStackNavigator({\n  ...\n```", "```jsx\n...\n\nconst AppNavigator = createBottomTabNavigator({\n  Home: HomeStack,\n  Settings: SettingsStack,\n- }, { initialRouteName: 'Home' });\n+ }, {\n+  initialRouteName: 'Home',\n+  defaultNavigationOptions: ({ navigation }) => ({\n+    tabBarIcon: () => {\n+      const { routeName } = navigation.state;\n\n+      let iconName;\n+      if (routeName === 'Home') {\n+        iconName = `ios-home`;\n+      } else if (routeName === 'Settings') {\n+        iconName = `ios-settings`;\n+      }\n\n+      return <Ionicons name={iconName} size={20} />;\n+    }\n+  })\n});\n\nexport default createAppContainer(AppNavigator);\n```", "```jsx\nimport React from 'react';\n+ import { Platform } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport Home from './Screens/Home';\nimport Detail from './Screens/Detail';\nimport Settings from './Screens/Settings';\n\nconst HomeStack = createStackNavigator({\n  ...\n```", "```jsx\n...\n\nconst AppNavigator = createBottomTabNavigator({\n  Home: HomeStack,\n  Settings: SettingsStack,\n}, {\n  initialRouteName: 'Home',\n  defaultNavigationOptions: ({ navigation }) => ({\n    tabBarIcon: () => {\n      const { routeName } = navigation.state;\n\n      let iconName;\n      if (routeName === 'Home') {\n-       iconName = `ios-home`;\n+       iconName = `${Platform.OS === 'ios' ? 'ios' : 'md'}-home`;\n      } else if (routeName === 'Settings') {\n-       iconName = `ios-settings`;\n+       iconName = `${Platform.OS === 'ios' ? 'ios' : 'md'}-settings`;\n      }\n\n      return <Ionicons name={iconName} size={20} />;\n    }\n  }),\n});\n\nexport default createAppContainer(AppNavigator);\n```", "```jsx\n...\nconst AppNavigator = createBottomTabNavigator({\n  Home: HomeStack,\n  Settings: SettingsStack,\n}, {\n  initialRouteName: 'Home',\n  defaultNavigationOptions: ({ navigation }) => ({\n    tabBarIcon: () => {\n      const { routeName } = navigation.state;\n\n      let iconName;\n      if (routeName === 'Home') {\n        iconName = `${Platform.OS === 'ios' ? 'ios' : 'md'}-home`;\n      } else if (routeName === 'Settings') {\n        iconName = `${Platform.OS === 'ios' ? 'ios' : 'md'}-settings`;\n      }\n\n      return <Ionicons name={iconName} size={20} />;\n    },\n+   tabBarOptions: {\n+      activeTintColor: 'blue',\n+      inactiveTintColor: '#556',\n+   },\n  })\n});\n\nexport default createAppContainer(AppNavigator);\n```", "```jsx\n...\n\nconst AppNavigator = createBottomTabNavigator({\n  Home: HomeStack,\n  Settings: SettingsStack,\n}, {\n  initialRouteName: 'Home',\n  defaultNavigationOptions: ({ navigation }) => ({\n-   tabBarIcon: () => {\n+   tabBarIcon: ({ tintColor }) => {\n      const { routeName } = navigation.state;\n\n      let iconName;\n      if (routeName === 'Home') {\n        iconName = `${Platform.OS === 'ios' ? 'ios' : 'md'}-home`;\n      } else if (routeName === 'Settings') {\n        iconName = `${Platform.OS === 'ios' ? 'ios' : 'md'}-settings`;\n      }\n\n-     return <Ionicons name={iconName} size={20} />;\n+     return <Ionicons name={iconName} size={20} color={tintColor} />;\n    },\n    tabBarOptions: {\n      activeTintColor: 'blue',\n      inactiveTintColor: '#556',\n    },\n  }),\n});\n\nexport default createAppContainer(AppNavigator);\n```", "```jsx\nimport React from 'react';\nimport styled from 'styled-components/native';\nimport { Image, Text, View, Dimensions } from 'react-native';\n\nconst ListingDetailWrapper = styled(View)`\n  display: flex;\n`;\n\nconst Details = styled(View)`\n  padding: 5%;\n`\n\nexport const Title = styled(Text)`\n  flex-wrap: wrap;\n  width: 99%;\n  font-size: 30px;\n`\n\nexport const Price = styled(Text)`\n  font-weight: bold;\n  font-size: 20px;\n  color: blue;\n`\n\nconst Thumbnail = styled(Image)`\n  width: 100%;\n  height: ${Dimensions.get('window').width};\n`\n\nconst ListingDetail = ({ item }) => (\n  <ListingDetailWrapper>\n    <Thumbnail\n      source={{uri: item.thumbnail}}\n    />\n    <Details>\n      <Title>{item.title}</Title>\n      <Price>{item.price}</Price>\n    </Details>\n  </ListingDetailWrapper>\n);\n\nexport default ListingDetail;\n```", "```jsx\nimport React from 'react';\nimport styled from 'styled-components/native';\nimport { Image, Text, View, Dimensions } from 'react-native';\n\nconst ListingDetailWrapper = styled(View)`\n  display: flex;\n`;\n\nconst Details = styled(View)`\n  position: absolute;\n  top: 0;\n  padding: 5%;\n  width: 100%;\n  background: rgba(0, 0, 255, 0.1);\n`\n\nexport const Title = styled(Text)`\n  flex-wrap: wrap;\n  width: 99%;\n  font-size: 30px;\n`\n\nexport const Price = styled(Text)`\n  font-weight: bold;\n  font-size: 20px;\n  color: blue;\n`\n\nconst Thumbnail = styled(Image)`\n  width: 100%;\n  height: ${Dimensions.get('window').height};\n`\n\nconst ListingDetail = ({ item }) => (\n  <ListingDetailWrapper>\n    <Thumbnail\n      source={{uri: item.thumbnail}}\n    />\n    <Details>\n      <Title>{item.title}</Title>\n      <Price>{item.price}</Price>\n    </Details>\n  </ListingDetailWrapper>\n);\n\nexport default ListingDetail;\n```", "```jsx\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n+ import ListingDetail from '../Components/Listing/ListingDetail';\n\nconst Detail = ({ navigation }) => {\n  const item = navigation.getParam('item', {});\n\n  return (\n-  <View style={styles.container}>\n+  <ListingDetail item={item} />\n-  </View>\n  )\n};\n\n- const styles = StyleSheet.create({\n-  container: {\n-    flex: 1,\n-    backgroundColor: '#fff',\n-    alignItems: 'center',\n-    justifyContent: 'center',\n-  },\n- });\n\nexport default Detail;\n```"]