["```jsx\nnode -v\n```", "```jsx\nnpm -v\n```", "```jsx\nnpm install -g react-360-cli\n```", "```jsx\nreact-360 init virtual-reality\n```", "```jsx\nvirtual-reality\n|-- __tests__\n    |-- index-test.js\n|-- node_modules\n|-- static_assets\n    |-- 360_world.jpg\n.babelrc\nclient.js\nindex.html\nindex.js\npackage.json\n```", "```jsx\nnpm start \n```", "```jsx\nfunction  init(bundle, parent, options  = {}) { ... **// Load the initial environment** r360.compositor.setBackground(r360.getAssetURL('360_world.jpg'**))** } window.React360  = {init};\n```", "```jsx\nfunction  init(bundle, parent, options  = {}) { ...  ** // Render your app content to the default cylinder surface** r360.renderToSurface(\n r360.createRoot('virtual_reality', { /* initial props */ }), r360.getDefaultSurface() **);** ... } window.React360  = {init};\n```", "```jsx\nimport  React  from  'react'; import { - AppRegistry,  StyleSheet,\n Text,\n View, } from  'react-360'; - export  default  class  virtual_reality  extends  React.Component {\n+ export default class Panel extends React.Component {  render() {\n return ( <View  style={styles.panel}> <View  style={styles.greetingBox}> <Text  style={styles.greeting}>Welcome to React 360</Text> </View> </View> );\n   }\n }; const  styles  =  StyleSheet.create({\n  ... }); - AppRegistry.registerComponent('virtual_reality', () =>  virtual_reality); \n```", "```jsx\nimport { AppRegistry, } from  'react-360'; import  Panel  from  './Components/Panel';  AppRegistry.registerComponent('virtual_reality', () =>  Panel);\n```", "```jsx\nimport  React  from  'react'; import { StyleSheet,\n Text,\n View, } from  'react-360'; export default class Panel extends React.Component {\n render() { return ( <View  style={styles.panel}> <View  style={styles.greetingBox}> -         <Text  style={styles.greeting}>Welcome to React 360</Text> +         <Text  style={styles.greeting}>Welcome to this world!</Text**>** </View> </View> );\n  }; }; ...\n```", "```jsx\n...\n\nconst  styles  =  StyleSheet.create({\n panel: { // Fill the entire surface width:  1000,\n height:  600,\n backgroundColor: 'rgba(255, 255, 255, 0.4)',  justifyContent: 'center',  alignItems: 'center',\n }, greetingBox: { -   padding:  20, -   backgroundColor: '#000000',  -   borderColor: '#639dda', **+   padding: 25,**\n**+   backgroundColor: 'black',**\n**+   borderColor: 'green',** borderWidth:  2,\n }, greeting: { fontSize:  30,\n } });\n```", "```jsx\nimport  React  from  'react'; import { StyleSheet,\n Text,\n View, } from  'react-360'; export default class Panel extends React.Component {\n**+ constructor() {**\n**+   super();**\n**+   this.state = {**\n**+     open: true**\n**+   }**\n**+ }**\n\n render() { return (        ...\n```", "```jsx\n...\n\nexport default class Panel extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      open: true,\n    };\n  }\n\n render() {\n**+   const { open } = this.state;** return ( -     <View  style={styles.panel}> +     <View  style={[styles.panel, ...(!open ? [{ display: 'none' }] : [])]}>  <View  style={styles.greetingBox}> <Text  style={styles.greeting}>Welcome to this world!</Text> </View> </View> );\n  }; };\n```", "```jsx\nimport  React  from  'react'; import { StyleSheet,\n Text,\n View,\n**+ VrButton,** } from  'react-360'; export default class Panel extends React.Component {\n\n  ...\n\n render() { return (      <View  style={[styles.panel, ...(!open ? [{ display: 'none' }] : [])]}>  <View  style={styles.greetingBox}> <Text  style={styles.greeting}>Welcome to this world!</Text> </View> +       <VrButton +         onClick={() =>  this.setState({ open:  false })} +       >\n+         <Text>Close X</Text> +       </VrButton>  </View> );\n  }; };\n```", "```jsx\n ... render() { return (      <View  style={[styles.panel, ...(!open ? [{ display: 'none' }] : [])]}>  <View  style={styles.greetingBox}> <Text  style={styles.greeting}>Welcome to this world!</Text> </View>\n        <VrButton          onClick={() =>  this.setState({ open:  false })}\n**+         style={styles.closeButton}**\n        >\n-         <Text>Close X</Text>\n+         <Text style={styles.close}>Close X</Text>         </VrButton>  </View> );\n  }; }; \nconst  styles  =  StyleSheet.create({ \n  ... \n\n+   closeButton: { +     position: 'absolute',  +     top:  20, +     right:  20, +   },\n+   close: { +     fontSize:  40, +     color: 'black', +   },\n});\n```", "```jsx\nimport  React  from 'react';  import { StyleSheet, View } from 'react-360';  export  default  class  Navigation  extends  React.Component { render() {\n return  <View  style={styles.navigation} />;\n } } const  styles  =  StyleSheet.create({\n navigation: { width:  800, height:  100, backgroundColor: 'blue', justifyContent: 'space-between', alignItems: 'center',\n    flexDirection: 'row',\n } });\n```", "```jsx\nimport { AppRegistry } from 'react-360';  import  Panel  from './Components/Panel';  + import  Navigation  from './Components/Navigation';  AppRegistry.registerComponent('Panel', () =>  Panel); + AppRegistry.registerComponent('Navigation', () =>  Navigation);\n```", "```jsx\nfunction  init(bundle, parent, options  = {}) {  const  r360  =  new  ReactInstance(bundle, parent, {\n    // Add custom options here\n    fullScreen:  true,\n    ...options\n  });\n\n+ const  navigationPanel  =  new  Surface(1000, 100, Surface.SurfaceShape.Flat); + navigationPanel.setAngle(0, -0.3); + r360.renderToSurface(r360.createRoot('Navigation'), navigationPanel**);**\n\n // Render your app content to the default cylinder surface r360.renderToSurface(\n r360.createRoot('virtual_reality', { /* initial props */ }), r360.getDefaultSurface(),\n ); ... } window.React360  = {init};\n```", "```jsx\nimport  React  from 'react';  - import { StyleSheet, View } from 'react-360'; **+ import {**\n**+   StyleSheet,**\n**+   Text,**\n**+   View,**\n**+   VrButton,**\n**+ } from 'react-360';** export  default  class  Navigation  extends  React.Component { render() { -   return  <View  style={styles.navigation} />;\n+   return (\n+     <View style={styles.navigation}>\n+       <VrButton style={[styles.button, styles.buttonLeft]}>\n+         <Text style={styles.buttonText}>{'< Prev'}</Text>\n+       </VrButton> +       <VrButton style={[styles.button, styles.buttonRight]}>\n+         <Text style={styles.buttonText}>{'Next >'}</Text>\n+       </VrButton> **+   );**\n } } ...\n```", "```jsx\n... const  styles  =  StyleSheet.create({\n navigation: { width:  800, height:  100, backgroundColor: 'blue',  justifyContent: 'space-between',  alignItems: 'center',\n    flexDirection: 'row', }, + button: { +   padding:  20, +   backgroundColor: 'white',  +   borderColor: 'black',  +   borderWidth:  2, + alignItems: 'center',  + width:  200, + }, + buttonLeft: { + marginLeft:  10, + }, + buttonRight: { +   marginRight:  10, + }, + buttonText: { +   fontSize:  40, +   fontWeight: 'bold',  +   color: '**blue',** **+ },** });\n```", "```jsx\nimport  React  from 'react';  import {\n**+ assets,**\n**+ Environment,**\n  StyleSheet,\n  Text,\n  View,\n  VrButton,\n} from 'react-360';\n\n**+ const backgrounds = [** +  '360_world.jpg', +  'beach.jpg', +  'landscape.jpg', +  'mountain.jpg', +  'winter.jpg',\n+ ];  export  default  class  Navigation  extends  React.Component {\n\n  ...\n```", "```jsx\n...\n\nexport  default  class  Navigation  extends  React.Component {\n**+ constructor() {**\n**+  super();**\n**+  this.state = {**\n**+    currentBackground: 0**\n**+  };**\n**+ }** \n+ changeBackground(change) { +  const { currentBackground } =  this.state; \n+  this.setState( +    {\n+      currentBackground: currentBackground  +  change +    },\n+    () => { +      Environment.setBackgroundImage( +        asset(backgrounds[this.state.currentBackground], { format: '2D' }) +      );\n+    }\n+  );\n+ }\n ...\n```", "```jsx\n...\n\nexport  default  class  Navigation  extends  React.Component {\n\n  ...\n\n**+ componentDidMount() {**\n**+   this.changeBackground(0);**\n**+ }** render() {\n    return (      <View  style={styles.navigation}> +  <VrButton  style={[styles.button, styles.buttonLeft]}> +       <VrButton +         onClick={() =>  this.changeBackground(-1)} +         style={[styles.button, styles.buttonLeft]} +       >\n          <Text  style={styles.buttonText}>{`< Prev`}</Text> </VrButton> +  <VrButton  style={[styles.button, styles.buttonRight]}> +       <VrButton +         onClick={() =>  this.changeBackground(1)} +         style={[styles.button, styles.buttonRight]} +       >\n          <Text  style={styles.buttonText}>{`Next >`}</Text> </VrButton> </View> );\n  }\n}\n\n... \n```", "```jsx\n...\n\nexport  default  class  Navigation  extends  React.Component {\n\n  ... \n  changeBackground(change) {\n   const { currentBackground } =  this.state; \n   this.setState(\n     {\n-      currentBackground: currentBackground  +  change\n+ currentBackground:\n+        currentBackground  +  change  >  backgrounds.length  -  1 +          ?  0 +          :  currentBackground  +  change  <  0 +          ?  backgrounds.length  -  1 +          :  currentBackground  +  change      },\n     () => {       Environment.setBackgroundImage(\n         asset(backgrounds[this.state.currentBackground], { format: '2D' })       );\n     }\n   );\n  }\n ...\n```", "```jsx\nimport  React  from 'react';  - import { StyleSheet, Text, View, VrButton } from 'react-360'; **+ import {**\n**+   Animated,**\n**+   StyleSheet,**\n**+   Text,**\n**+   View,**\n**+   VrButton,**\n**+ } from 'react-360';** export  default  class  Panel  extends  React.Component {\n```", "```jsx\n...\n\nexport  default  class  Panel  extends  React.Component { constructor() {\n super();\n this.state  = { open:  true, +     opacity:  new  Animated.Value(1),  }; }\n\n  render() {\n    ... \n```", "```jsx\nexport  default  class  Panel  extends  React.Component { constructor() {\n super();\n this.state  = { open:  true,\n opacity:  new  Animated.Value(1),\n }; } + componentDidUpdate() { +   const { open, opacity } =  this.state; +   Animated.timing(opacity, { +     toValue:  open  ?  1  :  0, +     duration:  800, +   }).start(); **+ }**\n\n render() {\n\n    ...\n```", "```jsx\nrender() { - const { open, opacity } =  this.state**;**\n**+ const { opacity } this.state;**\n return ( -   <View  style={[styles.panel, ...(!open ? [{ display: 'none' }] : [])]}> +   <Animated.View  style={[styles.panel, { opacity }]}**>**\n <View  style={styles.welcomeBox}>\n <Text  style={styles.welcome}>Welcome to this world!</Text>\n </View>\n <VrButton\n onClick={() =>  this.setState({ open:  false })}\n style={styles.closeButton}\n > <Text  style={styles.close}>Close X</Text> </VrButton> -   </View>\n+   </Animated.View**>**\n ); }\n```", "```jsx\nimport  React  from 'react';  import { + Animated,  asset,\n Environment,\n  StyleSheet,\n Text,\n View,\n VrButton, } from 'react-360'; ... export  default  class  Navigation  extends  React.Component { constructor() {\n super();     this.state  = { currentBackground:  0, +     opacity:  new  Animated.Value(0),  }; } changeBackground(change) {\n    ...\n```", "```jsx\n...\n\ncomponentDidMount() { + const { opacity } =  this.state;  this.changeBackground(0); + Animated.timing(opacity, { +  toValue:  1, +  duration:  800 + }).start**()** } render() {\n\n  ...\n```", "```jsx\nrender() {\n**+ const { opacity } = this.state;**\n  return (    <View  style={styles.navigation}>\n      <VrButton\n        onClick={() =>  this.changeBackground(-1)}\n        style={[styles.button, styles.buttonLeft]}\n      >\n        <Text  style={styles.buttonText}>{`< Prev`}</Text> </VrButton>\n <VrButton\n        onClick={() =>  this.changeBackground(1)}\n        style={[styles.button, styles.buttonRight]}\n      >\n-       <Text  style={styles.buttonText}>{`Next >`}</Text> +       <Animated.Text  style={[styles.buttonText, { opacity }]}>{`Next >`}</Animated.Text> </VrButton> </View> );\n}\n\n... \n```", "```jsx\n...\n\ncomponentDidMount() {\n  const { opacity } =  this.state;\n this.changeBackground(0);\n\n**+ Animated.loop(**\n**+  Animated.sequence([**\n**+    Animated.delay(400),**\n Animated.timing(opacity, {\n toValue:  1,\n duration:  800 -    }).start**()**\n**+    })**\n**+  ]),**\n**+  {**\n**+    iterations: 10**\n**+  }**\n**+ ).start();** } render() {\n\n  ...\n```", "```jsx\nimport  React  from 'react';  import { asset } from 'react-360';  import  Entity  from 'Entity';  export  default  class  Helicopter  extends  React.Component { render() { return ( <Entity source={{ obj:  asset('helicopter.obj'), }} style={{ transform: [\n            { rotate: 90 },\n            { scaleX:  0.02 }, \n            { scaleY:  0.02 }, \n            { scaleZ:  0.02 },\n          ] }} /> ); } }\n```", "```jsx\nimport { AppRegistry } from 'react-360';\nimport Panel from './Components/Panel';\nimport Navigation from './Components/Navigation';\n+ import Helicopter from './Components/Helicopter';\n\nAppRegistry.registerComponent('Panel', () => Panel);\nAppRegistry.registerComponent('Navigation', () => Navigation);\n+ AppRegistry.registerComponent('Helicopter', () => Helicopter);\n```", "```jsx\n- import { ReactInstance, Surface } from 'react-360-web'; + import { ReactInstance, Surface, Location } from 'react-360-web';  function  init(bundle, parent, options  = {}) {\n\n  ... + const  location  =  new  Location([-100, 10, -2]);\n+ r360.renderToLocation(r360.createRoot('Helicopter'), location**);**\n\n // Render your app content to the default cylinder surface r360.renderToSurface(\n\n    ... \n```", "```jsx\nimport  React  from 'react';  - import {  asset } from 'react-360';  + import { Animated, asset } from 'react-360'; import  Entity  from 'Entity';  + const  AnimatedEntity  =  Animated.createAnimatedComponent(Entity**);** export  default  class  Helicopter  extends  React.Component {\n\n  ...\n```", "```jsx\n...\n\nexport  default  class  Helicopter  extends  React.Component { + constructor() { +   super(); +   this.state  = { +     scale:  new  Animated.Value(0.02), +     rotateY:  new  Animated.Value(90) +   }; **+ }**\n\n  render() {\n\n    ...\n```", "```jsx\n... + componentDidMount() { +   const { scale, rotateY } =  this.state;\n+ +   Animated.sequence([ +     Animated.delay(1000), +     Animated.timing(rotateY, { +       toValue:  0, +       duration:  8000 +     }), +     Animated.delay(800), +     Animated.timing(scale, { +       toValue:  0, +       duration:  8000 +     }) +   ]).start(); **+ }** render() {\n\n  ...\n```", "```jsx\n  render() { +   const { scale, rotateY } =  this.state;  return ( -     <Entity\n+     <**AnimatedEntity** source={{ obj:  asset('helicopter.obj') }} style={{ transform: [\n**-           { rotateY: 90 },**\n**-           { scaleX: 0.02 },**\n**-           { scaleY: 0.02 },**\n**-           { scaleZ: 0.02 },**\n**+** { rotateY }, +           { scaleX:  scale }, +           { scaleY:  scale }, +           { scaleZ:  scale **},** ] }} /> );\n } }\n```"]