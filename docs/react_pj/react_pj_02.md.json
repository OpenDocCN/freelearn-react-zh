["```jsx\nnpm install -g create-react-app\n```", "```jsx\nnpm init react-app github-portfolio\n```", "```jsx\nnpx create-react-app github-portfolio\n```", "```jsx\ngithub-portfolio\n|-- node_modules\n|-- public\n    |-- favicon.ico\n    |-- index.html\n    |-- manifest.json\n|-- src\n    |-- App.css\n    |-- App.js\n    |-- App.test.js\n    |-- index.css\n    |-- index.js\n    |-- logo.svg\n    |-- serviceWorker.js\n.gitignore\npackage.json\n```", "```jsx\nnpm start\n```", "```jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n- //serviceWorker.register();\n+ serviceWorker.register();\n```", "```jsx\n{\n  \"short_name\": \"React App\",\n  \"name\": \"Create React App Sample\",\n\n...\n```", "```jsx\n  \"icons\": [\n    {\n      \"src\": \"favicon.ico\",\n      \"sizes\": \"64x64 32x32 24x24 16x16\",\n      \"type\": \"image/x-icon\"\n    }\n  ],\n```", "```jsx\n  ...\n  \"theme_color\": \"#000000\",\n  \"background_color\": \"#ffffff\"\n}\n```", "```jsx\nnpm run build \n```", "```jsx\nnpm install -g serve\nserve -s build\n```", "```jsx\nserve -s build\n```", "```jsx\ngithub-portfolio\n|-- node_modules\n|-- public\n    |-- favicon.ico\n    |-- index.html\n    |-- manifest.json\n|-- src\n |-- components\n |-- containers\n |-- App.css\n |-- App.js\n    |-- index.css\n    |-- index.js\n    |-- serviceWorker.js\n.gitignore\npackage.json\n```", "```jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n- import App from './App';\n+ import App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n...\n```", "```jsx\nimport React, { Component } from 'react';\n- import logo from './logo.svg';\n+ import logo from '../logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\n...\n```", "```jsx\n.App-logo {\n  height: 40vmin;\n  pointer-events: none;\n}\n\n.App-header {\n  background-color: #282c34;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n```", "```jsx\nimport React from 'react';\nimport './Header.css';\n\nconst Header = () => (\n <header className='App-header'>\n     <img src={logo} className='App-logo' alt='logo' />\n     <p>\n       Edit <code>src/App.js</code> and save to reload.\n     </p>\n     <a\n       className='App-link'\n       href='https://reactjs.org'\n       target='_blank'\n       rel='noopener noreferrer'\n     >\n       Learn React\n     </a>\n </header>\n);\n\nexport default Header;\n```", "```jsx\nimport React, { Component } from 'react';\n+ import Header from '../components/App/Header';\nimport logo from '../logo.svg';\nimport './App.css';\n\nclass App extends Component {\n render() {\n   return (\n     <div className='App'>\n-      <header  className='App-header'> -        <img  src={logo}  className='App-logo'  alt='logo'  /> -        <p>Edit <code>src/App.js</code> and save to reload.</p> -        <a -          className='App-link' -          href='https://reactjs.org' -          target='_blank' -          rel='noopener noreferrer' -        >\n-          Learn React\n-        </a> -      </header>\n+      <Header />\n     </div>\n   );\n }\n}\n\nexport default App;\n```", "```jsx\n...\nclass App extends Component {\n render() {\n   return (\n     <div className='App'>\n-      <Header />\n+      <Header logo={logo} />\n     </div>\n   );\n }\n}\n\nexport default App;\n```", "```jsx\nimport React from 'react';\n\n- const Header = () => (\n+ const Header = ({ logo }) => (\n <header className='App-header'>\n   <img src={logo} className='App-logo' alt='logo' />\n\n   ...\n```", "```jsx\n.App-link {\n    color: #61dafb;\n}\n```", "```jsx\nimport React from 'react';\nimport './Link.css';\n\nconst Link = ({ url, title }) => (\n  <a\n    className='App-link'\n    href={url}\n    target='_blank'\n    rel='noopener noreferrer'\n  >\n    {title}\n  </a>\n);\n\nexport default Link;\n```", "```jsx\nimport React from 'react';\n+ import Link from '../Link/Link';\n\nconst Header = ({ logo }) => (\n <header className='App-header'>\n   <img src={logo} className='App-logo' alt='logo' />\n   <p>Edit <code>src/App.js</code> and save to reload.</p>\n-  <a -    className='App-link' -    href='https://reactjs.org' -    target='_blank' -    rel='noopener noreferrer' -  > -    Learn React\n-  </a>\n+  <Link url='https://reactjs.org' title='Learn React' />\n </header>\n);\n\nexport default Header;\n```", "```jsx\ngithub-portfolio\n|-- node_modules\n|-- public\n    |-- favicon.ico\n    |-- index.html\n    |-- manifest.json\n|-- src\n    |-- components\n        |-- Header\n            |-- Header.js\n            |-- Header.css\n        |-- Link\n            |-- Link.js\n            |-- Link.css\n    |-- containers\n        |-- App.css\n        |-- App.js\n    |-- index.css\n    |-- index.js\n    |-- serviceWorker.js\n.gitignore\npackage.json\n```", "```jsx\ncurl 'https://api.github.com/users/username'\n```", "```jsx\n{\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false,\n  \"name\": \"monalisa octocat\",\n  \"company\": \"GitHub\",\n  \"blog\": \"https://github.com/blog\",\n  \"location\": \"San Francisco\",\n  \"email\": \"octocat@github.com\",\n  \"hireable\": false,\n  \"bio\": \"There once was...\",\n  \"public_repos\": 2,\n  \"public_gists\": 1,\n  \"followers\": 20,\n  \"following\": 0,\n  \"created_at\": \"2008-01-14T04:33:35Z\",\n  \"updated_at\": \"2008-01-14T04:33:35Z\"\n}\n```", "```jsx\nimport React, { Component } from 'react';\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {},\n      loading: true,\n    }\n  }\n\n  async componentDidMount() {\n    const profile = await fetch('https://api.github.com/users/octocat');\n    const profileJSON = await profile.json();\n\n    if (profileJSON) {\n      this.setState({\n        data: profileJSON,\n        loading: false,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div></div>\n    );\n  }\n}\n\nexport default Profile;\n```", "```jsx\nimport React, { Component } from 'react';\n+ import Profile from './Profile';\nimport Header from '../components/Header/Header';\nimport logo from '../logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Header logo={logo} />\n+       <Profile />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```", "```jsx\n.App-logo {\n- height: 40vmin;\n+ height: 64px;\n  pointer-events: none;\n}\n\n.App-header {\n  background-color: #282c34;\n- min-height: 100vh;\n+ height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n...\n```", "```jsx\n...\n\nrender() {\n+   const { data, loading } = this.state;\n\n+   if (loading) {\n+       return <div>Loading...</div>;\n+   }\n\n    return (\n      <div>\n+       <ul>\n+         <li>avatar_url: {data.avatar_url}</li>\n+         <li>html_url: {data.html_url}</li>\n+         <li>repos_url: {data.repos_url}</li>\n+         <li>name: {data.name}</li>\n+         <li>company: {data.company}</li>\n+         <li>location: {data.location}</li>\n+         <li>email: {data.email}</li>\n+         <li>bio: {data.bio}</li>\n+       </ul>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n```", "```jsx\nimport React from 'react';\n- import logo from '../logo.svg';\n+ import logo from '../../GitHub-Mark-Light-64px.png';\n- import Link from '../components/Link';\nimport './Header.css';\n\n- const Header = ({ logo }) => (\n+ const Header = () => (\n  <header className='App-header'>\n    <img src={logo} className='App-logo' alt='logo' />\n-   <p>\n+   <h1>\n-     Edit <code>src/App.js</code> and save to reload.\n+     My Github Portfolio\n-   </p>\n+   </h1> -   <Link url='https://reactjs.org' title='Learn React' />\n  </header>\n);\n\nexport default Header;\n```", "```jsx\nimport React, { Component } from 'react';\n+ import Link from '../components/Link/Link';\n+ import './Profile.css';\n\nclass Profile extends Component {\n\n  ...\n\n      return (\n-       <div>\n+       <div className='Profile-container'>\n+         <img className='Profile-avatar' src={data.avatar_url} alt='avatar' />\n-         <ul>\n-           ...\n-         </ul>\n+         <ul>\n+           <li><strong>html_url:</strong> <Link url={data.html_url} title='Github URL' /></li>\n+           <li><strong>repos_url:</strong> {data.repos_url}</li>\n+           <li><strong>name:</strong> {data.name}</li>\n+           <li><strong>company:</strong> {data.company}</li>\n+           <li><strong>location:</strong> {data.location}</li>\n+           <li><strong>email:</strong> {data.email}</li>\n+           <li><strong>bio:</strong> {data.bio}</li>\n+         </ul>\n+      </div>\n    );\n  }\n}\n\nexport default Profile;\n```", "```jsx\n.Profile-container {\n  width: 50%;\n  margin: 10px auto;\n}\n\n.Profile-avatar {\n  width: 150px;\n}\n\n.Profile-container > ul {\n list-style: none;\n padding: 0;\n text-align: left;\n}\n\n.Profile-container > ul > li {\n display: flex;\n justify-content: space-between;\n}\n```", "```jsx\nimport React from 'react';\n\nconst List = () => (\n  <ul></ul>\n);\n\nexport default List;\n```", "```jsx\nimport React, { Component } from 'react';\nimport Link from '../components/Link/Link';\n+ import List from '../components/List/List';\n\nclass Profile extends Component {\n\n...\n\nrender() {\n  const { data, loading } = this.state;\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n+ const items = [\n+   { label: 'html_url', value: <Link url={data.html_url} title='Github URL' /> },\n+   { label: 'repos_url', value: data.repos_url },\n+   { label: 'name', value: data.name},\n+   { label: 'company', value: data.company },\n+   { label: 'location', value: data.location },\n+   { label: 'email', value: data.email },\n+   { label: 'bio', value: data.bio }\n+ ]\n\n  return (\n    <div className='Profile-container'>\n      <img className='Profile-avatar' src={data.avatar_url} alt='avatar' />\n-     <ul>\n-       <li><strong>html_url:</strong> <Link url={data.html_url} title='Github URL' /></li>\n-       <li><strong>repos_url:</strong> {data.repos_url}</li>\n-       <li><strong>name:</strong> {data.name}</li>\n-       <li><strong>company:</strong> {data.company}</li>\n-       <li><strong>location:</strong> {data.location}</li>\n-       <li><strong>email:</strong> {data.email}</li>\n-       <li><strong>bio:</strong> {data.bio}</li>\n-     </ul>\n+     <List items={items} />\n    </div>\n   );\n  }\n}\n\nexport default Profile;\n```", "```jsx\nimport React from 'react';\n\n- const List = () => (\n+ const List = ({ items }) => (\n  <ul>\n+   {items.map(item =>\n+     <li key={item.label}>\n+       <strong>{item.label}</strong>{item.value}\n+     </li>\n+   )}\n  </ul>\n);\n\nexport default List;\n```", "```jsx\nnpm install styled-components\n```", "```jsx\nimport React from 'react';\n+ import styled from 'styled-components'; import './Link.css';\n\n+ const InnerLink = styled.a`\n+  color: #61dafb;\n+ `;\n\nconst Link = ({ url, title }) => (\n  <a className='App-link'\n    href={url}\n    target='_blank'\n    rel='noopener noreferrer'\n  >\n    {title}\n  </a>\n);\n\nexport default Link;\n```", "```jsx\nimport React from 'react';\nimport styled from 'styled-components';\n- import './Link.css';\n\nconst InnerLink = styled.a`\n color: #61dafb;\n`;\n\nconst Link = ({ url, title }) => (\n- <a className='App-link'\n+ <InnerLink\n    href={url}\n    target='_blank'\n    rel='noopener noreferrer'\n  >\n    {title}\n- </a>\n+ </InnerLink>\n);\n\nexport default Link;\n```", "```jsx\nimport React from 'react';\n+ import styled from 'styled-components';\nimport logo from '../../GitHub-Mark-Light-64px.png';\n- import './Header.css'\n\n+ const HeaderWrapper = styled.div`\n+  background-color: #282c34;\n+  height: 100%;\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  justify-content: center;\n+  font-size: calc(10px + 2vmin);\n+  color: white;\n+ `;\n\n+ const Logo = styled.img`\n+  height: 64px;\n+  pointer-events: none;\n+ `;\n\nconst Header = ({ logo }) => (\n- <header className='App-header'>\n+ <HeaderWrapper>\n    <Logo src={logo} alt='logo' />\n    <h1>My Github Portfolio</h1>\n- </header>\n+ </HeaderWrapper>\n);\n\nexport default Header;\n```", "```jsx\nimport React, { Component } from 'react';\n+ import styled from 'styled-components';\nimport Profile from './Profile';\nimport Header from '../components/App/Header';\n- import './App.css'; \n+ const AppWrapper = styled.div`\n+  text-align: center;\n+ `;\n\nclass App extends Component {\n render() {\n   return (\n-    <div className=\"App\">\n+    <AppWrapper>\n       <Header />\n       <Profile />\n-    </div>\n+    </AppWrapper>\n   );\n  }\n}\n\nexport default App;\n```", "```jsx\nimport React from 'react';\n+ import styled from 'styled-components';\n\n+ const ListWrapper = styled.ul`\n+  list-style: none;\n+  text-align: left;\n+  padding: 0;\n+ `;\n\n+ const ListItem = styled.li`\n+  display: flex;\n+  justify-content: space-between;\n+ `;\n\n+ const Label = styled.span`\n+  font-weight: strong;\n+ `;\n\nconst List = ({ items }) => (\n- <ul>\n+ <ListWrapper>\n    {items.map(item =>\n-     <li key={item.label}>\n+     <ListItem key={item.label}>\n-       <strong>{item.label}</strong>{item.value}\n+       <Label>{item.label}</Label>{item.value}\n-     </li>\n+     </ListItem>\n    )}\n-  </ul>\n+  </ListWrapper>\n);\n\nexport default List;\n```", "```jsx\nimport React, { Component } from 'react';\n+ import styled from 'styled-components';\nimport Link from '../components/Link/Link';\nimport List from '../components/List/List';\n- import './Profile.css';\n\n+ const ProfileWrapper = styled.div`\n+  width: 50%;\n+  margin: 10px auto;\n+ `;\n\n+ const Avatar = styled.img`\n+  width: 150px;\n+ `;\n\nclass Profile extends Component {\n\n...\n\n  return (\n-   <div className='Profile-container'>\n+   <ProfileWrapper>\n-     <img className='Profile-avatar' src={data.avatar_url} alt='avatar' />\n+     <Avatar src={data.avatar_url} alt='avatar' />\n <List items={items} />\n-   </div>\n+   </ProfileWrapper>\n  );\n }\n}\n\nexport default Profile;\n```", "```jsx\nimport React, { Component } from 'react';\n- import styled from 'styled-components';\n+ import styled, { createGlobalStyle } from 'styled-components';\nimport Profile from './Profile';\nimport Header from '../components/App/Header';\n\n+ const GlobalStyle = createGlobalStyle`\n+  body {\n+    margin: 0;\n+    padding: 0;\n+    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n+    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n+    sans-serif;\n+    -webkit-font-smoothing: antialiased;\n+    -moz-osx-font-smoothing: grayscale;\n+  }\n+ `;\n\n...\n\nclass App extends Component {\n render() {\n   return (\n+   <> \n+    <GlobalStyle />\n     <AppWrapper>\n       <Header />\n       <Profile />\n     </AppWrapper>\n+   </>\n  );\n }\n}\n\nexport default App;\n```", "```jsx\n...\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {},\n+     repositories: [],\n      loading: true,\n    }\n  }\n\n  async componentDidMount() {\n    const profile = await fetch('https://api.github.com/users/octocat');\n    const profileJSON = await profile.json();\n\n    if (profileJSON) {\n+     const repositories = await fetch(profileJSON.repos_url);\n+     const repositoriesJSON = await repositories.json();\n\n      this.setState({\n        data: profileJSON,\n+       repositories: repositoriesJSON,\n        loading: false,\n      })\n    }\n  }\n\n  render() {\n-   const { data, loading } = this.state; \n+   const { data, loading, repositories } = this.state;\n\n    if (loading) {\n      return <div>Loading...</div>\n    }\n\n    const items = [\n      ...\n    ];\n\n +  const projects = repositories.map(repository => ({\n +    label: repository.name,\n +    value: <Link url={repository.html_url} title='Github URL' />\n +  }));\n\n...\n```", "```jsx\n...\n\n  render() {\n\n  ...\n\n    const projects = repositories.map(repository => ({\n      label: repository.name,\n      value: <Link url={repository.html_url} title='Github URL' />\n    }));\n\n    return (\n      <ProfileWrapper>\n         <Avatar src={data.avatar_url} alt='avatar' />\n-       <List items={items} />\n+       <List title='Profile' items={items} />\n+       <List title='Projects' items={projects} />\n      </ProfileWrapper>\n    );\n  }\n}\n\nexport default Profile;\n```", "```jsx\nimport React from 'react';\nimport styled from 'styled-components';\n\n+ const Title = styled.h2`\n+  padding: 10px 0;\n+  border-bottom: 1px solid lightGrey;\n+ `;\n\n...\n\n- const List = ({ items }) => (\n+ const List = ({ items, title }) => (\n+  <>\n+    <Title>{title}</Title>\n     <ListWrapper>\n       {items.map(item =>\n         <ListItem key={item.label}>\n           <Label>{item.label}</Label>{item.value}\n         </ListItem>\n       )}\n     </ListWrapper>\n+  </>\n);\n\nexport default List;\n```", "```jsx\nnpm run build\n```", "```jsx\nserve -s build\n```", "```jsx\n...\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {},\n      repositories: [],\n      loading: false,\n+     error: '',\n    }\n  }\n\n  async componentDidMount() {\n     ...\n```", "```jsx\n...\n\n  async componentDidMount() {\n+   try {\n      const profile = await fetch('https://api.github.com/users/octocat');\n      const profileJSON = await profile.json();\n\n      if (profileJSON) {\n        const repositories = await fetch(profileJSON.repos_url);\n        const repositoriesJSON = await repositories.json();\n\n       this.setState({\n         data: profileJSON,\n         repositories: repositoriesJSON,\n         loading: false,\n       });\n     }\n   }\n+  catch(error) {\n+    this.setState({\n+      loading: false,\n+      error: error.message,\n+    });\n+  }\n+ } ...\n```", "```jsx\n...\n\nrender() {\n-  const { data, loading, repositories } = this.state;\n+  const { data, loading, repositories, error } = this.state;\n\n-  if (loading) {\n-    return <div>Loading...</div>;\n+  if (loading || error) {\n+    return <div>{loading ? 'Loading...' : error}</div>;\n  }\n\n...\n\nexport default Profile;\n```", "```jsx\nnpm run build\nserve -s build\n```"]