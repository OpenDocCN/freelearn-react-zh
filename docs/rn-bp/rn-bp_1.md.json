["```jsx\nnpm install -g react-native-cli\n```", "```jsx\nreact-native init --version=\"0.49.3\" GroceriesList\n```", "```jsx\nreact-native run-ios\n```", "```jsx\nreact-native run-android\n```", "```jsx\n/*** index.js ***/\n\nimport { AppRegistry } from 'react-native';\nimport App from './src/main';\nAppRegistry.registerComponent('GroceriesList', () => App);\n```", "```jsx\nnpm install\n```", "```jsx\nnpm install **native-base --save**\n**npm install react-native-prompt-android --save**\n**npm install react-navigation --save** \n```", "```jsx\n/*** src/main.js ***/\n\nimport React from 'react';\nimport { StackNavigator } from 'react-navigation';\nimport ShoppingList from './screens/ShoppingList.js';\nimport AddProduct from './screens/AddProduct.js';\n\nconst Navigator = StackNavigator({\n  ShoppingList: { screen: ShoppingList },\n  AddProduct: { screen: AddProduct }\n});\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return <Navigator />;\n  }\n}\n```", "```jsx\nreact-native link\n```", "```jsx\n/*** ShoppingList.js ***/\n\nimport React from 'react';\nimport { Alert } from 'react-native';\nimport {\n  Body,\n  Container,\n  Content,\n  Right,\n  Text,\n  CheckBox,\n  List,\n  ListItem,\n  Fab,\n  Icon\n} from 'native-base';\n\nexport default class ShoppingList extends React.Component {\n  static navigationOptions = {\n    title: 'My Groceries List'\n  };\n  /*** Render ***/\n  render() {\n    return (\n      <Container>\n        <Content>\n          <List>\n            <ListItem>\n              <Body>\n                <Text>'Name of the product'</Text>\n              </Body>\n              <Right>\n                <CheckBox\n                  checked={false}\n                />\n              </Right>\n            </ListItem>\n          </List>\n        </Content>\n        <Fab\n          style={{ backgroundColor: '#5067FF' }}\n          position=\"bottomRight\"\n        >\n          <Icon name=\"add\" />\n        </Fab>\n        <Fab\n          style={{ backgroundColor: 'red' }}\n          position=\"bottomLeft\"\n        >\n          <Icon ios=\"ios-remove\" android=\"md-remove\" />\n        </Fab>\n      </Container>\n    );\n  }\n}\n\n```", "```jsx\n/*** ShoppingList.js ***/\n\n...\nconstructor(props) {\n  super(props);\n  this.state = {\n    products: [{ id: 1, name: 'bread' }, { id: 2, name: 'eggs' }]\n  };\n}\n...\n```", "```jsx\n/*** ShoppingList.js ***/\n\n...\n<List>\n {\n   this.state.products.map(p => {\n     return (\n       <ListItem\n         key={p.id}\n       >\n         <Body>\n           <Text style={{ color: p.gotten ? '#bbb' : '#000' }}>\n             {p.name}\n           </Text>\n         </Body>\n         <Right>\n           <CheckBox\n             checked={p.gotten}\n            />\n         </Right>\n       </ListItem>\n     );\n   }\n  )}\n</List>\n...\n```", "```jsx\n/*** ShoppingList.js ***/\n\n...\nrender() {\n return (\n   <Container>\n     <Content>\n       <List>\n        {this.state.products.map(p => {\n          return (\n            <ListItem\n              key={p.id}\n              onPress={this._handleProductPress.bind(this, p)}\n            >\n              <Body>\n                <Text style={{ color: p.gotten ? '#bbb' : '#000' }}>\n                  {p.name}\n                </Text>\n              </Body>\n              <Right>\n                <CheckBox\n                  checked={p.gotten}\n                  onPress={this._handleProductPress.bind(this, p)}\n                />\n              </Right>\n            </ListItem>\n          );\n       })}\n       </List>\n     </Content>\n     <Fab\n       style={{ backgroundColor: '#5067FF' }}\n       position=\"bottomRight\"\n       onPress={this._handleAddProductPress.bind(this)}\n     >\n       <Icon name=\"add\" />\n     </Fab>\n     <Fab\n       style={{ backgroundColor: 'red' }}\n       position=\"bottomLeft\"\n       onPress={this._handleClearPress.bind(this)}\n     >\n       <Icon ios=\"ios-remove\" android=\"md-remove\" />\n     </Fab>\n   </Container>\n   );\n }\n...\n```", "```jsx\n/*** ShoppingList.js ***/\n\n...\n_handleProductPress(product) {\n this.state.products.forEach(p => {\n   if (product.id === p.id) {\n     p.gotten = !p.gotten;\n   }\n   return p;\n });\n\n this.setState({ products: this.state.products });\n}\n...\n```", "```jsx\n/*** ShoppingList.js ***/\n\n...\n_handleAddProductPress() {\n  this.props.navigation.navigate('AddProduct', {\n    addProduct: product => {\n      this.setState({\n        products: this.state.products.concat(product)\n      });\n    },\n    deleteProduct: product => {\n      this.setState({\n        products: this.state.products.filter(p => p.id !== product.id)\n      });\n    },\n    productsInList: this.state.products\n  });\n}\n...\n```", "```jsx\n/*** ShoppingList.js ***/\n\n...\n_handleClearPress() {\n  Alert.alert('Clear all items?', null, [\n    { text: 'Cancel' },\n    { text: 'Ok', onPress: () => this.setState({ products: [] }) }\n  ]);\n}\n...\n```", "```jsx\n/*** ShoppingList.js ***/\n\nimport React from 'react';\nimport { Alert } from 'react-native';\nimport { ... } from 'native-base';\n\nexport default class ShoppingList extends React.Component {\n static navigationOptions = {\n   title: 'My Groceries List'\n };\n\n constructor(props) {\n   ...\n }\n\n /*** User Actions Handlers ***/\n _handleProductPress(product) {\n   ...\n }\n\n _handleAddProductPress() {\n   ...\n }\n\n _handleClearPress() {\n   ...\n }\n\n /*** Render ***/\n render() {\n   ...\n }\n}\n```", "```jsx\nimport { AsyncStorage } from 'react-native';\n```", "```jsx\n/*** AddProduct ***/\n\n...\nasync addNewProduct(name) {\n  const newProductsList = this.state.allProducts.concat({\n    name: name,\n    id: Math.floor(Math.random() * 100000)\n  });\n\n  await AsyncStorage.setItem(\n    '@allProducts',\n    JSON.stringify(newProductsList)\n  );\n\n  this.setState({\n    allProducts: newProductsList\n  });\n }\n...\n```", "```jsx\n/*** AddProduct.js ***/\n\n...\nconstructor(props) {\n  super(props);\n  this.state = {\n    allProducts: [\n      { id: 1, name: 'bread' },\n      { id: 2, name: 'eggs' },\n      { id: 3, name: 'paper towels' },\n      { id: 4, name: 'milk' }\n    ],\n    productsInList: []\n  };\n}\n...\n```", "```jsx\n/*** AddProduct.js ***/\n\n...\nasync componentWillMount() {\n  const savedProducts = await AsyncStorage.getItem('@allProducts');\n  if(savedProducts) {\n    this.setState({\n      allProducts: JSON.parse(savedProducts)\n    }); \n  }\n\n  this.setState({\n    productsInList: this.props.navigation.state.params.productsInList\n  });\n}\n...\n```", "```jsx\n/*** AddProduct ***/\n\n...\nrender(){\n  <List>\n    {this.state.allProducts.map(product => {\n       const productIsInList = this.state.productsInList.find(\n         p => p.id === product.id\n       );\n       return (\n         <ListItem key={product.id}>\n           <Body>\n             <Text\n               style={{\n                color: productIsInList ? '#bbb' : '#000'\n               }}\n             >\n               {product.name}\n             </Text>\n             {\n               productIsInList &&\n               <Text note>\n                 {'Already in shopping list'}\n               </Text>\n             }\n          </Body>\n        </ListItem>\n      );\n    }\n )}\n </List>\n}\n...\n```", "```jsx\n/*** AddProduct.js ***/\n\n...\nrender() {\n  return (\n    <Container>\n      <Content>\n        <List>\n          {this.state.allProducts.map(product => {\n            const productIsInList = this.state.productsInList.\n            find(p => p.id === product.id);\n            return (\n              <ListItem\n                key={product.id}\n                onPress={this._handleProductPress.bind\n                (this, product)}\n              >\n                <Body>\n                  <Text\n                    style={{ color: productIsInList? '#bbb' : '#000' }}\n                  >\n                    {product.name}\n                  </Text>\n                 {\n                   productIsInList &&\n                   <Text note>\n                     {'Already in shopping list'}\n                   </Text>\n                 }\n                 </Body>\n                 <Right>\n                   <Icon\n                     ios=\"ios-remove-circle\"\n                     android=\"md-remove-circle\"\n                     style={{ color: 'red' }}\n                     onPress={this._handleRemovePress.bind(this, \n                     product )}\n                   />\n                 </Right>\n               </ListItem>\n             );\n           })}\n         </List>\n       </Content>\n     <Fab\n       style={{ backgroundColor: '#5067FF' }}\n       position=\"bottomRight\"\n       onPress={this._handleAddProductPress.bind(this)}\n     >\n       <Icon name=\"add\" />\n     </Fab>\n   </Container>\n   );\n }\n...\n```", "```jsx\n/*** AddProduct.js ***/\n\n...\n_handleAddProductPress() {\n  prompt(\n    'Enter product name',\n    '',\n    [\n      { text: 'Cancel', style: 'cancel' },\n      { text: 'OK', onPress: this.addNewProduct.bind(this) }\n    ],\n    {\n      type: 'plain-text'\n    }\n  );\n}\n...\n```", "```jsx\nimport prompt from 'react-native-prompt-android';\n```", "```jsx\n/*** AddProduct.js ***/\n\n...\n_handleProductPress(product) {\n  const productIndex = this.state.productsInList.findIndex(\n    p => p.id === product.id\n  );\n  if (productIndex > -1) {\n    this.setState({\n      productsInList: this.state.productsInList.filter(\n        p => p.id !== product.id\n      )\n    });\n    this.props.navigation.state.params.deleteProduct(product);\n  } else {\n    this.setState({\n      productsInList: this.state.productsInList.concat(product)\n    });\n    this.props.navigation.state.params.addProduct(product);\n }\n}\n...\n```", "```jsx\n/*** AddProduct.js ***/\n\n...\nasync _handleRemovePress(product) {\n  this.setState({\n    allProducts: this.state.allProducts.filter(p => p.id !== product.id)\n  });\n  await AsyncStorage.setItem(\n    '@allProducts',\n    JSON.stringify(\n      this.state.allProducts.filter(p => p.id !== product.id)\n    )\n  );\n}\n...\n```", "```jsx\nimport React from 'react';\nimport prompt from 'react-native-prompt-android';\nimport { AsyncStorage } from 'react-native';\nimport {\n ...\n} from 'native-base';\n\nexport default class AddProduct extends React.Component {\n  static navigationOptions = {\n    title: 'Add a product'\n  };\n\n  constructor(props) {\n   ...\n  }\n\n  async componentWillMount() {\n    ...\n  }\n\n  async addNewProduct(name) {\n    ...\n  }\n\n  /*** User Actions Handlers ***/\n  _handleProductPress(product) {\n   ...\n  }\n\n  _handleAddProductPress() {\n    ...\n  }\n\n  async _handleRemovePress(product) {\n    ...\n  }\n\n  /*** Render ***/\n  render() {\n    ....\n  }\n}\n```"]