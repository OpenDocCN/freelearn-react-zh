["```jsx\nreact-native init --version=\"0.49.3\" carBooking\n```", "```jsx\n{\n    \"name\": \"carBooking\",\n    \"version\": \"0.0.1\",\n    \"private\": true,\n    \"scripts\": {\n        \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n        \"test\": \"jest\"\n    },\n    \"dependencies\": {\n        \"react\": \"16.0.0-beta.5\",\n        \"react-native\": \"0.49.3\",\n        \"react-native-geocoder\": \"^0.4.8\",\n \"react-native-maps\": \"^0.15.2\"\n    },\n    \"devDependencies\": {\n        \"babel-jest\": \"20.0.3\",\n        \"babel-preset-react-native\": \"1.9.2\",\n        \"jest\": \"20.0.4\",\n        \"react-test-renderer\": \"16.0.0-alpha.6\"\n    },\n    \"jest\": {\n        \"preset\": \"react-native\"\n    },\n    \"rnpm\": {\n \"assets\": [\"./fonts\"]\n }\n}\n```", "```jsx\nnpm install\n```", "```jsx\nreact-native run-ios\n```", "```jsx\nreact-native run-android\n```", "```jsx\n/*** index.js ***/\n\nimport { AppRegistry } from 'react-native';\nimport App from './src/main';\nAppRegistry.registerComponent('carBooking', () => App);\n```", "```jsx\n/*** src/main.js ** */\n\nimport React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport MapView from 'react-native-maps';\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialRegion = {\n      latitude: 37.78825,\n      longitude: -122.4324,\n      latitudeDelta: 0.00922,\n      longitudeDelta: 0.00421,\n    };\n  }\n\n  render() {\n    return (\n      <View style={{ flex: 1 }}>\n        <MapView\n          style={styles.fullScreenMap}\n          initialRegion={this.initialRegion}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  fullScreenMap: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n});\n\n```", "```jsx\n/** * src/main.js ** */\n\nimport React from 'react';\nimport { View, Animated, Image, StyleSheet } from 'react-native';\nimport MapView from 'react-native-maps';\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      carLocations: [\n {\n rotation: 78,\n latitude: 37.78725,\n longitude: -122.4318,\n },\n {\n rotation: -10,\n latitude: 37.79015,\n longitude: -122.4318,\n },\n {\n rotation: 262,\n latitude: 37.78525,\n longitude: -122.4348,\n },\n ],\n    };\n    this.initialRegion = {\n      latitude: 37.78825,\n      longitude: -122.4324,\n      latitudeDelta: 0.00922,\n      longitudeDelta: 0.00421,\n    };\n  }\n\n  render() {\n    return (\n      <View style={{ flex: 1 }}>\n        <MapView\n          style={styles.fullScreenMap}\n          initialRegion={this.initialRegion}\n        >\n          {this.state.carLocations.map((carLocation, i) => (\n <MapView.Marker key={i} coordinate={carLocation}>\n <Animated.Image\n style={{\n transform: [{ rotate: `${carLocation.rotation}deg` }],\n }}\n source={require('../img/car.png')}\n />\n </MapView.Marker>\n ))}\n        </MapView>\n      </View>\n    );\n  }\n}\n\n...\n```", "```jsx\n/** * src/main.js ** */\n\nimport GeoCoder from 'react-native-geocoder';\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n position: null,\n\n      ...\n\n    };\n\n    ...\n\n  }\n\n  _onRegionChange(region) {\n this.setState({ position: null });\n const self = this;\n if (this.timeoutId) clearTimeout(this.timeoutId);\n this.timeoutId = setTimeout(async () => {\n try {\n const res = await GeoCoder.geocodePosition({\n lat: region.latitude,\n lng: region.longitude,\n });\n self.setState({ position: res[0] });\n } catch (err) {\n console.log(err);\n }\n }, 2000);\n  }\n  componentDidMount() {\n this._onRegionChange.call(this, this.initialRegion);\n }\n\n  render() {\n    <View style={{ flex: 1 }}>\n      <MapView\n        style={styles.fullScreenMap}\n        initialRegion={this.initialRegion}\n        onRegionChange={this._onRegionChange.bind(this)}\n      >\n\n      ...\n\n      </MapView>\n    </View>;\n  }\n}\n\n...\n```", "```jsx\n/** * src/main.js ** */\n\n...\n\nimport LocationPin from './components/LocationPin';\nimport LocationSearch from './components/LocationSearch';\nimport ClassSelection from './components/ClassSelection';\nimport ConfirmationModal from './components/ConfirmationModal';\n\nexport default class Main extends React.Component {\n  ...\n\n  _onBookingRequest() {\n this.setState({\n confirmationModalVisible: true,\n });\n }\n\n  render() {\n    return (\n      <View style={{ flex: 1 }}>\n        ...\n\n        <LocationSearch\n value={\n this.state.position &&\n (this.state.position.feature ||\n this.state.position.formattedAddress)\n }\n />\n        <LocationPin onPress={this._onBookingRequest.bind(this)} />\n        <ClassSelection />\n        <ConfirmationModal\n          visible={this.state.confirmationModalVisible}\n          onClose={() => {\n            this.setState({ confirmationModalVisible: false });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\n...\n```", "```jsx\n       <Image source={require('../img/car.png')} />\n```", "```jsx\n/*** src/components/LocationSearch.js ** */\n\nimport React from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  ActivityIndicator,\n  StyleSheet,\n} from 'react-native';\n\nexport default class LocationSearch extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>PICKUP LOCATION</Text>\n        {this.props.value && (\n          <TextInput style={styles.location} value={this.props.value} />\n        )}\n        {!this.props.value && <ActivityIndicator style={styles.spinner} />}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    margin: 20,\n    marginTop: 40,\n    height: 60,\n    padding: 10,\n    borderColor: '#ccc',\n    borderWidth: 1,\n  },\n  title: {\n    alignSelf: 'center',\n    fontSize: 12,\n    color: 'green',\n    fontWeight: 'bold',\n  },\n  location: {\n    height: 40,\n    textAlign: 'center',\n    fontSize: 13,\n  },\n  spinner: {\n    margin: 10,\n  },\n});\n```", "```jsx\n/** * src/components/LocationPin.js ** */\n\nimport React from 'react';\nimport {\n  View,\n  Text,\n  Dimensions,\n  TouchableOpacity,\n  StyleSheet,\n} from 'react-native';\n\nconst { height, width } = Dimensions.get('window');\n\nexport default class LocationPin extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.banner}>\n          <Text style={styles.bannerText}>SET PICKUP LOCATION</Text>\n          <TouchableOpacity\n style={styles.bannerButton}\n onPress={this.props.onPress}\n >\n            <Text style={styles.bannerButtonText}>{'>'}</Text>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.bannerPole} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: height / 2 - 60,\n left: width / 2 - 120,\n  },\n  banner: {\n    flexDirection: 'row',\n alignSelf: 'center',\n justifyContent: 'center',\n    borderRadius: 20,\n    backgroundColor: '#333',\n    padding: 10,\n    paddingBottom: 10,\n    shadowColor: '#000000',\n shadowOffset: {\n width: 0,\n height: 3,\n },\n shadowRadius: 5,\n shadowOpacity: 1.0,\n  },\n  bannerText: {\n    alignSelf: 'center',\n    color: 'white',\n    marginRight: 10,\n    marginLeft: 10,\n    fontSize: 18,\n  },\n  bannerButton: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    width: 26,\n    height: 26,\n    borderRadius: 13,\n  },\n  bannerButtonText: {\n    color: 'white',\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    fontSize: 18,\n  },\n  bannerPole: {\n    backgroundColor: '#333',\n    width: 3,\n    height: 30,\n    alignSelf: 'center',\n  },\n});\n\n```", "```jsx\nconst {height, width} = Dimensions.get('window');\n```", "```jsx\nbanner: {\n  ...\n shadowColor: '#000000',\n shadowOffset: {\n width: 0,\n height: 3\n },\n shadowRadius: 5,\n shadowOpacity: 1.0 }\n```", "```jsx\n/*** src/components/ClassSelection.js ** */\n\nimport React from 'react';\nimport {\n  View,\n  Image,\n  Dimensions,\n  Text,\n  TouchableOpacity,\n  Animated,\n  StyleSheet,\n} from 'react-native';\n\nconst { height, width } = Dimensions.get('window');\n\nexport default class ClassSelection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classButtonPosition: new Animated.Value(15 + width * 0.1),\n    };\n  }\n\n  _onClassChange(className) {\n    if (className === 'superior') {\n      Animated.timing(this.state.classButtonPosition, {\n toValue: width * 0.77,\n duration: 500,\n }).start();\n    }\n\n    if (className === 'special') {\n      Animated.timing(this.state.classButtonPosition, {\n toValue: width * 0.5 - 20,\n duration: 500,\n }).start();\n    }\n\n    if (className === 'economy') {\n      Animated.timing(this.state.classButtonPosition, {\n toValue: 15 + width * 0.1,\n duration: 500,\n }).start();\n    }\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Image\n          style={styles.classBar}\n          source={require('../../img/classBar.png')}\n        />\n        <Animated.View\n style={[styles.classButton, { left: this.state.classButtonPosition }]}\n >\n          <Image\n            style={styles.classButtonImage}\n            source={require('../../img/class.png')}\n          />\n        </Animated.View>\n        <TouchableOpacity\n          style={[\n            styles.classButtonContainer,\n            {\n              width: width / 3 - 10,\n              left: width * 0.11,\n            },\n          ]}\n          onPress={this._onClassChange.bind(this, 'economy')}\n        >\n          <Text style={styles.classLabel}>economy</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.classButtonContainer,\n            { width: width / 3, left: width / 3 },\n          ]}\n          onPress={this._onClassChange.bind(this, 'special')}\n        >\n          <Text style={[styles.classLabel, { textAlign: 'center' }]}>\n            Special\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.classButtonContainer,\n            { width: width / 3, right: width * 0.11 },\n          ]}\n          onPress={this._onClassChange.bind(this, 'superior')}\n        >\n          <Text style={[styles.classLabel, { textAlign: 'right' }]}>\n            Superior\n          </Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 80,\n    backgroundColor: 'white',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingBottom: 10,\n  },\n  classBar: {\n    width: width * 0.7,\n left: width * 0.15,\n resizeMode: 'contain',\n    height: 30,\n    top: 35,\n  },\n  classButton: {\n    top: 30,\n    justifyContent: 'center',\n    borderRadius: 20,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    position: 'absolute',\n    backgroundColor: 'white',\n    height: 40,\n    width: 40,\n  },\n  classButtonImage: {\n    alignSelf: 'center',\n resizeMode: 'contain',\n    width: 30,\n  },\n  classButtonContainer: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    height: 70,\n    top: 10,\n  },\n  classLabel: {\n    paddingTop: 5,\n    fontSize: 12,\n  },\n});\n\n```", "```jsx\n      \u201crnpm\u201d: {\n          \u201cassets\u201d: [\u201c./fonts\u201d]\n      }\n```", "```jsx\n react-native link\n```", "```jsx\n...\n\nclassLabel: {\n    fontFamily: 'Blair ITC',\n    paddingTop: 5,\n    fontSize: 12,\n},\n\n...\n```", "```jsx\n/** * src/components/ClassSelection ***/\n\n...\n\nexport default class ClassSelection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classButtonPosition: new Animated.Value(15 + width * 0.1),\n    };\n  }\n\n  _onClassChange(className) {\n    if (className === 'superior') {\n      Animated.timing(this.state.classButtonPosition, {\n        toValue: width * 0.77,\n        duration: 500,\n      }).start();\n    }\n\n    ...\n\n  }\n\n  render() {\n    return (\n      ...\n\n      <Animated.View style={{ left: this.state.classButtonPosition }}>\n        <Image\n          style={styles.classButtonImage}\n          source={require('../../img/class.png')}\n        />\n      </Animated.View>\n\n      ...\n\n      <TouchableOpacity\n        onPress={this._onClassChange.bind(this, 'superior')}\n      >\n        <Text>Superior</Text>\n      </TouchableOpacity>\n\n      ...\n    );\n  }\n}\n\n...\n```", "```jsx\n/** * src/components/ConfirmationModal.js ***/\n\nimport React from 'react';\nimport {\n  Modal,\n  View,\n  Text,\n  Animated,\n  Easing,\n  TouchableOpacity,\n  StyleSheet,\n} from 'react-native';\n\nexport default class ConfirmationModal extends React.Component {\n  componentWillMount() {\n this._animatedValue = new Animated.Value(0);\n  }\n\n  cycleAnimation() {\n Animated.sequence([\n Animated.timing(this._animatedValue, {\n toValue: 100,\n duration: 1000,\n easing: Easing.linear,\n }),\n Animated.timing(this._animatedValue, {\n toValue: 0,\n duration: 0,\n }),\n ]).start(() => {\n this.cycleAnimation();\n });\n }\n\n  componentDidMount() {\n this.cycleAnimation();\n }\n\n  render() {\n    const interpolatedRotateAnimation = this._animatedValue.interpolate({\n inputRange: [0, 100],\n outputRange: ['0deg', '360deg'],\n });\n\n    return (\n      <Modal\n animationType={'fade'}\n visible={this.props.visible}\n transparent={true}\n >\n        <View style={styles.overlay}>\n          <View style={styles.container}>\n            <Text style={styles.title}>Contacting nearest car...</Text>\n            <Animated.Image\n style={[\n styles.spinner,\n { transform: [{ rotate: interpolatedRotateAnimation }] },\n ]}\n source={require('../../img/loading.png')}\n />\n            <TouchableOpacity\n              style={styles.closeButton}\n              onPress={this.props.onClose}\n            >\n              <Text style={styles.closeButtonText}>X</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  overlay: {\n    flex: 1,\n    backgroundColor: '#0006',\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: 'white',\n    alignSelf: 'center',\n    padding: 20,\n    borderColor: '#ccc',\n    borderWidth: 1,\n  },\n  title: {\n    textAlign: 'right',\n    fontFamily: 'Blair ITC',\n    paddingTop: 5,\n    fontSize: 12,\n  },\n  spinner: {\n    resizeMode: 'contain',\n    height: 50,\n    width: 50,\n    margin: 50,\n    alignSelf: 'center',\n  },\n  closeButton: {\n    backgroundColor: '#333',\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignSelf: 'center',\n  },\n  closeButtonText: {\n    color: 'white',\n    alignSelf: 'center',\n    fontSize: 20,\n  },\n});\n\n```", "```jsx\n...            \n\n            <Animated.Image\n              style={[\n                styles.spinner,\n                { transform: [{ rotate: interpolatedRotateAnimation }] },\n              ]}\n              source={require('../../img/spinner.png')}\n            />\n\n...\n```"]