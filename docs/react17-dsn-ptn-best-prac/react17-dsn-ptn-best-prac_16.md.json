["```jsx\nimport { FC, useState } from 'react'\n\ntype Props = {\n  count: number\n}\n\nconst Counter: FC<Props> = (props) => {}\n\nexport default Counter\n```", "```jsx\nconst [state, setState] = useState<any>(props.count)\n```", "```jsx\nconst handleClick = () => {\n  setState({ count: state.count + 1 })\n}\n```", "```jsx\nreturn (\n  <div>\n    {state.count}\n    <button onClick={handleClick}>+</button>\n  </div>\n)\n```", "```jsx\n<Counter count={1} />\n```", "```jsx\n<Counter>\nProps\n  count: 1\nState\n  count: 1\n```", "```jsx\n<Counter>\nProps\n  count: 1\nState\n  count: 2\n```", "```jsx\ntype Props = {\n  initialCount: number\n}\n\nconst Counter: FC<Props> = (props) => {\n  const [count, setState] = useState<any>(props.initialCount)\n  ...\n}\n```", "```jsx\n<Counter initialCount={1} />\n```", "```jsx\nimport { FC, useState } from 'react'\n\nconst List: FC = () => {\n\n}\n\nexport default List\n```", "```jsx\nconst [items, setItems] = useState(['foo', 'bar'])\n```", "```jsx\nconst handleClick = () => { \n  const newItems = items.slice()\n  newItems.unshift('baz')\n\n  setItems(newItems)\n}\n```", "```jsx\nreturn ( \n  <div> \n    <ul> \n      {items.map((item, index) => ( \n        <li key={index}>{item}</li> \n      ))} \n    </ul> \n\n    <button onClick={handleClick}>+</button> \n  </div> \n) \n```", "```jsx\nreturn ( \n  <div> \n    <ul> \n      {items.map((item, index) => ( \n        <li key={index}> \n          {item} \n          <input type=\"text\" /> \n        </li> \n      ))} \n    </ul> \n    <button onClick={handleClick}>+</button> \n  </div> \n)\n```", "```jsx\n<Component {...props} />\n```", "```jsx\n_jsx(Component, props)\n```", "```jsx\nconst Spread = () => <div foo=\"bar\" />\n```", "```jsx\nUnknown prop `foo` on <div> tag. Remove this prop from the element\n```", "```jsx\nconst Spread = props => <div {...props} />;\n```", "```jsx\n<Spread className=\"foo\" />\n```", "```jsx\n<Spread foo=\"bar\" className=\"baz\" />\n```", "```jsx\nconst Spread = props => <div {...props.domProps} />\n```", "```jsx\n<Spread foo=\"bar\" domProps={{ className: 'baz' }} />\n```"]