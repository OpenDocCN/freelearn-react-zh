["```jsx\nssh root@THE_DROPLET_IP\n```", "```jsx\ncd ~\ncurl -sL https://deb.nodesource.com/setup_14.x -o nodesource_setup.sh\n```", "```jsx\nsudo bash nodesource_setup.sh \n```", "```jsx\nsudo apt install nodejs -y\n```", "```jsx\nnode -v\nv14.16.1\nnpm -v\n6.14.12\n```", "```jsx\n vi /root/.ssh/id_rsa.pub\n```", "```jsx\ngit clone git@github.com:FoggDev/production.git\n```", "```jsx\ncd production\nnpm install\n```", "```jsx\nnpm start\n```", "```jsx\nnpm run start:production\n```", "```jsx\nnpm install -g pm2 \n```", "```jsx\nsudo apt-get update\nsudo apt-get install nginx\n```", "```jsx\nsudo ufw app list\nAvailable applications:\n Nginx Full\n Nginx HTTP\n Nginx HTTPS\n OpenSSH\n```", "```jsx\nsudo ufw allow 'Nginx HTTP'\nRules updated\nRules updated (v6) \n```", "```jsx\nStart server: sudo systemctl start nginx\nStop server: sudo systemctl stop nginx \nRestart server: sudo systemctl restart nginx\n```", "```jsx\nsudo vi /etc/nginx/sites-available/default \n```", "```jsx\nlocation / {\n  proxy_pass http://localhost:3000; \n  proxy_http_version 1.1; \n  proxy_set_header Upgrade $http_upgrade; \n  proxy_set_header Connection 'upgrade'; \n  proxy_set_header Host $host; \n  proxy_cache_bypass $http_upgrade;\n}\n```", "```jsx\nsudo nginx -t\n```", "```jsx\nsudo systemctl restart nginx\n```", "```jsx\nssh-keygen -t rsa\n# Then save the key as /root/.ssh/id_rsa_droplet with no password.\n# After go to .ssh directory\ncd /root/.ssh\n```", "```jsx\ncat id_rsa_droplet.pub >> authorized_keys\n```", "```jsx\n# In your local machine do:\nscp root@YOUR_DROPLET_IP:/root/.ssh/id_rsa_droplet ~/.ssh/\ncd .ssh\nssh-add id_rsa_droplet\nssh -v root@YOUR_DROPLET_IP\n```", "```jsx\nversion: 2.1\njobs:\n  build:\n    working_directory: ~/tmp\n    docker:\n      - image: cimg/node:14.16.1\n    steps:\n      - checkout\n      - run: npm install\n      - run: npm run lint\n      - run: npm test\n      - run: ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP 'cd production; git checkout master; git pull; npm install; npm run start:production;'\nworkflows:\n  build-deploy:\n    jobs:\n      - build:\n        filters:\n          branches:\n            only: master\n```", "```jsx\nversion: 2.1\n```", "```jsx\njobs:\n  build:\n    working_directory: ~/tmp\n```", "```jsx\ndocker:\n  - image: cimg/node:14.16.1\n```", "```jsx\nsteps:\n  - checkout\n  - run: npm install\n  - run: npm run lint\n  - run: npm test\n  - run: ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP 'cd production; git checkout master; git pull; npm install; npm run start:production;'\n```"]