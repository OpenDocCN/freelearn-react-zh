["```jsx\nnpm install react-router-dom @types/react-router-dom\n```", "```jsx\nconst Home = () => ( \n  <div className=\"Home\">\n    <h1>Home</h1>\n </div>\n)\n\nexport default Home\n```", "```jsx\nconst About = () => ( \n  <div className=\"About\">\n <h1>About</h1>\n </div>\n)\n\nexport default About\n```", "```jsx\nconst Contact = () => ( \n  <div className=\"Contact\">\n <h1>Contact</h1>\n </div>\n)\n\nexport default Contact\n```", "```jsx\nconst Error404 = () => ( \n  <div className=\"Error404\">\n <h1>Error404</h1>\n </div>\n)\n\nexport default Error404\n```", "```jsx\n// Dependencies\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n// Routes\nimport AppRoutes from './routes'\n\nrender( \n  <Router>\n <AppRoutes />\n </Router>, \n  document.getElementById('root')\n)\n```", "```jsx\n// Dependencies\nimport { Route } from 'react-router-dom'\n\n// Components\nimport App from './App'\nimport Home from './components/Home'\n\nconst AppRoutes = () => ( \n  <App>\n <Route path=\"/\" component={Home} /> \n </App>\n)\n\nexport default AppRoutes\n```", "```jsx\nimport { FC, ReactNode } from 'react' \nimport './App.css'\n\ntype Props = {\n  children: ReactNode\n}\n\nconst App: FC<Props> = ({ children }) => ( \n  <div className=\"App\">\n    {children}\n  </div> \n)\n\nexport default App\n```", "```jsx\n// Dependencies\nimport { Route } from 'react-router-dom'\n\n// Components\nimport App from './App'\nimport Home from './components/Home'\nimport Error404 from './components/Error404'\n\nconst AppRoutes = () => (\n  <App>\n <Route path=\"/\" component={Home} />\n    <Route component={Error404} />\n </App>\n)\n\nexport default AppRoutes\n```", "```jsx\n// Dependencies\nimport { Route, Switch } from 'react-router-dom'\n\n// Components\nimport App from './App'\nimport Home from './components/Home'\nimport Error404 from './components/Error404'\n\nconst AppRoutes = () => (\n  <App>\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route component={Error404} />\n    </Switch>\n  </App>\n)\n\nexport default AppRoutes\n```", "```jsx\nconst AppRoutes = () => (\n  <App>\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n      <Route component={Error404} />\n    </Switch>\n  </App>\n)\n```", "```jsx\n// Dependencies\nimport { Route, Switch } from 'react-router-dom'\n\n// Components\nimport App from './App'\nimport About from './components/About'\nimport Contact from './components/Contact'\nimport Home from './components/Home'\nimport Error404 from './components/Error404'\n\nconst AppRoutes = () => (\n <App>\n <Switch>\n      <Route path=\"/\" component={Home} exact />\n      <Route path=\"/about\" component={About} exact />\n      <Route path=\"/contact\" component={Contact} exact />\n      <Route component={Error404} />\n </Switch>\n </App>\n)\n\nexport default AppRoutes\n```", "```jsx\n.Contacts ul {\n  list-style: none;\n  margin: 0;\n  margin-bottom: 20px;\n  padding: 0;\n}\n\n.Contacts ul li {\n  padding: 10px;\n}\n\n.Contacts a {\n  color: #555;\n  text-decoration: none;\n}\n\n.Contacts a:hover {\n  color: #ccc;\n  text-decoration: none;\n}\n```", "```jsx\n// Dependencies\nimport { Route, Switch } from 'react-router-dom'\n\n// Components\nimport App from './components/App'\nimport About from './components/About'\nimport Contact from './components/Contact'\nimport Home from './components/Home'\nimport Error404 from './components/Error404'\nimport Contacts from './components/Contacts'\n\nconst AppRoutes = () => (\n  <App>\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n      <Route path=\"/about\" component={About} exact />\n      <Route path=\"/contact\" component={Contact} exact />\n      <Route path=\"/contacts\" component={Contacts} exact />\n      <Route component={Error404} />\n    </Switch>\n  </App>\n)\n\nexport default AppRoutes\n```", "```jsx\nimport { FC, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Contacts.css'\n\ntype Contact = {\n  id: number\n  name: string\n  email: string\n  phone: string\n}\n\nconst data: Contact[] = [\n  {\n    id: 1,\n    name: 'Carlos Santana',\n    email: 'carlos.santana@dev.education',\n    phone: '415-307-3112'\n  },\n  {\n    id: 2,\n    name: 'John Smith',\n    email: 'john.smith@dev.education',\n    phone: '223-344-5122'\n  },\n  {\n    id: 3,\n    name: 'Alexis Nelson',\n    email: 'alexis.nelson@dev.education',\n    phone: '664-291-4477'\n  }\n]\n\nconst Contacts: FC = (props) => {\n // For now we are going to add our contacts to our\n // local state, but normally this should come\n // from some service.\n  const [contacts, setContacts] = useState<Contact[]>(data)\n\n  const renderContacts = () => (\n    <ul>\n      {contacts.map((contact: Contact, key) => (\n        <li key={contact.id}>\n          <Link to={`/contacts/${contact.id}`}>{contact.name}</Link>\n        </li>\n      ))}\n    </ul>\n  )\n\n  return (\n    <div className=\"Contacts\">\n      <h1>Contacts</h1>\n\n      {renderContacts()}\n    </div>\n  )\n}\n\nexport default Contacts\n```", "```jsx\nconst AppRoutes = () => (\n  <App>\n <Switch>\n      <Route path=\"/\" component={Home} exact />\n      <Route path=\"/about\" component={About} exact />\n      <Route path=\"/contact\" component={Contact} exact />\n      <Route path=\"/contacts\" component={Contacts} exact />\n      <Route path=\"/contacts/:contactId\" component={Contacts} exact />\n      <Route component={Error404} />\n </Switch>\n </App>\n)\n```", "```jsx\nimport { FC, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Contacts.css'\n\nconst data = [\n  {\n    id: 1,\n    name: 'Carlos Santana',\n    email: 'carlos.santana@js.education',\n    phone: '415-307-3112'\n  },\n  {\n    id: 2,\n    name: 'John Smith',\n    email: 'john.smith@js.education',\n    phone: '223-344-5122'\n  },\n  {\n    id: 3,\n    name: 'Alexis Nelson',\n    email: 'alexis.nelson@js.education',\n    phone: '664-291-4477'\n  }\n]\n\ntype Contact = {\n  id: number\n  name: string\n  email: string\n  phone: string\n}\n\ntype Props = {\n  match: any\n}\n\nconst Contacts: FC<Props> = (props) => {\n  // For now we are going to add our contacts to our\n // local state, but normally this should come\n // from some service.\n  const [contacts, setContacts] = useState<Contact[]>(data)\n\n // Let's see what contains the match object.\n  console.log(props)\n\n  const { match: { params: { contactId } } } = props\n\n  // By default our selectedNote is false\n  let selectedContact: any = false\n\n  if (contactId > 0) {\n // If the contact id is higher than 0 then we filter it from our\n // contacts array.\n    selectedContact = contacts.filter(\n      contact => contact.id === Number(contactId)\n    )[0];\n  }\n\n  const renderSingleContact = ({ name, email, phone }: Contact) => (\n    <>\n      <h2>{name}</h2>\n      <p>{email}</p>\n      <p>{phone}</p>\n    </>\n  )\n\n  const renderContacts = () => (\n    <ul>\n      {contacts.map((contact: Contact, key) => (\n        <li key={key}>\n          <Link to={`/contacts/${contact.id}`}>{contact.name}</Link>\n        </li>\n      ))}\n    </ul>\n  )\n\n  return (\n    <div className=\"Contacts\">\n      <h1>Contacts</h1>\n      {/* We render our selectedContact or all the contacts */}\n      {selectedContact\n        ? renderSingleContact(selectedContact)\n        : renderContacts()}\n    </div>\n  )\n}\n\nexport default Contacts\n```", "```jsx\nimport { Link } from 'react-router-dom'\nimport './App.css'\n\nconst App = ({ children }) => (\n  <div className=\"App\">\n    <ul className=\"menu\">\n      <li><Link to=\"/\">Home</Link></li>\n      <li><Link to=\"/about\">About</Link></li>\n      <li><Link to=\"/contacts\">Contacts</Link></li>\n      <li><Link to=\"/contact\">Contact</Link></li>\n    </ul>\n\n    {children}\n  </div>\n)\n\nexport default App\n```", "```jsx\n.App {\n  text-align: center;\n}\n\n.App ul.menu {\n  margin: 50px;\n  padding: 0;\n  list-style: none;\n}\n\n.App ul.menu li {\n  display: inline-block;\n  padding: 0 10px;\n}\n\n.App ul.menu li a {\n  color: #333;\n  text-decoration: none;\n}\n\n.App ul.menu li a:hover {\n  color: #ccc;\n}\n```"]