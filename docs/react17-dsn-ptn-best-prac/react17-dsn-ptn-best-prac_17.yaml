- en: Deploying to Production
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 部署到生产环境
- en: Now that you have completed your first React application, it is time to learn
    how to deploy it to the world. For this purpose, we will use the cloud service
    called **DigitalOcean**.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经完成了您的第一个React应用程序，是时候学习如何将其部署到世界上了。为此，我们将使用名为**DigitalOcean**的云服务。
- en: In this chapter, you will learn how to deploy your React application using Node.js
    and nginx on an Ubuntu server from DigitalOcean.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何在DigitalOcean的Ubuntu服务器上使用Node.js和nginx部署您的React应用程序。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Creating a DigitalOcean Droplet and configuring it
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个DigitalOcean Droplet并对其进行配置
- en: Configuring nginx, PM2, and a domain
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置nginx、PM2和域名
- en: Implementing CircleCI for continuous integration
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施CircleCI进行持续集成
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To complete this chapter, you will need the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成本章，您将需要以下内容：
- en: Node.js 12+
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node.js 12+
- en: Visual Studio Code
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visual Studio Code
- en: Creating our first DigitalOcean Droplet
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建我们的第一个DigitalOcean Droplet
- en: I have used DigitalOcean for the last six years and I can say that it is one
    of the best cloud services I have tried, not just because of the affordable costs,
    but also because it is super easy and fast to configure, and the community has
    a lot of updated documentation to fix most of the common issues related to server
    configuration.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经使用DigitalOcean六年了，我可以说这是我尝试过的最好的云服务之一，不仅因为价格实惠，而且配置起来非常简单快捷，社区也有很多更新的文档来解决与服务器配置相关的常见问题。
- en: At this point, you will need to invest some money to get this service. I will
    show you the cheapest way to do this, and if in the future you want to increase
    the power of your Droplets, you will be able to increase the capacity without
    redoing the configuration. The lowest price for the very basic Droplet is $5.00
    per month ($0.007 per hour).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，您需要投入一些资金来获得这项服务。我将向您展示最便宜的方法来做到这一点，如果将来您想增加Droplets的性能，您将能够在不重新配置的情况下增加容量。最基本的Droplet的最低价格是每月5.00美元（每小时0.007美元）。
- en: We are going to use Ubuntu 20.04 (but feel free to use the latest version 21.04);
    you will need to know some basic Linux commands to be able to configure your Droplet.
    If you're a beginner using Linux, don't worry—I'll try to show you each step in
    a very easy way.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Ubuntu 20.04（但也可以使用最新版本21.04）；您将需要了解一些基本的Linux命令来配置您的Droplet。如果您是Linux的初学者，不用担心，我会尽量以非常简单的方式向您展示每一步。
- en: Signing up to DigitalOcean
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 注册DigitalOcean
- en: If you don't have a DigitalOcean account, you can sign up at [https://cloud.digitalocean.com/registrations/new](https://cloud.digitalocean.com/registrations/new).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有DigitalOcean账户，可以在[https://cloud.digitalocean.com/registrations/new](https://cloud.digitalocean.com/registrations/new)注册。
- en: 'You can sign up with your Google account, or by registering manually. Once
    you register with Google, you will see the billing info view, as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用Google账户注册，也可以手动注册。一旦您使用Google注册，您将看到如下的账单信息视图：
- en: '![](assets/3a701cc0-3c9a-4cc5-b304-4e518723cc42.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3a701cc0-3c9a-4cc5-b304-4e518723cc42.png)'
- en: 'You can pay with your credit card or by using PayPal. Once you have configured
    your payment information, DigitalOcean will ask you for some information about
    your project so that it can configure your Droplet faster:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用信用卡支付，也可以使用PayPal支付。一旦您配置了付款信息，DigitalOcean将要求您提供一些关于您的项目的信息，以便更快地配置您的Droplet：
- en: '![](assets/5c0957de-f2de-41fc-988c-56f81847ff0d.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5c0957de-f2de-41fc-988c-56f81847ff0d.png)'
- en: In the next section, we will create our first Droplet.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将创建我们的第一个Droplet。
- en: Creating our first Droplet
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建我们的第一个Droplet
- en: 'We will create a new Droplet from scratch. Follow these steps to do so:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从头开始创建一个新的Droplet。按照以下步骤操作：
- en: 'Select the New Droplet option, as shown in the following screenshot:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“New Droplet”选项，如下截图所示：
- en: '![](assets/23ed5cba-50b3-4543-b43b-c28748a63f9b.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/23ed5cba-50b3-4543-b43b-c28748a63f9b.png)'
- en: 'Choose Ubuntu 20.04 (LTS) x64, as follows:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择Ubuntu 20.04（LTS）x64，如下所示：
- en: '![](assets/d876496c-e9fa-4f4e-add7-9cd4835d1c0f.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d876496c-e9fa-4f4e-add7-9cd4835d1c0f.png)'
- en: 'Then, choose the Basic plan, as shown here:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择基本计划，如下所示：
- en: '![](assets/f32ed3a4-0eca-4bc9-aa91-5d7195394c30.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f32ed3a4-0eca-4bc9-aa91-5d7195394c30.png)'
- en: 'You can then choose $5/mo in the payment plan options:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您可以在付款计划选项中选择$5/月：
- en: '![](assets/af83dac7-4472-4cb8-880c-41bb235b2957.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/af83dac7-4472-4cb8-880c-41bb235b2957.png)'
- en: 'Select a region. In this case, we will select the San Francisco region:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个地区。在这种情况下，我们将选择旧金山地区：
- en: '![](assets/bd868940-2def-4a09-967c-5fd7631912ba.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/bd868940-2def-4a09-967c-5fd7631912ba.png)'
- en: 'Create a root password, add the name of your Droplet and then click on the
    Create Droplet button, as follows:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个根密码，添加Droplet的名称，然后点击“Create Droplet”按钮，如下所示：
- en: '![](assets/247ea094-92a3-4cc7-9371-70c6265443c1.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/247ea094-92a3-4cc7-9371-70c6265443c1.png)'
- en: 'It will take around 30 seconds to create your Droplet. Once it has been created,
    you will be able to see it:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建Droplet大约需要30秒。创建完成后，您将能够看到它：
- en: '![](assets/e3344cf7-d36f-4777-8d98-f67e0960ac9a.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e3344cf7-d36f-4777-8d98-f67e0960ac9a.png)'
- en: 'Now, in your Terminal, you can  access the Droplet by using the following command:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在您的终端中，您可以使用以下命令访问Droplet：
- en: '[PRE0]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The first time you access it will ask you for the fingerprint, you just need
    to write Yes, and then it will require your password (the one you defined when
    you created your droplet).
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一次访问时会要求输入指纹，只需输入Yes，然后需要输入密码（创建Droplet时定义的密码）。
- en: '![](assets/f96f42b3-0d0b-47a9-a8af-7df7765da8cd.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f96f42b3-0d0b-47a9-a8af-7df7765da8cd.png)'
- en: Now we are all set to install Node.js, which we will be covering in the next
    section.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好安装Node.js了，我们将在下一节中进行介绍。
- en: Installing Node.js
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Node.js
- en: 'Now that you''re connected to your Droplet, let''s configure it. First, we
    need to install the latest version of Node.js using a Personal Package Archive.
    The current version of Node at the time of writing this book is 14.16.x. Follow
    these given steps to install Node.js:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已连接到Droplet，让我们对其进行配置。首先，我们需要使用个人软件包存档安装最新版本的Node.js。撰写本书时的当前Node版本为14.16.x。按照以下步骤安装Node.js：
- en: 'If, when you are reading this paragraph, Node has a new version, change the
    version in the `setup_14.x` command:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果在阅读本段时，Node有新版本，请在`setup_14.x`命令中更改版本：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once you get the `nodesource_setup.sh` file, run the following command:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦获得`nodesource_setup.sh`文件，运行以下命令：
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, install Node by running the following command:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，通过运行以下命令安装Node：
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'If everything works fine, verify the installed version of Node and `npm` with
    the following commands:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一切正常，可以使用以下命令验证已安装的Node和`npm`的版本：
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If you need a newer version of Node.js, you can always upgrade it.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要更新版本的Node.js，您可以随时升级。
- en: Configuring Git and GitHub
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置Git和GitHub
- en: I created a special repository for helping you to deploy your first React application
    to production ([https://github.com/D3vEducation/production](https://github.com/D3vEducation/production)).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我创建了一个特殊的存储库，以帮助您将第一个React应用程序部署到生产环境（[https://github.com/D3vEducation/production](https://github.com/D3vEducation/production)）。
- en: 'In your Droplet, you need to clone this Git repository (or your own repository
    if you have your React application ready to be deployed). The production repository
    is public, but normally you will use a private repository; in this case, you need
    to add the SSH key of your Droplet to your GitHub account. To create this key,
    follow these steps:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的Droplet中，您需要克隆这个Git仓库（或者如果您的React应用程序已准备好部署，则使用您自己的仓库）。生产仓库是公开的，但通常您会使用私有仓库；在这种情况下，您需要将Droplet的SSH密钥添加到您的GitHub帐户中。要创建此密钥，请按照以下步骤操作：
- en: 'Run the `ssh-keygen` command and then press *Enter* three times without writing
    any passphrase:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`ssh-keygen`命令，然后按*Enter*三次，不写任何密码：
- en: '![](assets/11f59ac8-2627-4f93-90ca-3209bb5a8967.png)If you left your Terminal
    inactive for more than five minutes, your Droplet connection will probably be
    closed, and you will need to connect again.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/11f59ac8-2627-4f93-90ca-3209bb5a8967.png)如果您的终端闲置超过五分钟，您的Droplet连接可能会被关闭，您需要重新连接。'
- en: 'Once you have created your Droplet SSH key, you can see it by running the following
    command:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建Droplet SSH密钥后，您可以通过运行以下命令查看它：
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You will see something like this:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您会看到类似这样的东西：
- en: '![](assets/a33ffc30-07ae-4340-b1a0-00600326cf5d.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a33ffc30-07ae-4340-b1a0-00600326cf5d.png)'
- en: 'Copy your SSH key and then visit your GitHub account. Go to Settings | SSH
    and GPG Keys ([https://github.com/settings/ssh/new](https://github.com/settings/ssh/new)).
    Then, paste your key in the text area and add your title to the key:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制您的SSH密钥，然后访问您的GitHub帐户。转到设置| SSH和GPG密钥（[https://github.com/settings/ssh/new](https://github.com/settings/ssh/new)）。然后，在文本区域中粘贴您的密钥并为密钥添加标题：
- en: '![](assets/340744a9-2785-41c2-9e3e-7674574da84a.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/340744a9-2785-41c2-9e3e-7674574da84a.png)'
- en: 'Once you click on the Add SSH key button, you will see your SSH key, like so:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“添加SSH密钥”按钮后，您将看到您的SSH密钥，如下所示：
- en: '![](assets/1202eee7-0bb8-4f61-8bef-0c7012d40205.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1202eee7-0bb8-4f61-8bef-0c7012d40205.png)'
- en: 'Now you can clone our repository (or yours) using the following command:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您可以使用以下命令克隆我们的仓库（或您的仓库）：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'When you clone it for the first time, you will get a message asking you to
    allow the RSA key fingerprint:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您第一次克隆它时，您将收到一条消息，询问您是否允许RSA密钥指纹：
- en: '![](assets/e6195ece-4997-4645-838f-8e76c42afea9.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e6195ece-4997-4645-838f-8e76c42afea9.png)'
- en: 'You have to write yes and then hit *Enter* to be able to clone it:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你必须输入yes然后按*Enter*来克隆它：
- en: '![](assets/52f6974f-281b-45a6-b2d4-cc871ae52794.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/52f6974f-281b-45a6-b2d4-cc871ae52794.png)'
- en: 'Then, you have to go to the `production` directory and install the `npm` packages:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您需要转到`production`目录并安装`npm`包：
- en: '[PRE7]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'If you want to test the application, just run the `start` script:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果要测试应用程序，只需运行`start`脚本：
- en: '[PRE8]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Then open your browser and go to your Droplet IP and add the port number. In
    my case, it is `http://144.126.222.17:3000`:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后打开浏览器，转到您的Droplet IP并添加端口号。在我的情况下，它是`http://144.126.222.17:3000`：
- en: '![](assets/2a3fca3c-5bed-4679-9e76-c9c6aced2f83.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2a3fca3c-5bed-4679-9e76-c9c6aced2f83.png)'
- en: 'This will run the project in development mode. If you want to run in production
    mode, then use the following command:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将以开发模式运行项目。如果要以生产模式运行，则使用以下命令：
- en: '[PRE9]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You should see PM2 running, as shown in the following screenshot:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到PM2正在运行，如下截图所示：
- en: '![](assets/22418c84-00ae-4d2b-83b7-666ca37934fa.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/22418c84-00ae-4d2b-83b7-666ca37934fa.png)'
- en: 'If you run it and you view the Network tab in your Chrome DevTools, you will
    see the bundles being loaded:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果运行它并在Chrome DevTools的网络选项卡中查看，您将看到加载的捆绑包：
- en: '![](assets/605fd002-8001-4033-af1a-804659a0ce74.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/605fd002-8001-4033-af1a-804659a0ce74.png)'
- en: We now have our React application working in production, but let's see what
    else we can do with DigitalOcean in the next section.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在的React应用程序在生产中运行，但让我们在下一节中看看我们可以用DigitalOcean做些什么。
- en: Turning off our Droplet
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关闭我们的Droplet
- en: 'To turn off the Droplet, follow these steps:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 要关闭Droplet，请按照以下步骤操作：
- en: 'If you want to turn off your Droplet, you can go to the Power section, or you
    can use the ON/OFF switch:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果要关闭Droplet，可以转到电源部分，或者可以使用开/关开关：
- en: '![](assets/19e7fb72-5d44-43b8-9549-217558c10baa.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/19e7fb72-5d44-43b8-9549-217558c10baa.png)'
- en: 'DigitalOcean will charge you only when your Droplet is ON. If you click on
    the ON switch to turn it off, then you will get the following confirmation message:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DigitalOcean只有在您的Droplet处于开启状态时才会向您收费。如果单击开关以关闭它，那么您将收到以下确认消息：
- en: '![](assets/8a5da75d-431f-449d-9f96-442b034a2922.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8a5da75d-431f-449d-9f96-442b034a2922.png)'
- en: In this way, you can control your Droplet and avoid paying unnecessarily when
    you're not using your Droplet.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，您可以控制您的Droplet，并在不使用Droplet时避免不必要的支付。
- en: Configuring nginx, PM2, and a domain
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置nginx，PM2和域名
- en: Our Droplet is ready to be used for production, but as you can see, we are still
    using port `3000`. We need to configure nginx and implement a proxy to redirect
    the traffic from port `80` to `3000`; this means we won't need to specify the
    port directly anymore. **Node Production Process Manager** (**PM2**) will help
    us run the Node server in production securely. Generally, if we run Node directly
    with the `node` or `babel-node` commands, and there is an error in the app, then
    it will crash and will stop working. PM2 restarts the node server if an error
    occurs.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的Droplet已经准备好用于生产，但是正如你所看到的，我们仍然在使用端口`3000`。我们需要配置nginx并实现代理，将流量从端口`80`重定向到`3000`；这意味着我们将不再需要直接指定端口。**Node生产进程管理器**（**PM2**）将帮助我们在生产环境中安全运行Node服务器。通常，如果我们直接使用`node`或`babel-node`命令运行Node，并且应用程序出现错误，那么它将崩溃并停止工作。PM2会在发生错误时重新启动节点服务器。
- en: 'First, in your Droplet, you need to install PM2 globally:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在您的Droplet中，您需要全局安装PM2：
- en: '[PRE10]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: PM2 will help us to run our React app in a very easy way.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: PM2将帮助我们以非常简单的方式运行React应用程序。
- en: Installing and configuring nginx
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和配置nginx
- en: 'To install nginx, you need to execute the following command:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装nginx，您需要执行以下命令：
- en: '[PRE11]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'After you have installed nginx, then you can start the configuration:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 安装nginx后，您可以开始配置：
- en: 'We need to adjust the firewall to allow the traffic for port `80`. To list
    the available application configurations, you need to run the following command:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要调整防火墙以允许端口`80`的流量。要列出可用的应用程序配置，您需要运行以下命令：
- en: '[PRE12]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '`Nginx Full` means that it will allow the traffic from port `80` (HTTP) and
    port `443` (HTTPS). We haven''t configured any domain with SSL, so, for now, we
    should restrict the traffic to be sent just through port `80` (HTTP):'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Nginx Full`表示它将允许从端口`80`（HTTP）和端口`443`（HTTPS）的流量。我们还没有配置任何带SSL的域名，所以现在我们应该限制流量只能通过端口`80`（HTTP）发送：'
- en: '[PRE13]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'If you try to access the Droplet IP, you should see nginx working:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果尝试访问Droplet IP，您应该看到nginx正在工作：
- en: '![](assets/b39df5db-2e1e-4114-8e43-236b111de353.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b39df5db-2e1e-4114-8e43-236b111de353.png)'
- en: 'You can manage the nginx process with these commands:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用以下命令管理nginx进程：
- en: '[PRE14]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Nginx is an amazing web server that is getting very popular nowadays.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Nginx是一个非常流行的出色的Web服务器。
- en: Setting up a reverse proxy server
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置反向代理服务器
- en: 'As I mentioned previously, we need to set up a reverse proxy server to send
    the traffic from port `80` (HTTP) to port `3000` (React app). To do this, you
    need to open the following file:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如我之前提到的，我们需要设置一个反向代理服务器，将流量从端口`80`（HTTP）发送到端口`3000`（React应用程序）。为此，您需要打开以下文件：
- en: '[PRE15]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The steps are as follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤如下：
- en: 'In the `location /` block, you need to replace the code in the file with the
    following:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`location /`块中，您需要用以下内容替换文件中的代码：
- en: '[PRE16]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Once you have saved the file, you can verify whether there is a syntax error
    in the nginx configuration with the following command:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件后，您可以使用以下命令验证nginx配置中是否存在语法错误：
- en: '[PRE17]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'If everything is fine, then you should see this:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一切正常，那么您应该看到这个：
- en: '![](assets/cf501d03-f82e-4f54-96a3-350b4ad890d2.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/cf501d03-f82e-4f54-96a3-350b4ad890d2.png)'
- en: 'Finally, you need to restart the nginx server:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，您需要重新启动nginx服务器：
- en: '[PRE18]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Now, you should be able to access the React application without the port, as
    shown in the following screenshot:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您应该能够访问React应用程序而不需要端口，如下面的屏幕截图所示：
- en: '![](assets/38c093cc-6348-4f20-94e7-8ef627e42167.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/38c093cc-6348-4f20-94e7-8ef627e42167.png)'
- en: We are almost done! In the next section, we are going to add a domain to our
    Droplet.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们快要完成了！在下一节中，我们将向我们的Droplet添加一个域名。
- en: Adding a domain to our Droplet
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将域名添加到我们的Droplet
- en: 'Using an IP to access a website is not nice; we always need to use a domain
    to help users find our website easier. If you want to use a domain on your Droplet,
    you need to change the nameservers of your domain to point to the DigitalOcean
    DNS. I normally use GoDaddy to register my domains. To do so using GoDaddy, follow
    these steps:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 使用IP访问网站并不好；我们总是需要使用域名来帮助用户更容易地找到我们的网站。如果您想在Droplet上使用域名，您需要将您的域名的域名服务器更改为指向DigitalOcean
    DNS。我通常使用GoDaddy来注册我的域名。要使用GoDaddy这样做，请按照以下步骤：
- en: 'Go to [https://dcc.godaddy.com/manage/YOURDOMAIN.COM/dns](https://dcc.godaddy.com/manage/YOURDOMAIN.COM/dns),
    and then go to the Nameservers section:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到[https://dcc.godaddy.com/manage/YOURDOMAIN.COM/dns](https://dcc.godaddy.com/manage/YOURDOMAIN.COM/dns)，然后转到Nameservers部分：
- en: '![](assets/d6917cb5-d6ac-4ddb-9be8-3ccabcc28434.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d6917cb5-d6ac-4ddb-9be8-3ccabcc28434.png)'
- en: 'Click on the Change button, select Custom, and then specify the DigitalOcean
    DNS:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“更改”按钮，选择“自定义”，然后指定DigitalOcean DNS：
- en: '![](assets/1e25a5e2-3967-4e91-afa2-bacb9dcd64f8.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1e25a5e2-3967-4e91-afa2-bacb9dcd64f8.png)'
- en: 'Normally, it takes between 15 and 30 minutes for the DNS changes to be reflected;
    for now, after you have updated your Nameservers, go to your Droplet dashboard,
    and then choose the Add a domain option:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通常，DNS更改需要15到30分钟才能反映出来；现在，在更新了您的Nameservers之后，转到您的Droplet仪表板，然后选择添加域选项：
- en: '![](assets/342701e6-082f-4677-9632-325b4e2f9b0f.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/342701e6-082f-4677-9632-325b4e2f9b0f.png)'
- en: 'Then, write your domain name, select your Droplet, and click on the Add Domain
    button:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，输入您的域名，选择您的Droplet，然后单击“添加域”按钮：
- en: '![](assets/9e1c16fa-9600-4a70-a6ff-3a651985a4f8.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9e1c16fa-9600-4a70-a6ff-3a651985a4f8.png)'
- en: 'Now, you have to create a new record for CNAME. Select the CNAME tab, and in
    the HOSTNAME write `www`; in the alias field write `@`; by default, the TTL is
    `43200`. All of this is to enable access to your domain using the `www` prefix:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您需要为CNAME创建一个新记录。选择CNAME选项卡，在HOSTNAME中写入“www”；在别名字段中写入“@”；默认情况下，TTL为“43200”。所有这些都是为了使用“www”前缀访问您的域名：
- en: '![](assets/606a3454-71e7-4845-8a21-66bd34cb270e.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/606a3454-71e7-4845-8a21-66bd34cb270e.png)'
- en: 'If you did everything correctly, you should be able to access your domain and
    see the React application working. As I said before, this process can take up
    to 30 minutes, but in some cases, it can take up to 24 hours depending on the
    DNS propagation speed:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你做的一切正确，你应该能够访问你的域名并看到React应用程序在运行。正如我之前所说，这个过程可能需要长达30分钟，但在某些情况下，可能需要长达24小时，这取决于DNS传播速度：
- en: '![](assets/caa2b2a8-3d7c-4920-a0d2-47451bd8e9b8.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/caa2b2a8-3d7c-4920-a0d2-47451bd8e9b8.png)'
- en: Amazing, now you have officially deployed your first React application to production!
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了，现在您已经正式将您的第一个React应用程序部署到生产环境！
- en: '**Implementing CircleCI for continuous integration**'
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施CircleCI进行持续集成
- en: 'I''ve been using CircleCI for a while and I can tell you that it is one of
    the best CI solutions: it is free for personal use, giving you unlimited repositories
    and users; you have 1,000 build minutes per month, one container, and one concurrent
    job; if you need more, you can upgrade the plan with an initial price of $50 per
    month.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经使用CircleCI有一段时间了，我可以告诉你，这是最好的CI解决方案之一：个人使用免费，无限的仓库和用户；每月有1,000分钟的构建时间，一个容器和一个并发作业；如果你需要更多，你可以升级计划，初始价格为每月50美元。
- en: 'The first thing you need to do is sign up on the site using your GitHub account
    (or Bitbucket, if you prefer). If you choose to use GitHub, you need to authorize
    CircleCI in your account, as shown in the following screenshot:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要做的第一件事是使用你的GitHub账户（或者如果你喜欢的话，Bitbucket）在网站上注册。如果你选择使用GitHub，你需要在你的账户中授权CircleCI，如下截图所示：
- en: '![](assets/17413dc6-0528-4daf-a49f-1eef6fc00e92.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/17413dc6-0528-4daf-a49f-1eef6fc00e92.png)'
- en: In the next section, we are going to add our SSH key to CircleCI.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将向CircleCI添加我们的SSH密钥。
- en: Adding an SSH key to CircleCI
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向CircleCI添加SSH密钥
- en: 'Now that you have created your account, CircleCI needs a way to log in to your
    DigitalOcean Droplet to run the deploy script. Follow these steps to complete
    this task:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经创建了你的账户，CircleCI需要一种方式来登录到你的DigitalOcean Droplet来运行部署脚本。按照以下步骤完成这个任务：
- en: 'Create a new SSH key inside your Droplet using the following command:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令在Droplet内创建一个新的SSH密钥：
- en: '[PRE19]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'After that, let''s add the key to our `authorized_keys`:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，让我们将密钥添加到我们的`authorized_keys`中：
- en: '[PRE20]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now, you need to download the private key. To verify that you can log in with
    the new key, you need to copy it to your local machine, as follows:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你需要下载私钥。为了验证你是否可以使用新密钥登录，你需要将其复制到你的本地机器，如下所示：
- en: '[PRE21]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'If you did everything correctly, you should be able to log in to your Droplet
    without a password, and that means CircleCI can access our Droplet too:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你做的一切正确，你应该能够无需密码登录到你的Droplet，这意味着CircleCI也可以访问我们的Droplet：
- en: 'Copy the content of your `id_rsa_droplet.pub` key and then go to your repository
    settings ([https://app.circleci.com/settings/project/github/YOUR_GITHUB_USER/YOUR_REPOSITORY](https://app.circleci.com/settings/project/github/YOUR_GITHUB_USER/YOUR_REPOSITORY)):'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制你的`id_rsa_droplet.pub`密钥的内容，然后转到你的仓库设置（[https://app.circleci.com/settings/project/github/YOUR_GITHUB_USER/YOUR_REPOSITORY](https://app.circleci.com/settings/project/github/YOUR_GITHUB_USER/YOUR_REPOSITORY)）：
- en: '![](assets/93c72cb3-e3b7-41c5-9460-458519ca9425.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/93c72cb3-e3b7-41c5-9460-458519ca9425.png)'
- en: 'Go to SSH Keys, as follows:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往SSH密钥，如下所示：
- en: '![](assets/310a2714-d85f-4ae9-bd3d-b950cf2590e5.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/310a2714-d85f-4ae9-bd3d-b950cf2590e5.png)'
- en: 'You can also access the URL [https://app.circleci.com/settings/project/github/YOUR_GITHUB_USER/YOUR_REPOSITORY/shh](https://app.circleci.com/settings/project/github/YOUR_GITHUB_USER/YOUR_REPOSITORY/shh),
    and then click on the Add SSH Key button at the bottom:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你也可以访问URL [https://app.circleci.com/settings/project/github/YOUR_GITHUB_USER/YOUR_REPOSITORY/shh](https://app.circleci.com/settings/project/github/YOUR_GITHUB_USER/YOUR_REPOSITORY/shh)，然后在底部点击添加SSH密钥按钮：
- en: '![](assets/961b1c0e-edbe-4e1d-8564-40ad8eb0ed79.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/961b1c0e-edbe-4e1d-8564-40ad8eb0ed79.png)'
- en: Paste your private key, and then provide a name for the Hostname field; we will
    name it `DigitalOcean`.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 粘贴你的私钥，然后为主机名字段提供一个名称；我们将其命名为`DigitalOcean`。
- en: Now let's configure our CircleCI instance in the next section.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在下一节中配置我们的CircleCI实例。
- en: Configuring CircleCI
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置CircleCI
- en: 'Now that you have configured access for CircleCI to your Droplet, you need
    to add a `config` file to your project to specify the jobs you want to execute
    for the deployment process. This process is shown in the following steps:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经为CircleCI配置了对Droplet的访问权限，你需要向你的项目添加一个`config`文件，以指定你想要执行的部署过程中的作业。这个过程如下所示：
- en: 'For this, you need to create the `.circleci` directory and add the following
    inside the `config.yml` file:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为此，您需要创建`.circleci`目录，并在`config.yml`文件中添加以下内容：
- en: '[PRE22]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: When you have a `.yml` file, you need to be careful with the indentation; it
    is similar to Python in that if you don't use indents correctly, you will get
    an error. Let's see how this file is structured.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您有一个`.yml`文件时，您需要小心缩进；它类似于Python，如果您没有正确使用缩进，将会出现错误。让我们看看这个文件的结构。
- en: 'Specify the CircleCI version we will use. In this instance, you are using version
    `2.1` (the latest one at the time of writing this book):'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定我们将使用的CircleCI版本。在这种情况下，您正在使用版本`2.1`（在撰写本书时的最新版本）：
- en: '[PRE23]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Inside `jobs`, we will specify that it needs to configure the container; we
    will create it using Docker, and also outline the steps to follow for the deployment
    process.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`jobs`内部，我们将指定它需要配置容器；我们将使用Docker创建它，并概述部署过程的步骤。
- en: 'The  `working_directory`  will be the temporal directory we will use to install
    the npm packages and run our deploy scripts. In this case, I decided to use the  `tmp`  directory,
    as follows:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`working_directory`将是我们用来安装npm包和运行部署脚本的临时目录。在这种情况下，我决定使用`tmp`目录，如下所示：'
- en: '[PRE24]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'As I said before, we will create a Docker container, and in this instance,
    I selected an existing image that includes  `node: 14.16.1`. If you want to know
    about all the available images, you can visit [https://circleci.com/docs/2.0/circleci-images](https://circleci.com/docs/2.0/circleci-images):'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '如我之前所说，我们将创建一个Docker容器，在这种情况下，我选择了一个包含`node: 14.16.1`的现有镜像。如果您想了解所有可用的镜像，您可以访问[https://circleci.com/docs/2.0/circleci-images](https://circleci.com/docs/2.0/circleci-images)：'
- en: '[PRE25]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'For the code case, first do a `git checkout` to `master`, then on each run
    sentence, you need to specify the scripts you want to run:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于代码情况，首先执行`git checkout`到`master`，然后在每个运行句子中，您需要指定要运行的脚本：
- en: '[PRE26]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Follow these steps:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤进行：
- en: First, you need to install the npm packages using `npm install` to be able to
    perform the next tasks.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，您需要使用`npm install`安装npm包，以便执行下一个任务。
- en: Execute the ESLint validation using `npm run lint`. If it fails, it will break
    the deployment process, otherwise, it continues with the next run.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`npm run lint`执行ESLint验证。如果失败，它将中断部署过程，否则将继续下一次运行。
- en: Execute the Jest validations using `npm run test`; if it fails, it will break
    the deployment process, otherwise, it continues with the next run.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`npm run test`执行Jest验证；如果失败，它将中断部署过程，否则将继续下一次运行。
- en: 'In the last step, we connect to our DigitalOcean Droplet, passing the `StrictHostKeyChecking=no`
    flag to disable the strict host key checking. We then use the `$DROPLET_USER`
    and `$DROPLET_IP` ENV variables to connect to it (we will create those in the
    next step), and finally, we will specify all the commands we will perform inside
    our Droplet using single quotes. These commands are listed as follows:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在最后一步中，我们连接到我们的DigitalOcean Droplet，传递`StrictHostKeyChecking=no`标志以禁用严格的主机密钥检查。然后，我们使用`$DROPLET_USER`和`$DROPLET_IP`
    ENV变量连接到它（我们将在下一步中创建它们），最后，我们将使用单引号指定我们将在Droplet内执行的所有命令。这些命令如下所示：
- en: '`cd produ``ction`: Grants access to the production (or your Git repository
    name).'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`cd production`：授予对生产环境（或您的Git存储库名称）的访问权限。'
- en: '`git checkout master`: This will check out the master branch.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`git checkout master`：这将检出主分支。'
- en: '`git pull`: Pulls the latest changes from our repository.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '`git pull`：从我们的存储库拉取最新更改。'
- en: '`npm run start:production`: This is the final step, which runs our project
    in production mode.'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`npm run start:production`：这是最后一步，它以生产模式运行我们的项目。'
- en: Finally, let's add some environment variables to our CircleCI.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们向CircleCI添加一些环境变量。
- en: Creating ENV variables in CircleCI
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在CircleCI中创建ENV变量
- en: 'As you saw previously, we are using the `$DROPLET_USER` and `$DROPLET_IP` variables,
    but how do we define those? Follow these steps:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 如您之前所见，我们正在使用`$DROPLET_USER`和`$DROPLET_IP`变量，但是我们如何定义这些变量呢？请按照以下步骤进行：
- en: 'You need to go to your project settings again and select the Environment Variables
    option. Then, you need to create the `DROPLET_USER` variable:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要再次转到项目设置，并选择环境变量选项。然后，您需要创建`DROPLET_USER`变量：
- en: '![](assets/535d47b9-6df3-4449-848a-db2d1f3371f2.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/535d47b9-6df3-4449-848a-db2d1f3371f2.png)'
- en: 'Then, you need to create the `DROPLET_IP` variable using your Droplet IP:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您需要使用您的Droplet IP创建`DROPLET_IP`变量：
- en: '![](assets/5870c9b9-5be2-4de3-b5ed-49dbacfba1df.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5870c9b9-5be2-4de3-b5ed-49dbacfba1df.png)'
- en: Now, you need to push the `config` file to your repository, and you will be
    ready for the magic. Now that CircleCI is connected to your repository, every
    time you push changes to master, it will fire a build.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您需要将`config`文件推送到您的存储库，然后您就可以开始使用了。现在CircleCI已连接到您的存储库，每当您将更改推送到主分支时，它都会触发一个构建。
- en: 'Normally, the first two or three builds can fail due to syntax errors, indent
    errors in our config, or maybe because we have linter errors or unit test errors.
    If you have a failure, you will see something like this:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，前两个或三个构建可能会因为语法错误、配置中的缩进错误，或者因为我们有linter错误或单元测试错误而失败。如果失败，您将看到类似于这样的内容：
- en: '![](assets/50f0c757-8068-4422-bcef-a481af65d989.png)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/50f0c757-8068-4422-bcef-a481af65d989.png)'
- en: As you can see from the preceding screenshot, the first build failures at the
    bottom say Build Error, and the second one says workflow build-deploy. This basically
    means that in the first build I had a syntax error in the `config.yml` file.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如您从上述截图中所见，第一个构建在底部失败，显示构建错误，第二个构建显示工作流构建-部署。这基本上意味着在第一个构建中，`config.yml`文件中有语法错误。
- en: 'After you fix all the syntax errors in the `config.yml` file and all the issues
    with the linter or the unit tests, you should see a SUCCESS build, like this:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您修复`config.yml`文件中的所有语法错误和linter或单元测试的所有问题后，您应该看到一个成功的构建，就像这样：
- en: '![](assets/eee20f66-2bae-4aab-aff8-88210f38dd7b.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/eee20f66-2bae-4aab-aff8-88210f38dd7b.png)'
- en: 'If you click on the build number, you can see all the steps that CircleCI executed
    before publishing the new changes in your Droplet:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您点击构建编号，您可以看到CircleCI在发布Droplet的新更改之前执行的所有步骤：
- en: '![](assets/4b667573-7ef7-465d-a428-277e3c21e3fd.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4b667573-7ef7-465d-a428-277e3c21e3fd.png)'
- en: 'As you can see, the order of the steps is the same as we specified in our `config.yml`
    file; you can even see the output of each step by clicking on it:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如您所见，步骤的顺序与我们在`config.yml`文件中指定的顺序相同；您甚至可以通过点击每个步骤来查看每个步骤的输出：
- en: '![](assets/c9005154-c317-41d9-8d36-dcc79f194f17.png)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c9005154-c317-41d9-8d36-dcc79f194f17.png)'
- en: 'Now, let''s suppose you have an error on your linter validation or in some
    unit tests. Let''s see what happen in that case, as follows:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，假设您的linter验证或某些单元测试出现错误。在这种情况下，让我们看看会发生什么，如下所示：
- en: '![](assets/c838d653-5b30-42dd-a1dc-e68417b2be39.png)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c838d653-5b30-42dd-a1dc-e68417b2be39.png)'
- en: As you can see, once an error is detected, it will exit with code `1`. This
    means it will abort the deployment and will mark it as a failure, and as you can
    see, none of the steps after `npm run lint` are executed.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，一旦检测到错误，它将以代码`1`退出。这意味着它将中止部署并将其标记为失败，如您所见，在`npm run lint`之后的步骤都没有执行。
- en: 'Another cool thing is that if you now go to your GitHub repository and check
    your commits, you will see all the commits that had a successful build and all
    the commits that had a failed build:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个很酷的事情是，如果您现在转到GitHub存储库并检查您的提交，您将看到所有成功构建的提交和所有失败构建的提交。
- en: '![](assets/8d591173-866f-43f5-bf29-3f230fc13dbd.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8d591173-866f-43f5-bf29-3f230fc13dbd.png)'
- en: This is amazing – now you have your project configured to do deployments automatically
    and it is connected to your GitHub repository.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 这太棒了-现在你的项目已经配置好自动部署，并且连接到你的GitHub仓库。
- en: Summary
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Our journey through the deployment process has come to an end, and now you know
    how to deploy your React application to the world (production), and also how to
    implement CircleCI for continuous integration.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的部署过程之旅已经结束，现在你知道如何将你的React应用部署到世界（生产环境），以及如何实现CircleCI进行持续集成。
- en: In the next chapter, we will learn how to publish `npm` packages.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何发布`npm`包。
