["```jsx\n<ul>\n <li>Carlos</li>\n  <li>Javier</li>\n</ul>\n\n<ul>\n <li>Carlos</li>\n <li>Javier</li>\n <li>Emmanuel</li>\n</ul>\n```", "```jsx\n<ul>\n <li>Carlos</li>\n  <li>Javier</li>\n</ul>\n\n<ul>\n  <li>Emmanuel</li>\n <li>Carlos</li>\n <li>Javier</li>\n</ul>\n```", "```jsx\n<ul>\n <li key=\"2018\">Carlos</li>\n  <li key=\"2019\">Javier</li>\n</ul>\n\n<ul>\n  <li key=\"2017\">Emmanuel</li>\n <li key=\"2018\">Carlos</li>\n <li key=\"2019\">Javier</li>\n</ul>\n```", "```jsx\n<li key={element.id}>{element.title}</li>\n```", "```jsx\nnew webpack.DefinePlugin({ \n  'process.env': { \n    NODE_ENV: JSON.stringify('production')\n  }\n})\n```", "```jsx\noptimization: {\n  splitChunks: {\n    cacheGroups: {\n      default: false,\n      commons: {\n        test: /node_modules/,\n        name: 'vendor',\n        chunks: 'all'\n      }\n    }\n  }\n}\n```", "```jsx\n{\n  mode: process.env.NODE_ENV === 'production' ? 'production' : \n    'development',\n}\n```", "```jsx\nmodule.exports = {\n  entry: './index.ts',\n  optimization: {\n    splitChunks: {\n      cacheGroups: {\n        default: false,\n        commons: {\n          test: /node_modules/,\n          name: 'vendor',\n          chunks: 'all'\n        }\n      }\n    }\n  },\n  plugins: [\n    new webpack.DefinePlugin({\n      'process.env': {\n        NODE_ENV: JSON.stringify('production')\n      }\n    })\n  ],\n  mode: process.env.NODE_ENV === 'production' ? 'production' : \n    'development'\n}\n```", "```jsx\nconst [state, setState] = useState({})\n\nconst obj = state.obj\n\nobj.foo = 'bar'\n\nsetState({ obj })\n```", "```jsx\nconst obj = Object.assign({}, state.obj, { foo: 'bar' })\n\nsetState({ obj })\n```", "```jsx\nconst obj = { \n  ...state.obj, \n  foo: 'bar' \n}\n\nsetState({ obj })\n```", "```jsx\nnpm install --save-dev @babel/plugin-transform-react-constant-elements\n```", "```jsx\n{ \n  \"plugins\": [\"@babel/plugin-transform-react-constant-elements\"] \n}\n```", "```jsx\nnpm install --save-dev @babel/plugin-transform-react-inline-elements\n```", "```jsx\n{\n  \"plugins\": [\"@babel/plugin-transform-react-inline-elements\"] \n}\n```"]